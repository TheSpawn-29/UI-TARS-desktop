[
  {
    "toolCallId": "call_1750095282102_gd4ro",
    "name": "browser_take_screenshot",
    "args": {
      "filename": "pr-534-files-changed-overview.png",
      "raw": false
    },
    "result": [
      {
        "type": "image",
        "data": "",
        "mimeType": "image/jpeg"
      },
      {
        "type": "text",
        "text": "- Ran Playwright code:\n```js\n// Screenshot viewport and save it as /tmp/playwright-mcp-output/2025-06-16T17-34-10.890Z/pr-534-files-changed-overview.png\nawait page.screenshot({\n  path: '/tmp/playwright-mcp-output/2025-06-16T17-34-10.890Z/pr-534-files-changed-overview.png',\n  quality: 50,\n  scale: 'css',\n  type: 'jpeg'\n});\n```\n\n- Page URL: https://github.com/bytedance/UI-TARS-desktop/pull/534/files\n- Page Title: feat(ui-tars): format error status and messages by ZhaoHeh · Pull Request #534 · bytedance/UI-TARS-desktop · GitHub\n- Page Snapshot\n```yaml\n- generic [ref=e2]:\n  - generic [ref=e3]:\n    - link \"Skip to content\" [ref=e4] [cursor=pointer]:\n      - /url: \"#start-of-content\"\n    - banner [ref=e9]:\n      - heading \"Navigation Menu\" [level=2] [ref=e10]\n      - generic [ref=e11]:\n        - link \"Homepage\" [ref=e14] [cursor=pointer]:\n          - /url: /\n          - img [ref=e15] [cursor=pointer]\n        - generic [ref=e18]:\n          - navigation \"Global\" [ref=e19]:\n            - list [ref=e20]:\n              - listitem [ref=e21]:\n                - button \"Product\" [ref=e22] [cursor=pointer]:\n                  - text: Product\n                  - img [ref=e23] [cursor=pointer]\n              - listitem [ref=e25]:\n                - button \"Solutions\" [ref=e26] [cursor=pointer]:\n                  - text: Solutions\n                  - img [ref=e27] [cursor=pointer]\n              - listitem [ref=e29]:\n                - button \"Resources\" [ref=e30] [cursor=pointer]:\n                  - text: Resources\n                  - img [ref=e31] [cursor=pointer]\n              - listitem [ref=e33]:\n                - button \"Open Source\" [ref=e34] [cursor=pointer]:\n                  - text: Open Source\n                  - img [ref=e35] [cursor=pointer]\n              - listitem [ref=e37]:\n                - button \"Enterprise\" [ref=e38] [cursor=pointer]:\n                  - text: Enterprise\n                  - img [ref=e39] [cursor=pointer]\n              - listitem [ref=e41]:\n                - link \"Pricing\" [ref=e42] [cursor=pointer]:\n                  - /url: https://github.com/pricing\n          - generic [ref=e43]:\n            - button \"Search or jump to…\" [ref=e46] [cursor=pointer]:\n              - img [ref=e48] [cursor=pointer]\n            - link \"Sign in\" [ref=e55] [cursor=pointer]:\n              - /url: /login?return_to=https%3A%2F%2Fgithub.com%2Fbytedance%2FUI-TARS-desktop%2Fpull%2F534\n            - link \"Sign up\" [ref=e56] [cursor=pointer]:\n              - /url: /signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fvoltron%2Fpull_requests_fragments%2Fpull_request_layout&source=header-repo&source_repo=bytedance%2FUI-TARS-desktop\n            - button \"Appearance settings\" [ref=e59] [cursor=pointer]:\n              - img\n  - main [ref=e68]:\n    - generic [ref=e69]:\n      - generic [ref=e70]:\n        - generic [ref=e72]:\n          - img [ref=e73]\n          - link \"bytedance\" [ref=e76] [cursor=pointer]:\n            - /url: /bytedance\n          - generic [ref=e77]: /\n          - strong [ref=e78]:\n            - link \"UI-TARS-desktop\" [ref=e79] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop\n          - generic [ref=e81]: Public\n        - generic [ref=e82]:\n          - list:\n            - listitem [ref=e84]:\n              - link \"You must be signed in to change notification settings\" [ref=e85] [cursor=pointer]:\n                - /url: /login?return_to=%2Fbytedance%2FUI-TARS-desktop\n                - img [ref=e86] [cursor=pointer]\n                - text: Notifications\n            - listitem [ref=e88]:\n              - link \"Fork 1.2k\" [ref=e89] [cursor=pointer]:\n                - /url: /login?return_to=%2Fbytedance%2FUI-TARS-desktop\n                - img [ref=e90] [cursor=pointer]\n                - text: Fork\n                - generic \"1,237\" [ref=e92] [cursor=pointer]: 1.2k\n            - listitem [ref=e93]:\n              - link \"You must be signed in to star a repository\" [ref=e95] [cursor=pointer]:\n                - /url: /login?return_to=%2Fbytedance%2FUI-TARS-desktop\n                - img [ref=e96] [cursor=pointer]\n                - generic [ref=e98] [cursor=pointer]: Star\n                - generic \"14637 users starred this repository\" [ref=e99] [cursor=pointer]: 14.6k\n      - navigation \"Repository\" [ref=e101]:\n        - list [ref=e102]:\n          - listitem [ref=e103]:\n            - link \"Code\" [ref=e104] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop\n              - img [ref=e105] [cursor=pointer]\n              - generic [ref=e107] [cursor=pointer]: Code\n          - listitem [ref=e108]:\n            - link \"Issues 160\" [ref=e109] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/issues\n              - img [ref=e110] [cursor=pointer]\n              - generic [ref=e113] [cursor=pointer]: Issues\n          - listitem [ref=e115]:\n            - link \"Pull requests 9\" [ref=e116] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/pulls\n              - img [ref=e117] [cursor=pointer]\n              - generic [ref=e119] [cursor=pointer]: Pull requests\n          - listitem [ref=e121]:\n            - link \"Discussions\" [ref=e122] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/discussions\n              - img [ref=e123] [cursor=pointer]\n              - generic [ref=e125] [cursor=pointer]: Discussions\n          - listitem [ref=e126]:\n            - link \"Actions\" [ref=e127] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/actions\n              - img [ref=e128] [cursor=pointer]\n              - generic [ref=e130] [cursor=pointer]: Actions\n          - listitem [ref=e131]:\n            - link \"Projects\" [ref=e132] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/projects\n              - img [ref=e133] [cursor=pointer]\n              - generic [ref=e135] [cursor=pointer]: Projects\n          - listitem [ref=e136]:\n            - link \"Security\" [ref=e137] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/security\n              - img [ref=e138] [cursor=pointer]\n              - generic [ref=e140] [cursor=pointer]: Security\n          - listitem [ref=e141]:\n            - link \"Insights\" [ref=e142] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/pulse\n              - img [ref=e143] [cursor=pointer]\n              - generic [ref=e145] [cursor=pointer]: Insights\n    - generic [ref=e829]:\n      - generic [ref=e830]:\n        - generic [ref=e832]:\n          - 'heading \"feat(ui-tars): format error status and messages #534\" [level=1] [ref=e833]':\n            - generic [ref=e834]: \"feat(ui-tars): format error status and messages\"\n            - generic [ref=e835]: \"#534\"\n          - group [ref=e838]:\n            - button \"New issue\" [ref=e839] [cursor=pointer]\n        - generic [ref=e840]:\n          - 'generic \"Status: Merged\" [ref=e842]':\n            - img [ref=e843]\n            - text: Merged\n          - generic [ref=e845]:\n            - link \"skychx\" [ref=e846] [cursor=pointer]:\n              - /url: /skychx\n            - text: merged 5 commits into\n            - link \"main\" [ref=e848] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/tree/main\n              - generic [ref=e849] [cursor=pointer]: main\n            - text: from\n            - link \"feat/error_message\" [ref=e852] [cursor=pointer]:\n              - /url: /bytedance/UI-TARS-desktop/tree/feat/error_message\n              - generic [ref=e853] [cursor=pointer]: feat/error_message\n            - button \"Copy\" [ref=e856]:\n              - img [ref=e857]\n            - generic \"Apr 28, 2025, 3:38 PM GMT+8\" [ref=e861]: Apr 28, 2025on Apr 28\n      - generic [ref=e862]:\n        - generic [ref=e864]:\n          - generic [ref=e865]: \"+209\"\n          - generic [ref=e866]: −51\n        - navigation \"Pull request tabs\" [ref=e873]:\n          - link \"Conversation 1\" [ref=e874] [cursor=pointer]:\n            - /url: /bytedance/UI-TARS-desktop/pull/534\n            - img [ref=e875] [cursor=pointer]\n            - text: Conversation\n          - link \"Commits 5\" [ref=e878] [cursor=pointer]:\n            - /url: /bytedance/UI-TARS-desktop/pull/534/commits\n            - img [ref=e879] [cursor=pointer]\n            - text: Commits\n          - link \"Checks 10\" [ref=e882] [cursor=pointer]:\n            - /url: /bytedance/UI-TARS-desktop/pull/534/checks\n            - img [ref=e883] [cursor=pointer]\n            - text: Checks\n          - link \"Files changed 4\" [ref=e886] [cursor=pointer]:\n            - /url: /bytedance/UI-TARS-desktop/pull/534/files\n            - img [ref=e887] [cursor=pointer]\n            - text: Files changed\n      - generic [ref=e890]:\n        - generic [ref=e894]:\n          - button \"Hide file tree\" [ref=e898] [cursor=pointer]:\n            - img [ref=e899] [cursor=pointer]\n          - group [ref=e902]:\n            - button \"Changes from all commits\" [ref=e903] [cursor=pointer]:\n              - text: Changes from\n              - strong [ref=e904] [cursor=pointer]: all commits\n          - group [ref=e906]:\n            - button \"File filter\" [ref=e907] [cursor=pointer]:\n              - strong [ref=e908] [cursor=pointer]: File filter\n          - group [ref=e910]:\n            - button \"Conversations\" [ref=e911] [cursor=pointer]:\n              - strong [ref=e912] [cursor=pointer]: Conversations\n          - group [ref=e915]:\n            - button \"Diff settings\" [ref=e916] [cursor=pointer]:\n              - img \"Diff settings\" [ref=e917] [cursor=pointer]\n        - generic [ref=e924]:\n          - generic [ref=e926]:\n            - generic [ref=e927]:\n              - textbox \"Filter changed files\" [ref=e928]\n              - img\n            - navigation \"File Tree Navigation\" [ref=e933]:\n              - tree \"File Tree\" [ref=e934]:\n                - treeitem \"apps/ui-tars/src\" [level=1] [ref=e935]:\n                  - button \"apps/ui-tars/src\" [expanded] [ref=e936] [cursor=pointer]:\n                    - generic:\n                      - img\n                    - generic:\n                      - img\n                    - generic [ref=e943] [cursor=pointer]: apps/ui-tars/src\n                  - group [ref=e944]:\n                    - treeitem \"main/services\" [level=2] [ref=e945]:\n                      - button \"main/services\" [expanded] [ref=e946] [cursor=pointer]:\n                        - generic:\n                          - img\n                        - generic:\n                          - img\n                        - generic [ref=e953] [cursor=pointer]: main/services\n                      - group [ref=e954]:\n                        - treeitem \"runAgent.ts\" [level=3] [ref=e955]:\n                          - link \"runAgent.ts\" [ref=e956] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - generic:\n                              - img\n                            - generic: runAgent.ts\n                            - generic:\n                              - img\n                    - treeitem \"renderer/src/components/RunMessages\" [level=2] [ref=e964]:\n                      - button \"renderer/src/components/RunMessages\" [expanded] [ref=e965] [cursor=pointer]:\n                        - generic:\n                          - img\n                        - generic:\n                          - img\n                        - generic [ref=e972] [cursor=pointer]: renderer/src/components/RunMessages\n                      - group [ref=e973]:\n                        - treeitem \"Messages.tsx\" [level=3] [ref=e974]:\n                          - link \"Messages.tsx\" [ref=e975] [cursor=pointer]:\n                            - /url: \"#diff-2d3eda1d8a1a6fb19a767875bd319ce455c69031b3424038e1bf88888ef25e0c\"\n                            - generic:\n                              - img\n                            - generic: Messages.tsx\n                            - generic:\n                              - img\n                - treeitem \"packages/ui-tars\" [level=1] [ref=e983]:\n                  - button \"packages/ui-tars\" [expanded] [ref=e984] [cursor=pointer]:\n                    - generic:\n                      - img\n                    - generic:\n                      - img\n                    - generic [ref=e991] [cursor=pointer]: packages/ui-tars\n                  - group [ref=e992]:\n                    - treeitem \"sdk/src\" [level=2] [ref=e993]:\n                      - button \"sdk/src\" [expanded] [ref=e994] [cursor=pointer]:\n                        - generic:\n                          - img\n                        - generic:\n                          - img\n                        - generic [ref=e1001] [cursor=pointer]: sdk/src\n                      - group [ref=e1002]:\n                        - treeitem \"GUIAgent.ts\" [level=3] [ref=e1003]:\n                          - link \"GUIAgent.ts\" [ref=e1004] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - generic:\n                              - img\n                            - generic: GUIAgent.ts\n                            - generic:\n                              - img\n                    - treeitem \"shared/src/types\" [level=2] [ref=e1012]:\n                      - button \"shared/src/types\" [expanded] [ref=e1013] [cursor=pointer]:\n                        - generic:\n                          - img\n                        - generic:\n                          - img\n                        - generic [ref=e1020] [cursor=pointer]: shared/src/types\n                      - group [ref=e1021]:\n                        - treeitem \"agent.ts\" [level=3] [ref=e1022]:\n                          - link \"agent.ts\" [ref=e1023] [cursor=pointer]:\n                            - /url: \"#diff-43cb91a5834423602beb26b90c4cd2cc97c4dedfaa7674bac56c95dbc4a81157\"\n                            - generic:\n                              - img\n                            - generic: agent.ts\n                            - generic:\n                              - img\n          - generic [ref=e1031]:\n            - generic [ref=e1032]:\n              - generic [ref=e1033]:\n                - generic [ref=e1035]:\n                  - generic [ref=e1036]:\n                    - generic [ref=e1037]:\n                      - button \"Toggle diff contents\" [expanded] [ref=e1038] [cursor=pointer]:\n                        - img [ref=e1039] [cursor=pointer]\n                      - button \"Expand all\" [ref=e1042] [cursor=pointer]:\n                        - img \"Expand all\" [ref=e1043] [cursor=pointer]\n                      - generic [ref=e1045]: \"18 changes: 14 additions & 4 deletions\"\n                      - generic [ref=e1046]: \"18\"\n                      - generic [ref=e1052]:\n                        - link \"apps/ui-tars/src/main/services/runAgent.ts\" [ref=e1053] [cursor=pointer]:\n                          - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                        - button \"Copy\" [ref=e1055]:\n                          - img [ref=e1056]\n                    - group [ref=e1062]:\n                      - button \"Show options\" [ref=e1063] [cursor=pointer]:\n                        - img \"Show options\" [ref=e1065] [cursor=pointer]\n                  - table [ref=e1070]:\n                    - rowgroup [ref=e1071]:\n                      - row \"Original file line number Diff line number Diff line change\" [ref=e1072]:\n                        - columnheader \"Original file line number\" [ref=e1073]\n                        - columnheader \"Diff line number\" [ref=e1074]\n                        - columnheader \"Diff line change\" [ref=e1075]\n                    - rowgroup [ref=e1076]:\n                      - row \"Expand Up @@ -63,7 +63,7 @@ export const runAgent = async (\" [ref=e1077]:\n                        - cell \"Expand Up\" [ref=e1078] [cursor=pointer]:\n                          - link \"Expand Up\" [ref=e1079] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - img [ref=e1080] [cursor=pointer]\n                        - cell \"@@ -63,7 +63,7 @@ export const runAgent = async (\" [ref=e1082]\n                      - 'row \"63 63 }) => {\" [ref=e1083]':\n                        - cell \"63\" [ref=e1084] [cursor=pointer]\n                        - cell \"63\" [ref=e1085] [cursor=pointer]\n                        - 'cell \"}) => {\" [ref=e1086]':\n                          - generic [ref=e1087]:\n                            - generic [ref=e3618]: \"}\"\n                            - generic [ref=e3619]: )\n                            - generic [ref=e3620]: =>\n                            - generic [ref=e3621]: \"{\"\n                      - row \"64 64 const lastConv = getState().messages[getState().messages.length - 1];\" [ref=e1088]:\n                        - cell \"64\" [ref=e1089] [cursor=pointer]\n                        - cell \"64\" [ref=e1090] [cursor=pointer]\n                        - cell \"const lastConv = getState().messages[getState().messages.length - 1];\" [ref=e1091]:\n                          - generic [ref=e1092]:\n                            - generic [ref=e3622]: const\n                            - generic [ref=e3623]: lastConv\n                            - generic [ref=e3624]: =\n                            - generic [ref=e3625]: getState\n                            - generic [ref=e3626]: (\n                            - generic [ref=e3627]: )\n                            - generic [ref=e3628]: .\n                            - generic [ref=e3629]: messages\n                            - generic [ref=e3630]: \"[\"\n                            - generic [ref=e3631]: getState\n                            - generic [ref=e3632]: (\n                            - generic [ref=e3633]: )\n                            - generic [ref=e3634]: .\n                            - generic [ref=e3635]: messages\n                            - generic [ref=e3636]: .\n                            - generic [ref=e3637]: length\n                            - generic [ref=e3638]: \"-\"\n                            - generic [ref=e3639]: \"1\"\n                            - generic [ref=e3640]: \"]\"\n                            - generic [ref=e3641]: ;\n                      - 'row \"65 65 const { status, conversations, ...restUserData } = data;\" [ref=e1093]':\n                        - cell \"65\" [ref=e1094] [cursor=pointer]\n                        - cell \"65\" [ref=e1095] [cursor=pointer]\n                        - 'cell \"const { status, conversations, ...restUserData } = data;\" [ref=e1096]':\n                          - generic [ref=e1097]:\n                            - generic [ref=e3642]: const\n                            - generic [ref=e3643]: \"{\"\n                            - text: status\n                            - generic [ref=e3644]: \",\"\n                            - text: conversations\n                            - generic [ref=e3645]: \",\"\n                            - text: ...\n                            - generic [ref=e3646]: restUserData\n                            - generic [ref=e3647]: \"}\"\n                            - generic [ref=e3648]: =\n                            - generic [ref=e3649]: data\n                            - generic [ref=e3650]: ;\n                      - row \"66 - logger.info('[status]', status, conversations.length);\" [ref=e1098]:\n                        - cell \"66\" [ref=e1099] [cursor=pointer]\n                        - cell [ref=e1100] [cursor=pointer]\n                        - cell \"- logger.info('[status]', status, conversations.length);\" [ref=e1101]:\n                          - generic [ref=e1102]:\n                            - text: \"-\"\n                            - generic [ref=e3651]: logger\n                            - generic [ref=e3652]: .\n                            - generic [ref=e3653]: info\n                            - generic [ref=e3654]: (\n                            - generic [ref=e3655]:\n                              - text: \"'[\"\n                              - generic [ref=e3656]: status]\n                              - text: \"'\"\n                            - generic [ref=e3657]: \",\"\n                            - generic [ref=e3658]: status\n                            - generic [ref=e3659]: \",\"\n                            - generic [ref=e3660]: conversations\n                            - generic [ref=e3661]: .\n                            - generic [ref=e3662]: length\n                            - generic [ref=e3663]: )\n                            - generic [ref=e3664]: ;\n                      - row \"66 + logger.info('[onGUIAgentData] status', status, conversations.length);\" [ref=e1104]:\n                        - cell [ref=e1105] [cursor=pointer]\n                        - cell \"66\" [ref=e1106] [cursor=pointer]\n                        - cell \"+ logger.info('[onGUIAgentData] status', status, conversations.length);\" [ref=e1107]:\n                          - generic [ref=e1108]:\n                            - text: +\n                            - generic [ref=e3665]: logger\n                            - generic [ref=e3666]: .\n                            - generic [ref=e3667]: info\n                            - generic [ref=e3668]: (\n                            - generic [ref=e3669]:\n                              - text: \"'[\"\n                              - generic [ref=e3670]: onGUIAgentData] status\n                              - text: \"'\"\n                            - generic [ref=e3671]: \",\"\n                            - generic [ref=e3672]: status\n                            - generic [ref=e3673]: \",\"\n                            - generic [ref=e3674]: conversations\n                            - generic [ref=e3675]: .\n                            - generic [ref=e3676]: length\n                            - generic [ref=e3677]: )\n                            - generic [ref=e3678]: ;\n                      - row \"67 67\" [ref=e1110]:\n                        - cell \"67\" [ref=e1111] [cursor=pointer]\n                        - cell \"67\" [ref=e1112] [cursor=pointer]\n                        - cell [ref=e1113]\n                      - row \"68 68 // add SoM to conversations\" [ref=e1116]:\n                        - cell \"68\" [ref=e1117] [cursor=pointer]\n                        - cell \"68\" [ref=e1118] [cursor=pointer]\n                        - cell \"// add SoM to conversations\" [ref=e1119]:\n                          - generic [ref=e3680]: // add SoM to conversations\n                      - 'row \"69 69 const conversationsWithSoM: ConversationWithSoM[] = await Promise.all(\" [ref=e1121]':\n                        - cell \"69\" [ref=e1122] [cursor=pointer]\n                        - cell \"69\" [ref=e1123] [cursor=pointer]\n                        - 'cell \"const conversationsWithSoM: ConversationWithSoM[] = await Promise.all(\" [ref=e1124]':\n                          - generic [ref=e1125]:\n                            - generic [ref=e3681]: const\n                            - generic [ref=e3682]: conversationsWithSoM\n                            - text: \":\"\n                            - generic [ref=e3683]: ConversationWithSoM\n                            - generic [ref=e3684]: \"[\"\n                            - generic [ref=e3685]: \"]\"\n                            - generic [ref=e3686]: =\n                            - generic [ref=e3687]: await\n                            - generic [ref=e3688]: Promise\n                            - generic [ref=e3689]: .\n                            - generic [ref=e3690]: all\n                            - generic [ref=e3691]: (\n                      - row \"Expand Down Expand Up @@ -102,7 +102,7 @@ export const runAgent = async (\" [ref=e1126]:\n                        - cell \"Expand Down Expand Up\" [ref=e1127] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e1128] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - img [ref=e1129] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e1131] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - img [ref=e1132] [cursor=pointer]\n                        - cell \"@@ -102,7 +102,7 @@ export const runAgent = async (\" [ref=e1134]\n                      - row \"102 102 ...rest\" [ref=e1135]:\n                        - cell \"102\" [ref=e1136] [cursor=pointer]\n                        - cell \"102\" [ref=e1137] [cursor=pointer]\n                        - cell \"...rest\" [ref=e1138]:\n                          - generic [ref=e1139]:\n                            - text: ...\n                            - generic [ref=e3692]: rest\n                      - 'row \"103 103 } = conversationsWithSoM?.[conversationsWithSoM.length - 1] || {};\" [ref=e1140]':\n                        - cell \"103\" [ref=e1141] [cursor=pointer]\n                        - cell \"103\" [ref=e1142] [cursor=pointer]\n                        - 'cell \"} = conversationsWithSoM?.[conversationsWithSoM.length - 1] || {};\" [ref=e1143]':\n                          - generic [ref=e1144]:\n                            - generic [ref=e3693]: \"}\"\n                            - generic [ref=e3694]: =\n                            - generic [ref=e3695]: conversationsWithSoM\n                            - generic [ref=e3696]: \"?.\"\n                            - generic [ref=e3697]: \"[\"\n                            - generic [ref=e3698]: conversationsWithSoM\n                            - generic [ref=e3699]: .\n                            - generic [ref=e3700]: length\n                            - generic [ref=e3701]: \"-\"\n                            - generic [ref=e3702]: \"1\"\n                            - generic [ref=e3703]: \"]\"\n                            - generic [ref=e3704]: \"||\"\n                            - generic [ref=e3705]: \"{\"\n                            - generic [ref=e3706]: \"}\"\n                            - generic [ref=e3707]: ;\n                      - row \"104 104 logger.info(\" [ref=e1145]:\n                        - cell \"104\" [ref=e1146] [cursor=pointer]\n                        - cell \"104\" [ref=e1147] [cursor=pointer]\n                        - cell \"logger.info(\" [ref=e1148]:\n                          - generic [ref=e1149]:\n                            - generic [ref=e3708]: logger\n                            - generic [ref=e3709]: .\n                            - generic [ref=e3710]: info\n                            - generic [ref=e3711]: (\n                      - row \"105 - '======data======\\\\n',\" [ref=e1150]:\n                        - cell \"105\" [ref=e1151] [cursor=pointer]\n                        - cell [ref=e1152] [cursor=pointer]\n                        - cell \"- '======data======\\\\n',\" [ref=e1153]:\n                          - generic [ref=e1154]:\n                            - text: \"-\"\n                            - generic [ref=e3712]: \"'======data======\\\\n'\"\n                            - generic [ref=e3713]: \",\"\n                      - row \"105 + '[onGUIAgentData] ======data======\\\\n',\" [ref=e1155]:\n                        - cell [ref=e1156] [cursor=pointer]\n                        - cell \"105\" [ref=e1157] [cursor=pointer]\n                        - cell \"+ '[onGUIAgentData] ======data======\\\\n',\" [ref=e1158]:\n                          - generic [ref=e1159]:\n                            - text: +\n                            - generic [ref=e3714]:\n                              - text: \"'\"\n                              - generic [ref=e3715]: \"[onGUIAgentData]\"\n                              - text: ======data======\\n'\n                            - generic [ref=e3716]: \",\"\n                      - row \"106 106 predictionParsed,\" [ref=e1161]:\n                        - cell \"106\" [ref=e1162] [cursor=pointer]\n                        - cell \"106\" [ref=e1163] [cursor=pointer]\n                        - cell \"predictionParsed,\" [ref=e1164]:\n                          - generic [ref=e1165]:\n                            - generic [ref=e3717]: predictionParsed\n                            - generic [ref=e3718]: \",\"\n                      - row \"107 107 screenshotContext,\" [ref=e1166]:\n                        - cell \"107\" [ref=e1167] [cursor=pointer]\n                        - cell \"107\" [ref=e1168] [cursor=pointer]\n                        - cell \"screenshotContext,\" [ref=e1169]:\n                          - generic [ref=e1170]:\n                            - generic [ref=e3719]: screenshotContext\n                            - generic [ref=e3720]: \",\"\n                      - row \"108 108 rest,\" [ref=e1171]:\n                        - cell \"108\" [ref=e1172] [cursor=pointer]\n                        - cell \"108\" [ref=e1173] [cursor=pointer]\n                        - cell \"rest,\" [ref=e1174]:\n                          - generic [ref=e1175]:\n                            - generic [ref=e3721]: rest\n                            - generic [ref=e3722]: \",\"\n                      - row \"Expand Down Expand Up @@ -165,8 +165,18 @@ export const runAgent = async (\" [ref=e1176]:\n                        - cell \"Expand Down Expand Up\" [ref=e1177] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e1178] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - img [ref=e1179] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e1181] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - img [ref=e1182] [cursor=pointer]\n                        - cell \"@@ -165,8 +165,18 @@ export const runAgent = async (\" [ref=e1184]\n                      - 'row \"165 165 signal: abortController?.signal,\" [ref=e1185]':\n                        - cell \"165\" [ref=e1186] [cursor=pointer]\n                        - cell \"165\" [ref=e1187] [cursor=pointer]\n                        - 'cell \"signal: abortController?.signal,\" [ref=e1188]':\n                          - generic [ref=e1189]:\n                            - generic [ref=e3723]: signal\n                            - text: \":\"\n                            - generic [ref=e3724]: abortController\n                            - generic [ref=e3725]: \"?.\"\n                            - generic [ref=e3726]: signal\n                            - generic [ref=e3727]: \",\"\n                      - 'row \"166 166 operator: operator,\" [ref=e1190]':\n                        - cell \"166\" [ref=e1191] [cursor=pointer]\n                        - cell \"166\" [ref=e1192] [cursor=pointer]\n                        - 'cell \"operator: operator,\" [ref=e1193]':\n                          - generic [ref=e1194]:\n                            - generic [ref=e3728]: operator\n                            - text: \":\"\n                            - generic [ref=e3729]: operator\n                            - generic [ref=e3730]: \",\"\n                      - 'row \"167 167 onData: handleData,\" [ref=e1195]':\n                        - cell \"167\" [ref=e1196] [cursor=pointer]\n                        - cell \"167\" [ref=e1197] [cursor=pointer]\n                        - 'cell \"onData: handleData,\" [ref=e1198]':\n                          - generic [ref=e1199]:\n                            - generic [ref=e3731]: onData\n                            - text: \":\"\n                            - generic [ref=e3732]: handleData\n                            - generic [ref=e3733]: \",\"\n                      - 'row \"168 - onError: ({ error }) => {\" [ref=e1200]':\n                        - cell \"168\" [ref=e1201] [cursor=pointer]\n                        - cell [ref=e1202] [cursor=pointer]\n                        - 'cell \"- onError: ({ error }) => {\" [ref=e1203]':\n                          - generic [ref=e1204]:\n                            - text: \"-\"\n                            - generic [ref=e3734]: onError\n                            - text: \":\"\n                            - generic [ref=e3735]: (\n                            - generic [ref=e3736]: \"{\"\n                            - text: error\n                            - generic [ref=e3737]: \"}\"\n                            - generic [ref=e3738]: )\n                            - generic [ref=e3739]: =>\n                            - generic [ref=e3740]: \"{\"\n                      - row \"169 - logger.error('[runAgent error]', settings, error);\" [ref=e1205]:\n                        - cell \"169\" [ref=e1206] [cursor=pointer]\n                        - cell [ref=e1207] [cursor=pointer]\n                        - cell \"- logger.error('[runAgent error]', settings, error);\" [ref=e1208]:\n                          - generic [ref=e1209]:\n                            - text: \"-\"\n                            - generic [ref=e3741]: logger\n                            - generic [ref=e3742]: .\n                            - generic [ref=e3743]: error\n                            - generic [ref=e3744]: (\n                            - generic [ref=e3745]: \"'[runAgent error]'\"\n                            - generic [ref=e3746]: \",\"\n                            - generic [ref=e3747]: settings\n                            - generic [ref=e3748]: \",\"\n                            - generic [ref=e3749]: error\n                            - generic [ref=e3750]: )\n                            - generic [ref=e3751]: ;\n                      - 'row \"168 + onError: (params) => {\" [ref=e1210]':\n                        - cell [ref=e1211] [cursor=pointer]\n                        - cell \"168\" [ref=e1212] [cursor=pointer]\n                        - 'cell \"+ onError: (params) => {\" [ref=e1213]':\n                          - generic [ref=e1214]:\n                            - text: +\n                            - generic [ref=e3752]: onError\n                            - text: \":\"\n                            - generic [ref=e3753]: (\n                            - generic [ref=e3754]: params\n                            - generic [ref=e3755]: )\n                            - generic [ref=e3756]: =>\n                            - generic [ref=e3757]: \"{\"\n                      - 'row \"169 + const { error } = params;\" [ref=e1215]':\n                        - cell [ref=e1216] [cursor=pointer]\n                        - cell \"169\" [ref=e1217] [cursor=pointer]\n                        - 'cell \"+ const { error } = params;\" [ref=e1218]':\n                          - generic [ref=e1219]:\n                            - text: +\n                            - generic [ref=e3758]: const\n                            - generic [ref=e3759]: \"{\"\n                            - text: error\n                            - generic [ref=e3760]: \"}\"\n                            - generic [ref=e3761]: =\n                            - generic [ref=e3762]: params\n                            - generic [ref=e3763]: ;\n                      - row \"170 + logger.error('[onGUIAgentError]', settings, error);\" [ref=e1220]:\n                        - cell [ref=e1221] [cursor=pointer]\n                        - cell \"170\" [ref=e1222] [cursor=pointer]\n                        - cell \"+ logger.error('[onGUIAgentError]', settings, error);\" [ref=e1223]:\n                          - generic [ref=e1224]:\n                            - text: +\n                            - generic [ref=e3764]: logger\n                            - generic [ref=e3765]: .\n                            - generic [ref=e3766]: error\n                            - generic [ref=e3767]: (\n                            - generic [ref=e3768]: \"'[onGUIAgentError]'\"\n                            - generic [ref=e3769]: \",\"\n                            - generic [ref=e3770]: settings\n                            - generic [ref=e3771]: \",\"\n                            - generic [ref=e3772]: error\n                            - generic [ref=e3773]: )\n                            - generic [ref=e3774]: ;\n                      - 'row \"171 + setState({\" [ref=e1225]':\n                        - cell [ref=e1226] [cursor=pointer]\n                        - cell \"171\" [ref=e1227] [cursor=pointer]\n                        - 'cell \"+ setState({\" [ref=e1228]':\n                          - generic [ref=e1229]:\n                            - text: +\n                            - generic [ref=e3775]: setState\n                            - generic [ref=e3776]: (\n                            - generic [ref=e3777]: \"{\"\n                      - row \"172 + ...getState(),\" [ref=e1230]:\n                        - cell [ref=e1231] [cursor=pointer]\n                        - cell \"172\" [ref=e1232] [cursor=pointer]\n                        - cell \"+ ...getState(),\" [ref=e1233]:\n                          - generic [ref=e1234]:\n                            - text: + ...\n                            - generic [ref=e3778]: getState\n                            - generic [ref=e3779]: (\n                            - generic [ref=e3780]: )\n                            - generic [ref=e3781]: \",\"\n                      - 'row \"173 + status: StatusEnum.ERROR,\" [ref=e1235]':\n                        - cell [ref=e1236] [cursor=pointer]\n                        - cell \"173\" [ref=e1237] [cursor=pointer]\n                        - 'cell \"+ status: StatusEnum.ERROR,\" [ref=e1238]':\n                          - generic [ref=e1239]:\n                            - text: +\n                            - generic [ref=e3782]: status\n                            - text: \":\"\n                            - generic [ref=e3783]: StatusEnum\n                            - generic [ref=e3784]: .\n                            - generic [ref=e3785]: ERROR\n                            - generic [ref=e3786]: \",\"\n                      - 'row \"174 + errorMsg: JSON.stringify({\" [ref=e1240]':\n                        - cell [ref=e1241] [cursor=pointer]\n                        - cell \"174\" [ref=e1242] [cursor=pointer]\n                        - 'cell \"+ errorMsg: JSON.stringify({\" [ref=e1243]':\n                          - generic [ref=e1244]:\n                            - text: +\n                            - generic [ref=e3787]: errorMsg\n                            - text: \":\"\n                            - generic [ref=e3788]: JSON\n                            - generic [ref=e3789]: .\n                            - generic [ref=e3790]: stringify\n                            - generic [ref=e3791]: (\n                            - generic [ref=e3792]: \"{\"\n                      - 'row \"175 + status: error.status,\" [ref=e1245]':\n                        - cell [ref=e1246] [cursor=pointer]\n                        - cell \"175\" [ref=e1247] [cursor=pointer]\n                        - 'cell \"+ status: error.status,\" [ref=e1248]':\n                          - generic [ref=e1249]:\n                            - text: +\n                            - generic [ref=e3793]: status\n                            - text: \":\"\n                            - generic [ref=e3794]: error\n                            - generic [ref=e3795]: .\n                            - generic [ref=e3796]: status\n                            - generic [ref=e3797]: \",\"\n                      - 'row \"176 + message: error.message,\" [ref=e1250]':\n                        - cell [ref=e1251] [cursor=pointer]\n                        - cell \"176\" [ref=e1252] [cursor=pointer]\n                        - 'cell \"+ message: error.message,\" [ref=e1253]':\n                          - generic [ref=e1254]:\n                            - text: +\n                            - generic [ref=e3798]: message\n                            - text: \":\"\n                            - generic [ref=e3799]: error\n                            - generic [ref=e3800]: .\n                            - generic [ref=e3801]: message\n                            - generic [ref=e3802]: \",\"\n                      - 'row \"177 + stack: error.stack,\" [ref=e1255]':\n                        - cell [ref=e1256] [cursor=pointer]\n                        - cell \"177\" [ref=e1257] [cursor=pointer]\n                        - 'cell \"+ stack: error.stack,\" [ref=e1258]':\n                          - generic [ref=e1259]:\n                            - text: +\n                            - generic [ref=e3803]: stack\n                            - text: \":\"\n                            - generic [ref=e3804]: error\n                            - generic [ref=e3805]: .\n                            - generic [ref=e3806]: stack\n                            - generic [ref=e3807]: \",\"\n                      - 'row \"178 + }),\" [ref=e1260]':\n                        - cell [ref=e1261] [cursor=pointer]\n                        - cell \"178\" [ref=e1262] [cursor=pointer]\n                        - 'cell \"+ }),\" [ref=e1263]':\n                          - generic [ref=e1264]:\n                            - text: +\n                            - generic [ref=e3808]: \"}\"\n                            - generic [ref=e3809]: )\n                            - generic [ref=e3810]: \",\"\n                      - 'row \"179 + });\" [ref=e1265]':\n                        - cell [ref=e1266] [cursor=pointer]\n                        - cell \"179\" [ref=e1267] [cursor=pointer]\n                        - 'cell \"+ });\" [ref=e1268]':\n                          - generic [ref=e1269]:\n                            - text: +\n                            - generic [ref=e3811]: \"}\"\n                            - generic [ref=e3812]: )\n                            - generic [ref=e3813]: ;\n                      - 'row \"170 180 },\" [ref=e1270]':\n                        - cell \"170\" [ref=e1271] [cursor=pointer]\n                        - cell \"180\" [ref=e1272] [cursor=pointer]\n                        - 'cell \"},\" [ref=e1273]':\n                          - generic [ref=e1274]:\n                            - generic [ref=e3814]: \"}\"\n                            - generic [ref=e3815]: \",\"\n                      - 'row \"171 181 retry: {\" [ref=e1275]':\n                        - cell \"171\" [ref=e1276] [cursor=pointer]\n                        - cell \"181\" [ref=e1277] [cursor=pointer]\n                        - 'cell \"retry: {\" [ref=e1278]':\n                          - generic [ref=e1279]:\n                            - generic [ref=e3816]: retry\n                            - text: \":\"\n                            - generic [ref=e3817]: \"{\"\n                      - 'row \"172 182 model: {\" [ref=e1280]':\n                        - cell \"172\" [ref=e1281] [cursor=pointer]\n                        - cell \"182\" [ref=e1282] [cursor=pointer]\n                        - 'cell \"model: {\" [ref=e1283]':\n                          - generic [ref=e1284]:\n                            - generic [ref=e3818]: model\n                            - text: \":\"\n                            - generic [ref=e3819]: \"{\"\n                      - row \"Expand Down\" [ref=e1285]:\n                        - cell \"Expand Down\" [ref=e1286] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e1287] [cursor=pointer]:\n                            - /url: \"#diff-c1d1f354fc5f84c944c4a9676c7bd9be910b8d875798ed6f2c6c34b5854f7c13\"\n                            - img [ref=e1288] [cursor=pointer]\n                        - cell [ref=e1290]\n                - generic [ref=e1292]:\n                  - generic [ref=e1293]:\n                    - generic [ref=e1294]:\n                      - button \"Toggle diff contents\" [expanded] [ref=e1295] [cursor=pointer]:\n                        - img [ref=e1296] [cursor=pointer]\n                      - button \"Expand all\" [ref=e1299] [cursor=pointer]:\n                        - img \"Expand all\" [ref=e1300] [cursor=pointer]\n                      - generic [ref=e1302]: \"32 changes: 30 additions & 2 deletions\"\n                      - generic [ref=e1303]: \"32\"\n                      - generic [ref=e1309]:\n                        - link \"apps/ui-tars/src/renderer/src/components/RunMessages/Messages.tsx\" [ref=e1310] [cursor=pointer]:\n                          - /url: \"#diff-2d3eda1d8a1a6fb19a767875bd319ce455c69031b3424038e1bf88888ef25e0c\"\n                        - button \"Copy\" [ref=e1312]:\n                          - img [ref=e1313]\n                    - group [ref=e1319]:\n                      - button \"Show options\" [ref=e1320] [cursor=pointer]:\n                        - img \"Show options\" [ref=e1322] [cursor=pointer]\n                  - table [ref=e1327]:\n                    - rowgroup [ref=e1328]:\n                      - row \"Original file line number Diff line number Diff line change\" [ref=e1329]:\n                        - columnheader \"Original file line number\" [ref=e1330]\n                        - columnheader \"Diff line number\" [ref=e1331]\n                        - columnheader \"Diff line change\" [ref=e1332]\n                    - rowgroup [ref=e1333]:\n                      - row \"Expand Up @@ -4,6 +4,7 @@\" [ref=e1334]:\n                        - cell \"Expand Up\" [ref=e1335] [cursor=pointer]:\n                          - link \"Expand Up\" [ref=e1336] [cursor=pointer]:\n                            - /url: \"#diff-2d3eda1d8a1a6fb19a767875bd319ce455c69031b3424038e1bf88888ef25e0c\"\n                            - img [ref=e1337] [cursor=pointer]\n                        - cell \"@@ -4,6 +4,7 @@\" [ref=e1339]\n                      - row \"4 4 */\" [ref=e1340]:\n                        - cell \"4\" [ref=e1341] [cursor=pointer]\n                        - cell \"4\" [ref=e1342] [cursor=pointer]\n                        - cell \"*/\" [ref=e1343]:\n                          - generic [ref=e3820]: \"*/\"\n                      - 'row \"5 5 import { AlertCircle, Camera, Loader2 } from ''lucide-react'';\" [ref=e1345]':\n                        - cell \"5\" [ref=e1346] [cursor=pointer]\n                        - cell \"5\" [ref=e1347] [cursor=pointer]\n                        - 'cell \"import { AlertCircle, Camera, Loader2 } from ''lucide-react'';\" [ref=e1348]':\n                          - generic [ref=e1349]:\n                            - generic [ref=e3821]: import\n                            - generic [ref=e3822]: \"{\"\n                            - generic [ref=e3823]: AlertCircle\n                            - generic [ref=e3824]: \",\"\n                            - generic [ref=e3825]: Camera\n                            - generic [ref=e3826]: \",\"\n                            - generic [ref=e3827]: Loader2\n                            - generic [ref=e3828]: \"}\"\n                            - generic [ref=e3829]: from\n                            - generic [ref=e3830]: \"'lucide-react'\"\n                            - generic [ref=e3831]: ;\n                      - 'row \"6 6 import { Button } from ''@renderer/components/ui/button'';\" [ref=e1350]':\n                        - cell \"6\" [ref=e1351] [cursor=pointer]\n                        - cell \"6\" [ref=e1352] [cursor=pointer]\n                        - 'cell \"import { Button } from ''@renderer/components/ui/button'';\" [ref=e1353]':\n                          - generic [ref=e1354]:\n                            - generic [ref=e3832]: import\n                            - generic [ref=e3833]: \"{\"\n                            - generic [ref=e3834]: Button\n                            - generic [ref=e3835]: \"}\"\n                            - generic [ref=e3836]: from\n                            - generic [ref=e3837]: \"'@renderer/components/ui/button'\"\n                            - generic [ref=e3838]: ;\n                      - 'row \"7 + import { GUIAgentError, ErrorStatusEnum } from ''@ui-tars/shared/types'';\" [ref=e1355]':\n                        - cell [ref=e1356] [cursor=pointer]\n                        - cell \"7\" [ref=e1357] [cursor=pointer]\n                        - 'cell \"+ import { GUIAgentError, ErrorStatusEnum } from ''@ui-tars/shared/types'';\" [ref=e1358]':\n                          - generic [ref=e1359]:\n                            - text: +\n                            - generic [ref=e3839]: import\n                            - generic [ref=e3840]: \"{\"\n                            - generic [ref=e3841]: GUIAgentError\n                            - generic [ref=e3842]: \",\"\n                            - generic [ref=e3843]: ErrorStatusEnum\n                            - generic [ref=e3844]: \"}\"\n                            - generic [ref=e3845]: from\n                            - generic [ref=e3846]: \"'@ui-tars/shared/types'\"\n                            - generic [ref=e3847]: ;\n                      - row \"7 8\" [ref=e1360]:\n                        - cell \"7\" [ref=e1361] [cursor=pointer]\n                        - cell \"8\" [ref=e1362] [cursor=pointer]\n                        - cell [ref=e1363]\n                      - 'row \"8 9 export const HumanTextMessage = ({ text }: { text: string }) => {\" [ref=e1366]':\n                        - cell \"8\" [ref=e1367] [cursor=pointer]\n                        - cell \"9\" [ref=e1368] [cursor=pointer]\n                        - 'cell \"export const HumanTextMessage = ({ text }: { text: string }) => {\" [ref=e1369]':\n                          - generic [ref=e1370]:\n                            - generic [ref=e3849]: export\n                            - generic [ref=e3850]: const\n                            - generic [ref=e3851]: HumanTextMessage\n                            - generic [ref=e3852]: =\n                            - generic [ref=e3853]: (\n                            - generic [ref=e3854]: \"{\"\n                            - text: text\n                            - generic [ref=e3855]: \"}\"\n                            - text: \":\"\n                            - generic [ref=e3856]: \"{\"\n                            - generic [ref=e3857]: text\n                            - text: \":\"\n                            - generic [ref=e3858]: string\n                            - generic [ref=e3859]: \"}\"\n                            - generic [ref=e3860]: )\n                            - generic [ref=e3861]: =>\n                            - generic [ref=e3862]: \"{\"\n                      - row \"9 10 return (\" [ref=e1371]:\n                        - cell \"9\" [ref=e1372] [cursor=pointer]\n                        - cell \"10\" [ref=e1373] [cursor=pointer]\n                        - cell \"return (\" [ref=e1374]:\n                          - generic [ref=e1375]:\n                            - generic [ref=e3863]: return\n                            - generic [ref=e3864]: (\n                      - 'row \"Expand All @@ -27,13 +28,40 @@ export const ScreenshotMessage = ({ onClick }: ScreenshotMessageProps) => {\" [ref=e1376]':\n                        - cell \"Expand All\" [ref=e1377] [cursor=pointer]:\n                          - link \"Expand All\" [ref=e1378] [cursor=pointer]:\n                            - /url: \"#diff-2d3eda1d8a1a6fb19a767875bd319ce455c69031b3424038e1bf88888ef25e0c\"\n                            - img [ref=e1379] [cursor=pointer]\n                        - 'cell \"@@ -27,13 +28,40 @@ export const ScreenshotMessage = ({ onClick }: ScreenshotMessageProps) => {\" [ref=e1381]'\n                      - 'row \"27 28 };\" [ref=e1382]':\n                        - cell \"27\" [ref=e1383] [cursor=pointer]\n                        - cell \"28\" [ref=e1384] [cursor=pointer]\n                        - 'cell \"};\" [ref=e1385]':\n                          - generic [ref=e1386]:\n                            - generic [ref=e3865]: \"}\"\n                            - generic [ref=e3866]: ;\n                      - row \"28 29\" [ref=e1387]:\n                        - cell \"28\" [ref=e1388] [cursor=pointer]\n                        - cell \"29\" [ref=e1389] [cursor=pointer]\n                        - cell [ref=e1390]\n                      - 'row \"29 30 export const ErrorMessage = ({ text }: { text: string }) => {\" [ref=e1393]':\n                        - cell \"29\" [ref=e1394] [cursor=pointer]\n                        - cell \"30\" [ref=e1395] [cursor=pointer]\n                        - 'cell \"export const ErrorMessage = ({ text }: { text: string }) => {\" [ref=e1396]':\n                          - generic [ref=e1397]:\n                            - generic [ref=e3868]: export\n                            - generic [ref=e3869]: const\n                            - generic [ref=e3870]: ErrorMessage\n                            - generic [ref=e3871]: =\n                            - generic [ref=e3872]: (\n                            - generic [ref=e3873]: \"{\"\n                            - text: text\n                            - generic [ref=e3874]: \"}\"\n                            - text: \":\"\n                            - generic [ref=e3875]: \"{\"\n                            - generic [ref=e3876]: text\n                            - text: \":\"\n                            - generic [ref=e3877]: string\n                            - generic [ref=e3878]: \"}\"\n                            - generic [ref=e3879]: )\n                            - generic [ref=e3880]: =>\n                            - generic [ref=e3881]: \"{\"\n                      - 'row \"31 + let parsedError: GUIAgentError | null = null;\" [ref=e1398]':\n                        - cell [ref=e1399] [cursor=pointer]\n                        - cell \"31\" [ref=e1400] [cursor=pointer]\n                        - 'cell \"+ let parsedError: GUIAgentError | null = null;\" [ref=e1401]':\n                          - generic [ref=e1402]:\n                            - text: +\n                            - generic [ref=e3882]: let\n                            - generic [ref=e3883]: parsedError\n                            - text: \":\"\n                            - generic [ref=e3884]: GUIAgentError\n                            - generic [ref=e3885]: \"|\"\n                            - generic [ref=e3886]: \"null\"\n                            - generic [ref=e3887]: =\n                            - generic [ref=e3888]: \"null\"\n                            - generic [ref=e3889]: ;\n                      - 'row \"32 + try {\" [ref=e1403]':\n                        - cell [ref=e1404] [cursor=pointer]\n                        - cell \"32\" [ref=e1405] [cursor=pointer]\n                        - 'cell \"+ try {\" [ref=e1406]':\n                          - generic [ref=e1407]:\n                            - text: +\n                            - generic [ref=e3890]: try\n                            - generic [ref=e3891]: \"{\"\n                      - row \"33 + const parsed = JSON.parse(text);\" [ref=e1408]:\n                        - cell [ref=e1409] [cursor=pointer]\n                        - cell \"33\" [ref=e1410] [cursor=pointer]\n                        - cell \"+ const parsed = JSON.parse(text);\" [ref=e1411]:\n                          - generic [ref=e1412]:\n                            - text: +\n                            - generic [ref=e3892]: const\n                            - generic [ref=e3893]: parsed\n                            - generic [ref=e3894]: =\n                            - generic [ref=e3895]: JSON\n                            - generic [ref=e3896]: .\n                            - generic [ref=e3897]: parse\n                            - generic [ref=e3898]: (\n                            - generic [ref=e3899]: text\n                            - generic [ref=e3900]: )\n                            - generic [ref=e3901]: ;\n                      - 'row \"34 + if (parsed && typeof parsed === ''object'' && ''status'' in parsed) {\" [ref=e1413]':\n                        - cell [ref=e1414] [cursor=pointer]\n                        - cell \"34\" [ref=e1415] [cursor=pointer]\n                        - 'cell \"+ if (parsed && typeof parsed === ''object'' && ''status'' in parsed) {\" [ref=e1416]':\n                          - generic [ref=e1417]:\n                            - text: +\n                            - generic [ref=e3902]: if\n                            - generic [ref=e3903]: (\n                            - generic [ref=e3904]: parsed\n                            - generic [ref=e3905]: \"&&\"\n                            - generic [ref=e3906]: typeof\n                            - generic [ref=e3907]: parsed\n                            - generic [ref=e3908]: ===\n                            - generic [ref=e3909]: \"'object'\"\n                            - generic [ref=e3910]: \"&&\"\n                            - generic [ref=e3911]: \"'status'\"\n                            - generic [ref=e3912]: in\n                            - generic [ref=e3913]: parsed\n                            - generic [ref=e3914]: )\n                            - generic [ref=e3915]: \"{\"\n                      - row \"35 + parsedError = parsed as GUIAgentError;\" [ref=e1418]:\n                        - cell [ref=e1419] [cursor=pointer]\n                        - cell \"35\" [ref=e1420] [cursor=pointer]\n                        - cell \"+ parsedError = parsed as GUIAgentError;\" [ref=e1421]:\n                          - generic [ref=e1422]:\n                            - text: +\n                            - generic [ref=e3916]: parsedError\n                            - generic [ref=e3917]: =\n                            - generic [ref=e3918]: parsed\n                            - generic [ref=e3919]: as\n                            - generic [ref=e3920]: GUIAgentError\n                            - generic [ref=e3921]: ;\n                      - 'row \"36 + }\" [ref=e1423]':\n                        - cell [ref=e1424] [cursor=pointer]\n                        - cell \"36\" [ref=e1425] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e1426]':\n                          - generic [ref=e1427]:\n                            - text: +\n                            - generic [ref=e3922]: \"}\"\n                      - 'row \"37 + } catch {\" [ref=e1428]':\n                        - cell [ref=e1429] [cursor=pointer]\n                        - cell \"37\" [ref=e1430] [cursor=pointer]\n                        - 'cell \"+ } catch {\" [ref=e1431]':\n                          - generic [ref=e1432]:\n                            - text: +\n                            - generic [ref=e3923]: \"}\"\n                            - generic [ref=e3924]: catch\n                            - generic [ref=e3925]: \"{\"\n                      - row \"38 + // ignore\" [ref=e1433]:\n                        - cell [ref=e1434] [cursor=pointer]\n                        - cell \"38\" [ref=e1435] [cursor=pointer]\n                        - cell \"+ // ignore\" [ref=e1436]:\n                          - generic [ref=e1437]:\n                            - text: +\n                            - generic [ref=e3926]: // ignore\n                      - 'row \"39 + }\" [ref=e1438]':\n                        - cell [ref=e1439] [cursor=pointer]\n                        - cell \"39\" [ref=e1440] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e1441]':\n                          - generic [ref=e1442]:\n                            - text: +\n                            - generic [ref=e3927]: \"}\"\n                      - row \"40 +\" [ref=e1443]:\n                        - cell [ref=e1444] [cursor=pointer]\n                        - cell \"40\" [ref=e1445] [cursor=pointer]\n                        - cell \"+\" [ref=e1446]:\n                          - generic: +\n                      - row \"30 41 return (\" [ref=e1449]:\n                        - cell \"30\" [ref=e1450] [cursor=pointer]\n                        - cell \"41\" [ref=e1451] [cursor=pointer]\n                        - cell \"return (\" [ref=e1452]:\n                          - generic [ref=e1453]:\n                            - generic [ref=e3929]: return\n                            - generic [ref=e3930]: (\n                      - row \"31 42 <div className=\\\"flex flex-col gap-2 my-4 p-4 bg-red-500/10 border border-red-500/20 rounded-lg\\\">\" [ref=e1454]:\n                        - cell \"31\" [ref=e1455] [cursor=pointer]\n                        - cell \"42\" [ref=e1456] [cursor=pointer]\n                        - cell \"<div className=\\\"flex flex-col gap-2 my-4 p-4 bg-red-500/10 border border-red-500/20 rounded-lg\\\">\" [ref=e1457]:\n                          - generic [ref=e1458]:\n                            - generic [ref=e3931]: <\n                            - generic [ref=e3932]: div\n                            - generic [ref=e3933]: className\n                            - generic [ref=e3934]: =\n                            - generic [ref=e3935]: \"\\\"flex flex-col gap-2 my-4 p-4 bg-red-500/10 border border-red-500/20 rounded-lg\\\"\"\n                            - generic [ref=e3936]: \">\"\n                      - row \"32 43 <div className=\\\"flex items-center gap-2\\\">\" [ref=e1459]:\n                        - cell \"32\" [ref=e1460] [cursor=pointer]\n                        - cell \"43\" [ref=e1461] [cursor=pointer]\n                        - cell \"<div className=\\\"flex items-center gap-2\\\">\" [ref=e1462]:\n                          - generic [ref=e1463]:\n                            - generic [ref=e3937]: <\n                            - generic [ref=e3938]: div\n                            - generic [ref=e3939]: className\n                            - generic [ref=e3940]: =\n                            - generic [ref=e3941]: \"\\\"flex items-center gap-2\\\"\"\n                            - generic [ref=e3942]: \">\"\n                      - row \"33 44 <AlertCircle className=\\\"w-5 h-5 text-red-500 shrink-0\\\" />\" [ref=e1464]:\n                        - cell \"33\" [ref=e1465] [cursor=pointer]\n                        - cell \"44\" [ref=e1466] [cursor=pointer]\n                        - cell \"<AlertCircle className=\\\"w-5 h-5 text-red-500 shrink-0\\\" />\" [ref=e1467]:\n                          - generic [ref=e1468]:\n                            - generic [ref=e3943]: <\n                            - generic [ref=e3944]: AlertCircle\n                            - generic [ref=e3945]: className\n                            - generic [ref=e3946]: =\n                            - generic [ref=e3947]: \"\\\"w-5 h-5 text-red-500 shrink-0\\\"\"\n                            - generic [ref=e3948]: />\n                      - row \"34 - <span className=\\\"font-medium text-red-500\\\">Error</span>\" [ref=e1469]:\n                        - cell \"34\" [ref=e1470] [cursor=pointer]\n                        - cell [ref=e1471] [cursor=pointer]\n                        - cell \"- <span className=\\\"font-medium text-red-500\\\">Error</span>\" [ref=e1472]:\n                          - generic [ref=e1473]:\n                            - text: \"-\"\n                            - generic [ref=e3949]: <\n                            - generic [ref=e3950]: span\n                            - generic [ref=e3951]: className\n                            - generic [ref=e3952]: =\n                            - generic [ref=e3953]: \"\\\"font-medium text-red-500\\\"\"\n                            - generic [ref=e3954]: \">\"\n                            - text: Error\n                            - generic [ref=e3955]: </\n                            - generic [ref=e3956]: span\n                            - generic [ref=e3957]: \">\"\n                      - row \"45 + <span className=\\\"font-medium text-red-500\\\">\" [ref=e1474]:\n                        - cell [ref=e1475] [cursor=pointer]\n                        - cell \"45\" [ref=e1476] [cursor=pointer]\n                        - cell \"+ <span className=\\\"font-medium text-red-500\\\">\" [ref=e1477]:\n                          - generic [ref=e1478]:\n                            - text: +\n                            - generic [ref=e3958]: <\n                            - generic [ref=e3959]: span\n                            - generic [ref=e3960]: className\n                            - generic [ref=e3961]: =\n                            - generic [ref=e3962]: \"\\\"font-medium text-red-500\\\"\"\n                            - generic [ref=e3963]: \">\"\n                      - 'row \"46 + {parsedError\" [ref=e1479]':\n                        - cell [ref=e1480] [cursor=pointer]\n                        - cell \"46\" [ref=e1481] [cursor=pointer]\n                        - 'cell \"+ {parsedError\" [ref=e1482]':\n                          - generic [ref=e1483]:\n                            - text: +\n                            - generic [ref=e3964]: \"{\"\n                            - generic [ref=e3965]: parsedError\n                      - row \"47 + ? ErrorStatusEnum[parsedError.status] || 'UNKNOWN_ERROR'\" [ref=e1484]:\n                        - cell [ref=e1485] [cursor=pointer]\n                        - cell \"47\" [ref=e1486] [cursor=pointer]\n                        - cell \"+ ? ErrorStatusEnum[parsedError.status] || 'UNKNOWN_ERROR'\" [ref=e1487]:\n                          - generic [ref=e1488]:\n                            - text: + ?\n                            - generic [ref=e3966]: ErrorStatusEnum\n                            - generic [ref=e3967]: \"[\"\n                            - generic [ref=e3968]: parsedError\n                            - generic [ref=e3969]: .\n                            - generic [ref=e3970]: status\n                            - generic [ref=e3971]: \"]\"\n                            - generic [ref=e3972]: \"||\"\n                            - generic [ref=e3973]: \"'UNKNOWN_ERROR'\"\n                      - 'row \"48 + : ''Error''}\" [ref=e1489]':\n                        - cell [ref=e1490] [cursor=pointer]\n                        - cell \"48\" [ref=e1491] [cursor=pointer]\n                        - 'cell \"+ : ''Error''}\" [ref=e1492]':\n                          - generic [ref=e1493]:\n                            - text: \"+ :\"\n                            - generic [ref=e3974]: \"'Error'\"\n                            - generic [ref=e3975]: \"}\"\n                      - row \"49 + </span>\" [ref=e1494]:\n                        - cell [ref=e1495] [cursor=pointer]\n                        - cell \"49\" [ref=e1496] [cursor=pointer]\n                        - cell \"+ </span>\" [ref=e1497]:\n                          - generic [ref=e1498]:\n                            - text: +\n                            - generic [ref=e3976]: </\n                            - generic [ref=e3977]: span\n                            - generic [ref=e3978]: \">\"\n                      - row \"35 50 </div>\" [ref=e1499]:\n                        - cell \"35\" [ref=e1500] [cursor=pointer]\n                        - cell \"50\" [ref=e1501] [cursor=pointer]\n                        - cell \"</div>\" [ref=e1502]:\n                          - generic [ref=e1503]:\n                            - generic [ref=e3979]: </\n                            - generic [ref=e3980]: div\n                            - generic [ref=e3981]: \">\"\n                      - 'row \"36 - <div className=\\\"text-sm text-red-500/90 break-all\\\">{text}</div>\" [ref=e1504]':\n                        - cell \"36\" [ref=e1505] [cursor=pointer]\n                        - cell [ref=e1506] [cursor=pointer]\n                        - 'cell \"- <div className=\\\"text-sm text-red-500/90 break-all\\\">{text}</div>\" [ref=e1507]':\n                          - generic [ref=e1508]:\n                            - text: \"-\"\n                            - generic [ref=e3982]: <\n                            - generic [ref=e3983]: div\n                            - generic [ref=e3984]: className\n                            - generic [ref=e3985]: =\n                            - generic [ref=e3986]: \"\\\"text-sm text-red-500/90 break-all\\\"\"\n                            - generic [ref=e3987]: \">\"\n                            - generic [ref=e3988]: \"{\"\n                            - generic [ref=e3989]: text\n                            - generic [ref=e3990]: \"}\"\n                            - generic [ref=e3991]: </\n                            - generic [ref=e3992]: div\n                            - generic [ref=e3993]: \">\"\n                      - 'row \"51 + {parsedError ? (\" [ref=e1509]':\n                        - cell [ref=e1510] [cursor=pointer]\n                        - cell \"51\" [ref=e1511] [cursor=pointer]\n                        - 'cell \"+ {parsedError ? (\" [ref=e1512]':\n                          - generic [ref=e1513]:\n                            - text: +\n                            - generic [ref=e3994]: \"{\"\n                            - generic [ref=e3995]: parsedError\n                            - text: \"?\"\n                            - generic [ref=e3996]: (\n                      - row \"52 + <div className=\\\"flex flex-col gap-1\\\">\" [ref=e1514]:\n                        - cell [ref=e1515] [cursor=pointer]\n                        - cell \"52\" [ref=e1516] [cursor=pointer]\n                        - cell \"+ <div className=\\\"flex flex-col gap-1\\\">\" [ref=e1517]:\n                          - generic [ref=e1518]:\n                            - text: +\n                            - generic [ref=e3997]: <\n                            - generic [ref=e3998]: div\n                            - generic [ref=e3999]: className\n                            - generic [ref=e4000]: =\n                            - generic [ref=e4001]: \"\\\"flex flex-col gap-1\\\"\"\n                            - generic [ref=e4002]: \">\"\n                      - row \"53 + <div className=\\\"text-sm text-red-500/90 font-medium\\\">\" [ref=e1519]:\n                        - cell [ref=e1520] [cursor=pointer]\n                        - cell \"53\" [ref=e1521] [cursor=pointer]\n                        - cell \"+ <div className=\\\"text-sm text-red-500/90 font-medium\\\">\" [ref=e1522]:\n                          - generic [ref=e1523]:\n                            - text: +\n                            - generic [ref=e4003]: <\n                            - generic [ref=e4004]: div\n                            - generic [ref=e4005]: className\n                            - generic [ref=e4006]: =\n                            - generic [ref=e4007]: \"\\\"text-sm text-red-500/90 font-medium\\\"\"\n                            - generic [ref=e4008]: \">\"\n                      - 'row \"54 + {parsedError.message}\" [ref=e1524]':\n                        - cell [ref=e1525] [cursor=pointer]\n                        - cell \"54\" [ref=e1526] [cursor=pointer]\n                        - 'cell \"+ {parsedError.message}\" [ref=e1527]':\n                          - generic [ref=e1528]:\n                            - text: +\n                            - generic [ref=e4009]: \"{\"\n                            - generic [ref=e4010]: parsedError\n                            - generic [ref=e4011]: .\n                            - generic [ref=e4012]: message\n                            - generic [ref=e4013]: \"}\"\n                      - row \"55 + </div>\" [ref=e1529]:\n                        - cell [ref=e1530] [cursor=pointer]\n                        - cell \"55\" [ref=e1531] [cursor=pointer]\n                        - cell \"+ </div>\" [ref=e1532]:\n                          - generic [ref=e1533]:\n                            - text: +\n                            - generic [ref=e4014]: </\n                            - generic [ref=e4015]: div\n                            - generic [ref=e4016]: \">\"\n                      - 'row \"56 + {parsedError.stack && (\" [ref=e1534]':\n                        - cell [ref=e1535] [cursor=pointer]\n                        - cell \"56\" [ref=e1536] [cursor=pointer]\n                        - 'cell \"+ {parsedError.stack && (\" [ref=e1537]':\n                          - generic [ref=e1538]:\n                            - text: +\n                            - generic [ref=e4017]: \"{\"\n                            - generic [ref=e4018]: parsedError\n                            - generic [ref=e4019]: .\n                            - generic [ref=e4020]: stack\n                            - generic [ref=e4021]: \"&&\"\n                            - generic [ref=e4022]: (\n                      - row \"57 + <div className=\\\"text-xs text-red-500/70 font-mono mt-2\\\">\" [ref=e1539]:\n                        - cell [ref=e1540] [cursor=pointer]\n                        - cell \"57\" [ref=e1541] [cursor=pointer]\n                        - cell \"+ <div className=\\\"text-xs text-red-500/70 font-mono mt-2\\\">\" [ref=e1542]:\n                          - generic [ref=e1543]:\n                            - text: +\n                            - generic [ref=e4023]: <\n                            - generic [ref=e4024]: div\n                            - generic [ref=e4025]: className\n                            - generic [ref=e4026]: =\n                            - generic [ref=e4027]: \"\\\"text-xs text-red-500/70 font-mono mt-2\\\"\"\n                            - generic [ref=e4028]: \">\"\n                      - 'row \"58 + {parsedError.stack}\" [ref=e1544]':\n                        - cell [ref=e1545] [cursor=pointer]\n                        - cell \"58\" [ref=e1546] [cursor=pointer]\n                        - 'cell \"+ {parsedError.stack}\" [ref=e1547]':\n                          - generic [ref=e1548]:\n                            - text: +\n                            - generic [ref=e4029]: \"{\"\n                            - generic [ref=e4030]: parsedError\n                            - generic [ref=e4031]: .\n                            - generic [ref=e4032]: stack\n                            - generic [ref=e4033]: \"}\"\n                      - row \"59 + </div>\" [ref=e1549]:\n                        - cell [ref=e1550] [cursor=pointer]\n                        - cell \"59\" [ref=e1551] [cursor=pointer]\n                        - cell \"+ </div>\" [ref=e1552]:\n                          - generic [ref=e1553]:\n                            - text: +\n                            - generic [ref=e4034]: </\n                            - generic [ref=e4035]: div\n                            - generic [ref=e4036]: \">\"\n                      - 'row \"60 + )}\" [ref=e1554]':\n                        - cell [ref=e1555] [cursor=pointer]\n                        - cell \"60\" [ref=e1556] [cursor=pointer]\n                        - 'cell \"+ )}\" [ref=e1557]':\n                          - generic [ref=e1558]:\n                            - text: +\n                            - generic [ref=e4037]: )\n                            - generic [ref=e4038]: \"}\"\n                      - row \"61 + </div>\" [ref=e1559]:\n                        - cell [ref=e1560] [cursor=pointer]\n                        - cell \"61\" [ref=e1561] [cursor=pointer]\n                        - cell \"+ </div>\" [ref=e1562]:\n                          - generic [ref=e1563]:\n                            - text: +\n                            - generic [ref=e4039]: </\n                            - generic [ref=e4040]: div\n                            - generic [ref=e4041]: \">\"\n                      - 'row \"62 + ) : (\" [ref=e1564]':\n                        - cell [ref=e1565] [cursor=pointer]\n                        - cell \"62\" [ref=e1566] [cursor=pointer]\n                        - 'cell \"+ ) : (\" [ref=e1567]':\n                          - generic [ref=e1568]:\n                            - text: +\n                            - generic [ref=e4042]: )\n                            - text: \":\"\n                            - generic [ref=e4043]: (\n                      - 'row \"63 + <div className=\\\"text-sm text-red-500/90 break-all\\\">{text}</div>\" [ref=e1569]':\n                        - cell [ref=e1570] [cursor=pointer]\n                        - cell \"63\" [ref=e1571] [cursor=pointer]\n                        - 'cell \"+ <div className=\\\"text-sm text-red-500/90 break-all\\\">{text}</div>\" [ref=e1572]':\n                          - generic [ref=e1573]:\n                            - text: +\n                            - generic [ref=e4044]: <\n                            - generic [ref=e4045]: div\n                            - generic [ref=e4046]: className\n                            - generic [ref=e4047]: =\n                            - generic [ref=e4048]: \"\\\"text-sm text-red-500/90 break-all\\\"\"\n                            - generic [ref=e4049]: \">\"\n                            - generic [ref=e4050]: \"{\"\n                            - generic [ref=e4051]: text\n                            - generic [ref=e4052]: \"}\"\n                            - generic [ref=e4053]: </\n                            - generic [ref=e4054]: div\n                            - generic [ref=e4055]: \">\"\n                      - 'row \"64 + )}\" [ref=e1574]':\n                        - cell [ref=e1575] [cursor=pointer]\n                        - cell \"64\" [ref=e1576] [cursor=pointer]\n                        - 'cell \"+ )}\" [ref=e1577]':\n                          - generic [ref=e1578]:\n                            - text: +\n                            - generic [ref=e4056]: )\n                            - generic [ref=e4057]: \"}\"\n                      - row \"37 65 </div>\" [ref=e1579]:\n                        - cell \"37\" [ref=e1580] [cursor=pointer]\n                        - cell \"65\" [ref=e1581] [cursor=pointer]\n                        - cell \"</div>\" [ref=e1582]:\n                          - generic [ref=e1583]:\n                            - generic [ref=e4058]: </\n                            - generic [ref=e4059]: div\n                            - generic [ref=e4060]: \">\"\n                      - row \"38 66 );\" [ref=e1584]:\n                        - cell \"38\" [ref=e1585] [cursor=pointer]\n                        - cell \"66\" [ref=e1586] [cursor=pointer]\n                        - cell \");\" [ref=e1587]:\n                          - generic [ref=e1588]:\n                            - generic [ref=e4061]: )\n                            - generic [ref=e4062]: ;\n                      - 'row \"39 67 };\" [ref=e1589]':\n                        - cell \"39\" [ref=e1590] [cursor=pointer]\n                        - cell \"67\" [ref=e1591] [cursor=pointer]\n                        - 'cell \"};\" [ref=e1592]':\n                          - generic [ref=e1593]:\n                            - generic [ref=e4063]: \"}\"\n                            - generic [ref=e4064]: ;\n                      - row \"Expand Down\" [ref=e1594]:\n                        - cell \"Expand Down\" [ref=e1595] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e1596] [cursor=pointer]:\n                            - /url: \"#diff-2d3eda1d8a1a6fb19a767875bd319ce455c69031b3424038e1bf88888ef25e0c\"\n                            - img [ref=e1597] [cursor=pointer]\n                        - cell [ref=e1599]\n                - generic [ref=e1601]:\n                  - generic [ref=e1602]:\n                    - generic [ref=e1603]:\n                      - button \"Toggle diff contents\" [expanded] [ref=e1604] [cursor=pointer]:\n                        - img [ref=e1605] [cursor=pointer]\n                      - button \"Expand all\" [ref=e1608] [cursor=pointer]:\n                        - img \"Expand all\" [ref=e1609] [cursor=pointer]\n                      - generic [ref=e1611]: \"182 changes: 145 additions & 37 deletions\"\n                      - generic [ref=e1612]: \"182\"\n                      - generic [ref=e1618]:\n                        - link \"packages/ui-tars/sdk/src/GUIAgent.ts\" [ref=e1619] [cursor=pointer]:\n                          - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                        - button \"Copy\" [ref=e1621]:\n                          - img [ref=e1622]\n                    - group [ref=e1628]:\n                      - button \"Show options\" [ref=e1629] [cursor=pointer]:\n                        - img \"Show options\" [ref=e1631] [cursor=pointer]\n                  - table [ref=e1636]:\n                    - rowgroup [ref=e1637]:\n                      - row \"Original file line number Diff line number Diff line change\" [ref=e1638]:\n                        - columnheader \"Original file line number\" [ref=e1639]\n                        - columnheader \"Diff line number\" [ref=e1640]\n                        - columnheader \"Diff line change\" [ref=e1641]\n                    - rowgroup [ref=e1642]:\n                      - 'row \"Expand Up @@ -9,6 +9,7 @@ import {\" [ref=e1643]':\n                        - cell \"Expand Up\" [ref=e1644] [cursor=pointer]:\n                          - link \"Expand Up\" [ref=e1645] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e1646] [cursor=pointer]\n                        - 'cell \"@@ -9,6 +9,7 @@ import {\" [ref=e1648]'\n                      - row \"9 9 StatusEnum,\" [ref=e1649]:\n                        - cell \"9\" [ref=e1650] [cursor=pointer]\n                        - cell \"9\" [ref=e1651] [cursor=pointer]\n                        - cell \"StatusEnum,\" [ref=e1652]:\n                          - generic [ref=e1653]:\n                            - generic [ref=e4065]: StatusEnum\n                            - generic [ref=e4066]: \",\"\n                      - row \"10 10 ShareVersion,\" [ref=e1654]:\n                        - cell \"10\" [ref=e1655] [cursor=pointer]\n                        - cell \"10\" [ref=e1656] [cursor=pointer]\n                        - cell \"ShareVersion,\" [ref=e1657]:\n                          - generic [ref=e1658]:\n                            - generic [ref=e4067]: ShareVersion\n                            - generic [ref=e4068]: \",\"\n                      - row \"11 11 ErrorStatusEnum,\" [ref=e1659]:\n                        - cell \"11\" [ref=e1660] [cursor=pointer]\n                        - cell \"11\" [ref=e1661] [cursor=pointer]\n                        - cell \"ErrorStatusEnum,\" [ref=e1662]:\n                          - generic [ref=e1663]:\n                            - generic [ref=e4069]: ErrorStatusEnum\n                            - generic [ref=e4070]: \",\"\n                      - row \"12 + GUIAgentError,\" [ref=e1664]:\n                        - cell [ref=e1665] [cursor=pointer]\n                        - cell \"12\" [ref=e1666] [cursor=pointer]\n                        - cell \"+ GUIAgentError,\" [ref=e1667]:\n                          - generic [ref=e1668]:\n                            - text: +\n                            - generic [ref=e4071]: GUIAgentError\n                            - generic [ref=e4072]: \",\"\n                      - 'row \"12 13 } from ''@ui-tars/shared/types'';\" [ref=e1669]':\n                        - cell \"12\" [ref=e1670] [cursor=pointer]\n                        - cell \"13\" [ref=e1671] [cursor=pointer]\n                        - 'cell \"} from ''@ui-tars/shared/types'';\" [ref=e1672]':\n                          - generic [ref=e1673]:\n                            - generic [ref=e4073]: \"}\"\n                            - generic [ref=e4074]: from\n                            - generic [ref=e4075]: \"'@ui-tars/shared/types'\"\n                            - generic [ref=e4076]: ;\n                      - 'row \"13 14 import { IMAGE_PLACEHOLDER, MAX_LOOP_COUNT } from ''@ui-tars/shared/constants'';\" [ref=e1674]':\n                        - cell \"13\" [ref=e1675] [cursor=pointer]\n                        - cell \"14\" [ref=e1676] [cursor=pointer]\n                        - 'cell \"import { IMAGE_PLACEHOLDER, MAX_LOOP_COUNT } from ''@ui-tars/shared/constants'';\" [ref=e1677]':\n                          - generic [ref=e1678]:\n                            - generic [ref=e4077]: import\n                            - generic [ref=e4078]: \"{\"\n                            - generic [ref=e4079]: IMAGE_PLACEHOLDER\n                            - generic [ref=e4080]: \",\"\n                            - generic [ref=e4081]: MAX_LOOP_COUNT\n                            - generic [ref=e4082]: \"}\"\n                            - generic [ref=e4083]: from\n                            - generic [ref=e4084]: \"'@ui-tars/shared/constants'\"\n                            - generic [ref=e4085]: ;\n                      - 'row \"14 15 import { sleep } from ''@ui-tars/shared/utils'';\" [ref=e1679]':\n                        - cell \"14\" [ref=e1680] [cursor=pointer]\n                        - cell \"15\" [ref=e1681] [cursor=pointer]\n                        - 'cell \"import { sleep } from ''@ui-tars/shared/utils'';\" [ref=e1682]':\n                          - generic [ref=e1683]:\n                            - generic [ref=e4086]: import\n                            - generic [ref=e4087]: \"{\"\n                            - generic [ref=e4088]: sleep\n                            - generic [ref=e4089]: \"}\"\n                            - generic [ref=e4090]: from\n                            - generic [ref=e4091]: \"'@ui-tars/shared/utils'\"\n                            - generic [ref=e4092]: ;\n                      - 'row \"Expand All @@ -31,6 +32,7 @@ import {\" [ref=e1684]':\n                        - cell \"Expand All\" [ref=e1685] [cursor=pointer]:\n                          - link \"Expand All\" [ref=e1686] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e1687] [cursor=pointer]\n                        - 'cell \"@@ -31,6 +32,7 @@ import {\" [ref=e1689]'\n                      - row \"31 32 SYSTEM_PROMPT,\" [ref=e1690]:\n                        - cell \"31\" [ref=e1691] [cursor=pointer]\n                        - cell \"32\" [ref=e1692] [cursor=pointer]\n                        - cell \"SYSTEM_PROMPT,\" [ref=e1693]:\n                          - generic [ref=e1694]:\n                            - generic [ref=e4093]: SYSTEM_PROMPT\n                            - generic [ref=e4094]: \",\"\n                      - row \"32 33 SYSTEM_PROMPT_TEMPLATE,\" [ref=e1695]:\n                        - cell \"32\" [ref=e1696] [cursor=pointer]\n                        - cell \"33\" [ref=e1697] [cursor=pointer]\n                        - cell \"SYSTEM_PROMPT_TEMPLATE,\" [ref=e1698]:\n                          - generic [ref=e1699]:\n                            - generic [ref=e4095]: SYSTEM_PROMPT_TEMPLATE\n                            - generic [ref=e4096]: \",\"\n                      - 'row \"33 34 } from ''./constants'';\" [ref=e1700]':\n                        - cell \"33\" [ref=e1701] [cursor=pointer]\n                        - cell \"34\" [ref=e1702] [cursor=pointer]\n                        - 'cell \"} from ''./constants'';\" [ref=e1703]':\n                          - generic [ref=e1704]:\n                            - generic [ref=e4097]: \"}\"\n                            - generic [ref=e4098]: from\n                            - generic [ref=e4099]: \"'./constants'\"\n                            - generic [ref=e4100]: ;\n                      - 'row \"35 + import { InternalServerError } from ''openai'';\" [ref=e1705]':\n                        - cell [ref=e1706] [cursor=pointer]\n                        - cell \"35\" [ref=e1707] [cursor=pointer]\n                        - 'cell \"+ import { InternalServerError } from ''openai'';\" [ref=e1708]':\n                          - generic [ref=e1709]:\n                            - text: +\n                            - generic [ref=e4101]: import\n                            - generic [ref=e4102]: \"{\"\n                            - generic [ref=e4103]: InternalServerError\n                            - generic [ref=e4104]: \"}\"\n                            - generic [ref=e4105]: from\n                            - generic [ref=e4106]: \"'openai'\"\n                            - generic [ref=e4107]: ;\n                      - row \"34 36\" [ref=e1710]:\n                        - cell \"34\" [ref=e1711] [cursor=pointer]\n                        - cell \"36\" [ref=e1712] [cursor=pointer]\n                        - cell [ref=e1713]\n                      - row \"35 37 export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e1716]:\n                        - cell \"35\" [ref=e1717] [cursor=pointer]\n                        - cell \"37\" [ref=e1718] [cursor=pointer]\n                        - cell \"export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e1719]:\n                          - generic [ref=e1720]:\n                            - generic [ref=e4109]: export\n                            - generic [ref=e4110]: class\n                            - generic [ref=e4111]: GUIAgent\n                            - generic [ref=e4112]: <\n                            - generic [ref=e4113]: T\n                            - generic [ref=e4114]: extends\n                            - generic [ref=e4115]: Operator\n                            - generic [ref=e4116]: \">\"\n                            - generic [ref=e4117]: extends\n                            - generic [ref=e4118]: BaseGUIAgent\n                            - generic [ref=e4119]: <\n                      - row \"36 38 GUIAgentConfig<T>\" [ref=e1721]:\n                        - cell \"36\" [ref=e1722] [cursor=pointer]\n                        - cell \"38\" [ref=e1723] [cursor=pointer]\n                        - cell \"GUIAgentConfig<T>\" [ref=e1724]:\n                          - generic [ref=e1725]:\n                            - generic [ref=e4120]: GUIAgentConfig\n                            - generic [ref=e4121]: <\n                            - generic [ref=e4122]: T\n                            - generic [ref=e4123]: \">\"\n                      - row \"Expand Down Expand Up @@ -145,17 +147,24 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e1726]:\n                        - cell \"Expand Down Expand Up\" [ref=e1727] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e1728] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e1729] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e1731] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e1732] [cursor=pointer]\n                        - cell \"@@ -145,17 +147,24 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e1734]\n                      - row \"145 147 break;\" [ref=e1735]:\n                        - cell \"145\" [ref=e1736] [cursor=pointer]\n                        - cell \"147\" [ref=e1737] [cursor=pointer]\n                        - cell \"break;\" [ref=e1738]:\n                          - generic [ref=e1739]:\n                            - generic [ref=e4124]: break\n                            - generic [ref=e4125]: ;\n                      - 'row \"146 148 }\" [ref=e1740]':\n                        - cell \"146\" [ref=e1741] [cursor=pointer]\n                        - cell \"148\" [ref=e1742] [cursor=pointer]\n                        - 'cell \"}\" [ref=e1743]':\n                          - generic [ref=e4126]: \"}\"\n                      - row \"147 149\" [ref=e1745]:\n                        - cell \"147\" [ref=e1746] [cursor=pointer]\n                        - cell \"149\" [ref=e1747] [cursor=pointer]\n                        - cell [ref=e1748]\n                      - 'row \"148 - if (loopCnt >= maxLoopCount || snapshotErrCnt >= MAX_SNAPSHOT_ERR_CNT) {\" [ref=e1751]':\n                        - cell \"148\" [ref=e1752] [cursor=pointer]\n                        - cell [ref=e1753] [cursor=pointer]\n                        - 'cell \"- if (loopCnt >= maxLoopCount || snapshotErrCnt >= MAX_SNAPSHOT_ERR_CNT) {\" [ref=e1754]':\n                          - generic [ref=e1755]:\n                            - text: \"-\"\n                            - generic [ref=e4128]: if\n                            - generic [ref=e4129]: (\n                            - generic [ref=e4130]: loopCnt\n                            - generic [ref=e4131]: \">=\"\n                            - generic [ref=e4132]: maxLoopCount\n                            - generic [ref=e4134]: \"||\"\n                            - generic [ref=e4136]: snapshotErrCnt\n                            - generic [ref=e4138]: \">=\"\n                            - generic [ref=e4140]: MAX_SNAPSHOT_ERR_CNT\n                            - generic [ref=e4141]: )\n                            - generic [ref=e4142]: \"{\"\n                      - 'row \"150 + if (loopCnt >= maxLoopCount) {\" [ref=e1757]':\n                        - cell [ref=e1758] [cursor=pointer]\n                        - cell \"150\" [ref=e1759] [cursor=pointer]\n                        - 'cell \"+ if (loopCnt >= maxLoopCount) {\" [ref=e1760]':\n                          - generic [ref=e1761]:\n                            - text: +\n                            - generic [ref=e4143]: if\n                            - generic [ref=e4144]: (\n                            - generic [ref=e4145]: loopCnt\n                            - generic [ref=e4146]: \">=\"\n                            - generic [ref=e4147]: maxLoopCount\n                            - generic [ref=e4148]: )\n                            - generic [ref=e4149]: \"{\"\n                      - 'row \"149 151 Object.assign(data, {\" [ref=e1762]':\n                        - cell \"149\" [ref=e1763] [cursor=pointer]\n                        - cell \"151\" [ref=e1764] [cursor=pointer]\n                        - 'cell \"Object.assign(data, {\" [ref=e1765]':\n                          - generic [ref=e1766]:\n                            - generic [ref=e4150]: Object\n                            - generic [ref=e4151]: .\n                            - generic [ref=e4152]: assign\n                            - generic [ref=e4153]: (\n                            - generic [ref=e4154]: data\n                            - generic [ref=e4155]: \",\"\n                            - generic [ref=e4156]: \"{\"\n                      - row \"150 - status:\" [ref=e1767]:\n                        - cell \"150\" [ref=e1768] [cursor=pointer]\n                        - cell [ref=e1769] [cursor=pointer]\n                        - cell \"- status:\" [ref=e1770]:\n                          - generic [ref=e1771]:\n                            - text: \"-\"\n                            - generic [ref=e4157]: status\n                            - text: \":\"\n                      - 'row \"151 - loopCnt >= maxLoopCount ? StatusEnum.MAX_LOOP : StatusEnum.ERROR,\" [ref=e1772]':\n                        - cell \"151\" [ref=e1773] [cursor=pointer]\n                        - cell [ref=e1774] [cursor=pointer]\n                        - 'cell \"- loopCnt >= maxLoopCount ? StatusEnum.MAX_LOOP : StatusEnum.ERROR,\" [ref=e1775]':\n                          - generic [ref=e1776]:\n                            - text: \"-\"\n                            - generic [ref=e4158]: loopCnt\n                            - generic [ref=e4159]: \">=\"\n                            - generic [ref=e4160]: maxLoopCount\n                            - text: \"?\"\n                            - generic [ref=e4161]: StatusEnum\n                            - generic [ref=e4162]: .\n                            - generic [ref=e4163]: MAX_LOOP\n                            - text: \":\"\n                            - generic [ref=e4164]: StatusEnum\n                            - generic [ref=e4165]: .\n                            - generic [ref=e4166]: ERROR\n                            - generic [ref=e4167]: \",\"\n                      - 'row \"152 - ...(snapshotErrCnt >= MAX_SNAPSHOT_ERR_CNT && {\" [ref=e1777]':\n                        - cell \"152\" [ref=e1778] [cursor=pointer]\n                        - cell [ref=e1779] [cursor=pointer]\n                        - 'cell \"- ...(snapshotErrCnt >= MAX_SNAPSHOT_ERR_CNT && {\" [ref=e1780]':\n                          - generic [ref=e1781]:\n                            - text: \"- ...\"\n                            - generic [ref=e4168]: (\n                            - generic [ref=e4169]: snapshotErrCnt\n                            - generic [ref=e4170]: \">=\"\n                            - generic [ref=e4171]: MAX_SNAPSHOT_ERR_CNT\n                            - generic [ref=e4172]: \"&&\"\n                            - generic [ref=e4173]: \"{\"\n                      - 'row \"153 - error: {\" [ref=e1782]':\n                        - cell \"153\" [ref=e1783] [cursor=pointer]\n                        - cell [ref=e1784] [cursor=pointer]\n                        - 'cell \"- error: {\" [ref=e1785]':\n                          - generic [ref=e1786]:\n                            - text: \"-\"\n                            - generic [ref=e4174]: error\n                            - text: \":\"\n                            - generic [ref=e4175]: \"{\"\n                      - 'row \"154 - code: ErrorStatusEnum.SCREENSHOT_ERROR,\" [ref=e1787]':\n                        - cell \"154\" [ref=e1788] [cursor=pointer]\n                        - cell [ref=e1789] [cursor=pointer]\n                        - 'cell \"- code: ErrorStatusEnum.SCREENSHOT_ERROR,\" [ref=e1790]':\n                          - generic [ref=e1791]:\n                            - text: \"-\"\n                            - generic [ref=e4176]: code\n                            - text: \":\"\n                            - generic [ref=e4177]: ErrorStatusEnum\n                            - generic [ref=e4178]: .\n                            - generic [ref=e4179]: SCREENSHOT_ERROR\n                            - generic [ref=e4180]: \",\"\n                      - 'row \"155 - error: ''Too many screenshot failures'',\" [ref=e1792]':\n                        - cell \"155\" [ref=e1793] [cursor=pointer]\n                        - cell [ref=e1794] [cursor=pointer]\n                        - 'cell \"- error: ''Too many screenshot failures'',\" [ref=e1795]':\n                          - generic [ref=e1796]:\n                            - text: \"-\"\n                            - generic [ref=e4181]: error\n                            - text: \":\"\n                            - generic [ref=e4182]: \"'Too many screenshot failures'\"\n                            - generic [ref=e4183]: \",\"\n                      - 'row \"156 - stack: ''null'',\" [ref=e1797]':\n                        - cell \"156\" [ref=e1798] [cursor=pointer]\n                        - cell [ref=e1799] [cursor=pointer]\n                        - 'cell \"- stack: ''null'',\" [ref=e1800]':\n                          - generic [ref=e1801]:\n                            - text: \"-\"\n                            - generic [ref=e4184]: stack\n                            - text: \":\"\n                            - generic [ref=e4185]: \"'null'\"\n                            - generic [ref=e4186]: \",\"\n                      - 'row \"157 - },\" [ref=e1802]':\n                        - cell \"157\" [ref=e1803] [cursor=pointer]\n                        - cell [ref=e1804] [cursor=pointer]\n                        - 'cell \"- },\" [ref=e1805]':\n                          - generic [ref=e1806]:\n                            - text: \"-\"\n                            - generic [ref=e4187]: \"}\"\n                            - generic [ref=e4188]: \",\"\n                      - 'row \"158 - }),\" [ref=e1807]':\n                        - cell \"158\" [ref=e1808] [cursor=pointer]\n                        - cell [ref=e1809] [cursor=pointer]\n                        - 'cell \"- }),\" [ref=e1810]':\n                          - generic [ref=e1811]:\n                            - text: \"-\"\n                            - generic [ref=e4189]: \"}\"\n                            - generic [ref=e4190]: )\n                            - generic [ref=e4191]: \",\"\n                      - 'row \"152 + status: StatusEnum.ERROR,\" [ref=e1812]':\n                        - cell [ref=e1813] [cursor=pointer]\n                        - cell \"152\" [ref=e1814] [cursor=pointer]\n                        - 'cell \"+ status: StatusEnum.ERROR,\" [ref=e1815]':\n                          - generic [ref=e1816]:\n                            - text: +\n                            - generic [ref=e4192]: status\n                            - text: \":\"\n                            - generic [ref=e4193]: StatusEnum\n                            - generic [ref=e4194]: .\n                            - generic [ref=e4195]: ERROR\n                            - generic [ref=e4196]: \",\"\n                      - 'row \"153 + error: this.guiAgentErrorParser(\" [ref=e1817]':\n                        - cell [ref=e1818] [cursor=pointer]\n                        - cell \"153\" [ref=e1819] [cursor=pointer]\n                        - 'cell \"+ error: this.guiAgentErrorParser(\" [ref=e1820]':\n                          - generic [ref=e1821]:\n                            - text: +\n                            - generic [ref=e4197]: error\n                            - text: \":\"\n                            - generic [ref=e4198]: this\n                            - generic [ref=e4199]: .\n                            - generic [ref=e4200]: guiAgentErrorParser\n                            - generic [ref=e4201]: (\n                      - row \"154 + null,\" [ref=e1822]:\n                        - cell [ref=e1823] [cursor=pointer]\n                        - cell \"154\" [ref=e1824] [cursor=pointer]\n                        - cell \"+ null,\" [ref=e1825]:\n                          - generic [ref=e1826]:\n                            - text: +\n                            - generic [ref=e4202]: \"null\"\n                            - generic [ref=e4203]: \",\"\n                      - row \"155 + ErrorStatusEnum.REACH_MAXLOOP_ERROR,\" [ref=e1827]:\n                        - cell [ref=e1828] [cursor=pointer]\n                        - cell \"155\" [ref=e1829] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.REACH_MAXLOOP_ERROR,\" [ref=e1830]:\n                          - generic [ref=e1831]:\n                            - text: +\n                            - generic [ref=e4204]: ErrorStatusEnum\n                            - generic [ref=e4205]: .\n                            - generic [ref=e4206]: REACH_MAXLOOP_ERROR\n                            - generic [ref=e4207]: \",\"\n                      - row \"156 + ),\" [ref=e1832]:\n                        - cell [ref=e1833] [cursor=pointer]\n                        - cell \"156\" [ref=e1834] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e1835]:\n                          - generic [ref=e1836]:\n                            - text: +\n                            - generic [ref=e4208]: )\n                            - generic [ref=e4209]: \",\"\n                      - 'row \"157 + });\" [ref=e1837]':\n                        - cell [ref=e1838] [cursor=pointer]\n                        - cell \"157\" [ref=e1839] [cursor=pointer]\n                        - 'cell \"+ });\" [ref=e1840]':\n                          - generic [ref=e1841]:\n                            - text: +\n                            - generic [ref=e4210]: \"}\"\n                            - generic [ref=e4211]: )\n                            - generic [ref=e4212]: ;\n                      - row \"158 + break;\" [ref=e1842]:\n                        - cell [ref=e1843] [cursor=pointer]\n                        - cell \"158\" [ref=e1844] [cursor=pointer]\n                        - cell \"+ break;\" [ref=e1845]:\n                          - generic [ref=e1846]:\n                            - text: +\n                            - generic [ref=e4213]: break\n                            - generic [ref=e4214]: ;\n                      - 'row \"159 + }\" [ref=e1847]':\n                        - cell [ref=e1848] [cursor=pointer]\n                        - cell \"159\" [ref=e1849] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e1850]':\n                          - generic [ref=e1851]:\n                            - text: +\n                            - generic [ref=e4215]: \"}\"\n                      - row \"160 +\" [ref=e1852]:\n                        - cell [ref=e1853] [cursor=pointer]\n                        - cell \"160\" [ref=e1854] [cursor=pointer]\n                        - cell \"+\" [ref=e1855]:\n                          - generic: +\n                      - 'row \"161 + if (snapshotErrCnt >= MAX_SNAPSHOT_ERR_CNT) {\" [ref=e1858]':\n                        - cell [ref=e1859] [cursor=pointer]\n                        - cell \"161\" [ref=e1860] [cursor=pointer]\n                        - 'cell \"+ if (snapshotErrCnt >= MAX_SNAPSHOT_ERR_CNT) {\" [ref=e1861]':\n                          - generic [ref=e1862]:\n                            - text: +\n                            - generic [ref=e4217]: if\n                            - generic [ref=e4218]: (\n                            - generic [ref=e4219]: snapshotErrCnt\n                            - generic [ref=e4220]: \">=\"\n                            - generic [ref=e4221]: MAX_SNAPSHOT_ERR_CNT\n                            - generic [ref=e4222]: )\n                            - generic [ref=e4223]: \"{\"\n                      - 'row \"162 + Object.assign(data, {\" [ref=e1863]':\n                        - cell [ref=e1864] [cursor=pointer]\n                        - cell \"162\" [ref=e1865] [cursor=pointer]\n                        - 'cell \"+ Object.assign(data, {\" [ref=e1866]':\n                          - generic [ref=e1867]:\n                            - text: +\n                            - generic [ref=e4224]: Object\n                            - generic [ref=e4225]: .\n                            - generic [ref=e4226]: assign\n                            - generic [ref=e4227]: (\n                            - generic [ref=e4228]: data\n                            - generic [ref=e4229]: \",\"\n                            - generic [ref=e4230]: \"{\"\n                      - 'row \"163 + status: StatusEnum.ERROR,\" [ref=e1868]':\n                        - cell [ref=e1869] [cursor=pointer]\n                        - cell \"163\" [ref=e1870] [cursor=pointer]\n                        - 'cell \"+ status: StatusEnum.ERROR,\" [ref=e1871]':\n                          - generic [ref=e1872]:\n                            - text: +\n                            - generic [ref=e4231]: status\n                            - text: \":\"\n                            - generic [ref=e4232]: StatusEnum\n                            - generic [ref=e4233]: .\n                            - generic [ref=e4234]: ERROR\n                            - generic [ref=e4235]: \",\"\n                      - 'row \"164 + error: this.guiAgentErrorParser(\" [ref=e1873]':\n                        - cell [ref=e1874] [cursor=pointer]\n                        - cell \"164\" [ref=e1875] [cursor=pointer]\n                        - 'cell \"+ error: this.guiAgentErrorParser(\" [ref=e1876]':\n                          - generic [ref=e1877]:\n                            - text: +\n                            - generic [ref=e4236]: error\n                            - text: \":\"\n                            - generic [ref=e4237]: this\n                            - generic [ref=e4238]: .\n                            - generic [ref=e4239]: guiAgentErrorParser\n                            - generic [ref=e4240]: (\n                      - row \"165 + null,\" [ref=e1878]:\n                        - cell [ref=e1879] [cursor=pointer]\n                        - cell \"165\" [ref=e1880] [cursor=pointer]\n                        - cell \"+ null,\" [ref=e1881]:\n                          - generic [ref=e1882]:\n                            - text: +\n                            - generic [ref=e4241]: \"null\"\n                            - generic [ref=e4242]: \",\"\n                      - row \"166 + ErrorStatusEnum.SCREENSHOT_RETRY_ERROR,\" [ref=e1883]:\n                        - cell [ref=e1884] [cursor=pointer]\n                        - cell \"166\" [ref=e1885] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.SCREENSHOT_RETRY_ERROR,\" [ref=e1886]:\n                          - generic [ref=e1887]:\n                            - text: +\n                            - generic [ref=e4243]: ErrorStatusEnum\n                            - generic [ref=e4244]: .\n                            - generic [ref=e4245]: SCREENSHOT_RETRY_ERROR\n                            - generic [ref=e4246]: \",\"\n                      - row \"167 + ),\" [ref=e1888]:\n                        - cell [ref=e1889] [cursor=pointer]\n                        - cell \"167\" [ref=e1890] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e1891]:\n                          - generic [ref=e1892]:\n                            - text: +\n                            - generic [ref=e4247]: )\n                            - generic [ref=e4248]: \",\"\n                      - 'row \"159 168 });\" [ref=e1893]':\n                        - cell \"159\" [ref=e1894] [cursor=pointer]\n                        - cell \"168\" [ref=e1895] [cursor=pointer]\n                        - 'cell \"});\" [ref=e1896]':\n                          - generic [ref=e1897]:\n                            - generic [ref=e4249]: \"}\"\n                            - generic [ref=e4250]: )\n                            - generic [ref=e4251]: ;\n                      - row \"160 169 break;\" [ref=e1898]:\n                        - cell \"160\" [ref=e1899] [cursor=pointer]\n                        - cell \"169\" [ref=e1900] [cursor=pointer]\n                        - cell \"break;\" [ref=e1901]:\n                          - generic [ref=e1902]:\n                            - generic [ref=e4252]: break\n                            - generic [ref=e4253]: ;\n                      - 'row \"161 170 }\" [ref=e1903]':\n                        - cell \"161\" [ref=e1904] [cursor=pointer]\n                        - cell \"170\" [ref=e1905] [cursor=pointer]\n                        - 'cell \"}\" [ref=e1906]':\n                          - generic [ref=e4254]: \"}\"\n                      - row \"Expand Down Expand Up @@ -250,7 +259,19 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e1908]:\n                        - cell \"Expand Down Expand Up\" [ref=e1909] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e1910] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e1911] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e1913] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e1914] [cursor=pointer]\n                        - cell \"@@ -250,7 +259,19 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e1916]\n                      - 'row \"250 259 parsedPredictions: [],\" [ref=e1917]':\n                        - cell \"250\" [ref=e1918] [cursor=pointer]\n                        - cell \"259\" [ref=e1919] [cursor=pointer]\n                        - 'cell \"parsedPredictions: [],\" [ref=e1920]':\n                          - generic [ref=e1921]:\n                            - generic [ref=e4255]: parsedPredictions\n                            - text: \":\"\n                            - generic [ref=e4256]: \"[\"\n                            - generic [ref=e4257]: \"]\"\n                            - generic [ref=e4258]: \",\"\n                      - 'row \"251 260 };\" [ref=e1922]':\n                        - cell \"251\" [ref=e1923] [cursor=pointer]\n                        - cell \"260\" [ref=e1924] [cursor=pointer]\n                        - 'cell \"};\" [ref=e1925]':\n                          - generic [ref=e1926]:\n                            - generic [ref=e4259]: \"}\"\n                            - generic [ref=e4260]: ;\n                      - 'row \"252 261 }\" [ref=e1927]':\n                        - cell \"252\" [ref=e1928] [cursor=pointer]\n                        - cell \"261\" [ref=e1929] [cursor=pointer]\n                        - 'cell \"}\" [ref=e1930]':\n                          - generic [ref=e4261]: \"}\"\n                      - row \"253 - throw error;\" [ref=e1932]:\n                        - cell \"253\" [ref=e1933] [cursor=pointer]\n                        - cell [ref=e1934] [cursor=pointer]\n                        - cell \"- throw error;\" [ref=e1935]:\n                          - generic [ref=e1936]:\n                            - text: \"-\"\n                            - generic [ref=e4262]: throw\n                            - generic [ref=e4263]: error\n                            - generic [ref=e4264]: ;\n                      - row \"262 +\" [ref=e1937]:\n                        - cell [ref=e1938] [cursor=pointer]\n                        - cell \"262\" [ref=e1939] [cursor=pointer]\n                        - cell \"+\" [ref=e1940]:\n                          - generic: +\n                      - 'row \"263 + Object.assign(data, {\" [ref=e1943]':\n                        - cell [ref=e1944] [cursor=pointer]\n                        - cell \"263\" [ref=e1945] [cursor=pointer]\n                        - 'cell \"+ Object.assign(data, {\" [ref=e1946]':\n                          - generic [ref=e1947]:\n                            - text: +\n                            - generic [ref=e4266]: Object\n                            - generic [ref=e4267]: .\n                            - generic [ref=e4268]: assign\n                            - generic [ref=e4269]: (\n                            - generic [ref=e4270]: data\n                            - generic [ref=e4271]: \",\"\n                            - generic [ref=e4272]: \"{\"\n                      - 'row \"264 + status: StatusEnum.ERROR,\" [ref=e1948]':\n                        - cell [ref=e1949] [cursor=pointer]\n                        - cell \"264\" [ref=e1950] [cursor=pointer]\n                        - 'cell \"+ status: StatusEnum.ERROR,\" [ref=e1951]':\n                          - generic [ref=e1952]:\n                            - text: +\n                            - generic [ref=e4273]: status\n                            - text: \":\"\n                            - generic [ref=e4274]: StatusEnum\n                            - generic [ref=e4275]: .\n                            - generic [ref=e4276]: ERROR\n                            - generic [ref=e4277]: \",\"\n                      - 'row \"265 + error: this.guiAgentErrorParser(\" [ref=e1953]':\n                        - cell [ref=e1954] [cursor=pointer]\n                        - cell \"265\" [ref=e1955] [cursor=pointer]\n                        - 'cell \"+ error: this.guiAgentErrorParser(\" [ref=e1956]':\n                          - generic [ref=e1957]:\n                            - text: +\n                            - generic [ref=e4278]: error\n                            - text: \":\"\n                            - generic [ref=e4279]: this\n                            - generic [ref=e4280]: .\n                            - generic [ref=e4281]: guiAgentErrorParser\n                            - generic [ref=e4282]: (\n                      - row \"266 + error,\" [ref=e1958]:\n                        - cell [ref=e1959] [cursor=pointer]\n                        - cell \"266\" [ref=e1960] [cursor=pointer]\n                        - cell \"+ error,\" [ref=e1961]:\n                          - generic [ref=e1962]:\n                            - text: +\n                            - generic [ref=e4283]: error\n                            - generic [ref=e4284]: \",\"\n                      - row \"267 + ErrorStatusEnum.INVOKE_RETRY_ERROR,\" [ref=e1963]:\n                        - cell [ref=e1964] [cursor=pointer]\n                        - cell \"267\" [ref=e1965] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.INVOKE_RETRY_ERROR,\" [ref=e1966]:\n                          - generic [ref=e1967]:\n                            - text: +\n                            - generic [ref=e4285]: ErrorStatusEnum\n                            - generic [ref=e4286]: .\n                            - generic [ref=e4287]: INVOKE_RETRY_ERROR\n                            - generic [ref=e4288]: \",\"\n                      - row \"268 + ),\" [ref=e1968]:\n                        - cell [ref=e1969] [cursor=pointer]\n                        - cell \"268\" [ref=e1970] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e1971]:\n                          - generic [ref=e1972]:\n                            - text: +\n                            - generic [ref=e4289]: )\n                            - generic [ref=e4290]: \",\"\n                      - 'row \"269 + });\" [ref=e1973]':\n                        - cell [ref=e1974] [cursor=pointer]\n                        - cell \"269\" [ref=e1975] [cursor=pointer]\n                        - 'cell \"+ });\" [ref=e1976]':\n                          - generic [ref=e1977]:\n                            - text: +\n                            - generic [ref=e4291]: \"}\"\n                            - generic [ref=e4292]: )\n                            - generic [ref=e4293]: ;\n                      - row \"270 +\" [ref=e1978]:\n                        - cell [ref=e1979] [cursor=pointer]\n                        - cell \"270\" [ref=e1980] [cursor=pointer]\n                        - cell \"+\" [ref=e1981]:\n                          - generic: +\n                      - 'row \"271 + return {\" [ref=e1984]':\n                        - cell [ref=e1985] [cursor=pointer]\n                        - cell \"271\" [ref=e1986] [cursor=pointer]\n                        - 'cell \"+ return {\" [ref=e1987]':\n                          - generic [ref=e1988]:\n                            - text: +\n                            - generic [ref=e4295]: return\n                            - generic [ref=e4296]: \"{\"\n                      - 'row \"272 + prediction: '''',\" [ref=e1989]':\n                        - cell [ref=e1990] [cursor=pointer]\n                        - cell \"272\" [ref=e1991] [cursor=pointer]\n                        - 'cell \"+ prediction: '''',\" [ref=e1992]':\n                          - generic [ref=e1993]:\n                            - text: +\n                            - generic [ref=e4297]: prediction\n                            - text: \":\"\n                            - generic [ref=e4298]: \"''\"\n                            - generic [ref=e4299]: \",\"\n                      - 'row \"273 + parsedPredictions: [],\" [ref=e1994]':\n                        - cell [ref=e1995] [cursor=pointer]\n                        - cell \"273\" [ref=e1996] [cursor=pointer]\n                        - 'cell \"+ parsedPredictions: [],\" [ref=e1997]':\n                          - generic [ref=e1998]:\n                            - text: +\n                            - generic [ref=e4300]: parsedPredictions\n                            - text: \":\"\n                            - generic [ref=e4301]: \"[\"\n                            - generic [ref=e4302]: \"]\"\n                            - generic [ref=e4303]: \",\"\n                      - 'row \"274 + };\" [ref=e1999]':\n                        - cell [ref=e2000] [cursor=pointer]\n                        - cell \"274\" [ref=e2001] [cursor=pointer]\n                        - 'cell \"+ };\" [ref=e2002]':\n                          - generic [ref=e2003]:\n                            - text: +\n                            - generic [ref=e4304]: \"}\"\n                            - generic [ref=e4305]: ;\n                      - 'row \"254 275 }\" [ref=e2004]':\n                        - cell \"254\" [ref=e2005] [cursor=pointer]\n                        - cell \"275\" [ref=e2006] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2007]':\n                          - generic [ref=e4306]: \"}\"\n                      - 'row \"255 276 },\" [ref=e2009]':\n                        - cell \"255\" [ref=e2010] [cursor=pointer]\n                        - cell \"276\" [ref=e2011] [cursor=pointer]\n                        - 'cell \"},\" [ref=e2012]':\n                          - generic [ref=e2013]:\n                            - generic [ref=e4307]: \"}\"\n                            - generic [ref=e4308]: \",\"\n                      - 'row \"256 277 {\" [ref=e2014]':\n                        - cell \"256\" [ref=e2015] [cursor=pointer]\n                        - cell \"277\" [ref=e2016] [cursor=pointer]\n                        - 'cell \"{\" [ref=e2017]':\n                          - generic [ref=e4309]: \"{\"\n                      - row \"Expand All @@ -259,14 +280,14 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2019]:\n                        - cell \"Expand All\" [ref=e2020] [cursor=pointer]:\n                          - link \"Expand All\" [ref=e2021] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2022] [cursor=pointer]\n                        - cell \"@@ -259,14 +280,14 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2024]\n                      - 'row \"259 280 },\" [ref=e2025]':\n                        - cell \"259\" [ref=e2026] [cursor=pointer]\n                        - cell \"280\" [ref=e2027] [cursor=pointer]\n                        - 'cell \"},\" [ref=e2028]':\n                          - generic [ref=e2029]:\n                            - generic [ref=e4310]: \"}\"\n                            - generic [ref=e4311]: \",\"\n                      - row \"260 281 );\" [ref=e2030]:\n                        - cell \"260\" [ref=e2031] [cursor=pointer]\n                        - cell \"281\" [ref=e2032] [cursor=pointer]\n                        - cell \");\" [ref=e2033]:\n                          - generic [ref=e2034]:\n                            - generic [ref=e4312]: )\n                            - generic [ref=e4313]: ;\n                      - row \"261 282\" [ref=e2035]:\n                        - cell \"261\" [ref=e2036] [cursor=pointer]\n                        - cell \"282\" [ref=e2037] [cursor=pointer]\n                        - cell [ref=e2038]\n                      - row \"262 - logger.info('[GUIAgent Response]:', prediction);\" [ref=e2041]:\n                        - cell \"262\" [ref=e2042] [cursor=pointer]\n                        - cell [ref=e2043] [cursor=pointer]\n                        - cell \"- logger.info('[GUIAgent Response]:', prediction);\" [ref=e2044]:\n                          - generic [ref=e2045]:\n                            - text: \"-\"\n                            - generic [ref=e4315]: logger\n                            - generic [ref=e4316]: .\n                            - generic [ref=e4317]: info\n                            - generic [ref=e4318]: (\n                            - generic [ref=e4319]:\n                              - text: \"'[GUIAgent Response\"\n                              - generic [ref=e4320]: \"]\"\n                              - text: :'\n                            - generic [ref=e4321]: \",\"\n                            - generic [ref=e4322]: prediction\n                            - generic [ref=e4323]: )\n                            - generic [ref=e4324]: ;\n                      - row \"283 + logger.info('[GUIAgent] Response:', prediction);\" [ref=e2047]:\n                        - cell [ref=e2048] [cursor=pointer]\n                        - cell \"283\" [ref=e2049] [cursor=pointer]\n                        - cell \"+ logger.info('[GUIAgent] Response:', prediction);\" [ref=e2050]:\n                          - generic [ref=e2051]:\n                            - text: +\n                            - generic [ref=e4325]: logger\n                            - generic [ref=e4326]: .\n                            - generic [ref=e4327]: info\n                            - generic [ref=e4328]: (\n                            - generic [ref=e4329]:\n                              - text: \"'[GUIAgent\"\n                              - generic [ref=e4330]: \"]\"\n                              - text: Response:'\n                            - generic [ref=e4331]: \",\"\n                            - generic [ref=e4332]: prediction\n                            - generic [ref=e4333]: )\n                            - generic [ref=e4334]: ;\n                      - row \"263 284 logger.info(\" [ref=e2053]:\n                        - cell \"263\" [ref=e2054] [cursor=pointer]\n                        - cell \"284\" [ref=e2055] [cursor=pointer]\n                        - cell \"logger.info(\" [ref=e2056]:\n                          - generic [ref=e2057]:\n                            - generic [ref=e4335]: logger\n                            - generic [ref=e4336]: .\n                            - generic [ref=e4337]: info\n                            - generic [ref=e4338]: (\n                      - row \"264 - 'GUIAgent Parsed Predictions:',\" [ref=e2058]:\n                        - cell \"264\" [ref=e2059] [cursor=pointer]\n                        - cell [ref=e2060] [cursor=pointer]\n                        - cell \"- 'GUIAgent Parsed Predictions:',\" [ref=e2061]:\n                          - generic [ref=e2062]:\n                            - text: \"-\"\n                            - generic [ref=e4339]: \"'GUIAgent Parsed Predictions:'\"\n                            - generic [ref=e4340]: \",\"\n                      - row \"285 + '[GUIAgent] Parsed Predictions:',\" [ref=e2063]:\n                        - cell [ref=e2064] [cursor=pointer]\n                        - cell \"285\" [ref=e2065] [cursor=pointer]\n                        - cell \"+ '[GUIAgent] Parsed Predictions:',\" [ref=e2066]:\n                          - generic [ref=e2067]:\n                            - text: +\n                            - generic [ref=e4341]:\n                              - text: \"'\"\n                              - generic [ref=e4342]: \"[\"\n                              - text: GUIAgent\n                              - generic [ref=e4343]: \"]\"\n                              - text: Parsed Predictions:'\n                            - generic [ref=e4344]: \",\"\n                      - row \"265 286 JSON.stringify(parsedPredictions),\" [ref=e2070]:\n                        - cell \"265\" [ref=e2071] [cursor=pointer]\n                        - cell \"286\" [ref=e2072] [cursor=pointer]\n                        - cell \"JSON.stringify(parsedPredictions),\" [ref=e2073]:\n                          - generic [ref=e2074]:\n                            - generic [ref=e4345]: JSON\n                            - generic [ref=e4346]: .\n                            - generic [ref=e4347]: stringify\n                            - generic [ref=e4348]: (\n                            - generic [ref=e4349]: parsedPredictions\n                            - generic [ref=e4350]: )\n                            - generic [ref=e4351]: \",\"\n                      - row \"266 287 );\" [ref=e2075]:\n                        - cell \"266\" [ref=e2076] [cursor=pointer]\n                        - cell \"287\" [ref=e2077] [cursor=pointer]\n                        - cell \");\" [ref=e2078]:\n                          - generic [ref=e2079]:\n                            - generic [ref=e4352]: )\n                            - generic [ref=e4353]: ;\n                      - row \"267 288\" [ref=e2080]:\n                        - cell \"267\" [ref=e2081] [cursor=pointer]\n                        - cell \"288\" [ref=e2082] [cursor=pointer]\n                        - cell [ref=e2083]\n                      - 'row \"268 289 if (!prediction) {\" [ref=e2086]':\n                        - cell \"268\" [ref=e2087] [cursor=pointer]\n                        - cell \"289\" [ref=e2088] [cursor=pointer]\n                        - 'cell \"if (!prediction) {\" [ref=e2089]':\n                          - generic [ref=e2090]:\n                            - generic [ref=e4355]: if\n                            - generic [ref=e4356]: (\n                            - generic [ref=e4357]: \"!\"\n                            - generic [ref=e4358]: prediction\n                            - generic [ref=e4359]: )\n                            - generic [ref=e4360]: \"{\"\n                      - row \"269 - logger.error('[GUIAgent Response Empty]:', prediction);\" [ref=e2091]:\n                        - cell \"269\" [ref=e2092] [cursor=pointer]\n                        - cell [ref=e2093] [cursor=pointer]\n                        - cell \"- logger.error('[GUIAgent Response Empty]:', prediction);\" [ref=e2094]:\n                          - generic [ref=e2095]:\n                            - text: \"-\"\n                            - generic [ref=e4361]: logger\n                            - generic [ref=e4362]: .\n                            - generic [ref=e4363]: error\n                            - generic [ref=e4364]: (\n                            - generic [ref=e4365]:\n                              - text: \"'[GUIAgent Response Empty\"\n                              - generic [ref=e4366]: \"]\"\n                              - text: :'\n                            - generic [ref=e4367]: \",\"\n                            - generic [ref=e4368]: prediction\n                            - generic [ref=e4369]: )\n                            - generic [ref=e4370]: ;\n                      - row \"290 + logger.error('[GUIAgent] Response Empty:', prediction);\" [ref=e2097]:\n                        - cell [ref=e2098] [cursor=pointer]\n                        - cell \"290\" [ref=e2099] [cursor=pointer]\n                        - cell \"+ logger.error('[GUIAgent] Response Empty:', prediction);\" [ref=e2100]:\n                          - generic [ref=e2101]:\n                            - text: +\n                            - generic [ref=e4371]: logger\n                            - generic [ref=e4372]: .\n                            - generic [ref=e4373]: error\n                            - generic [ref=e4374]: (\n                            - generic [ref=e4375]:\n                              - text: \"'[GUIAgent\"\n                              - generic [ref=e4376]: \"]\"\n                              - text: Response Empty:'\n                            - generic [ref=e4377]: \",\"\n                            - generic [ref=e4378]: prediction\n                            - generic [ref=e4379]: )\n                            - generic [ref=e4380]: ;\n                      - row \"270 291 continue;\" [ref=e2103]:\n                        - cell \"270\" [ref=e2104] [cursor=pointer]\n                        - cell \"291\" [ref=e2105] [cursor=pointer]\n                        - cell \"continue;\" [ref=e2106]:\n                          - generic [ref=e2107]:\n                            - generic [ref=e4381]: continue\n                            - generic [ref=e4382]: ;\n                      - 'row \"271 292 }\" [ref=e2108]':\n                        - cell \"271\" [ref=e2109] [cursor=pointer]\n                        - cell \"292\" [ref=e2110] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2111]':\n                          - generic [ref=e4383]: \"}\"\n                      - row \"272 293\" [ref=e2113]:\n                        - cell \"272\" [ref=e2114] [cursor=pointer]\n                        - cell \"293\" [ref=e2115] [cursor=pointer]\n                        - cell [ref=e2116]\n                      - row \"Expand Down Expand Up @@ -301,27 +322,32 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2119]:\n                        - cell \"Expand Down Expand Up\" [ref=e2120] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e2121] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2122] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e2124] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2125] [cursor=pointer]\n                        - cell \"@@ -301,27 +322,32 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2127]\n                      - 'row \"301 322 for (const parsedPrediction of parsedPredictions) {\" [ref=e2128]':\n                        - cell \"301\" [ref=e2129] [cursor=pointer]\n                        - cell \"322\" [ref=e2130] [cursor=pointer]\n                        - 'cell \"for (const parsedPrediction of parsedPredictions) {\" [ref=e2131]':\n                          - generic [ref=e2132]:\n                            - generic [ref=e4385]: for\n                            - generic [ref=e4386]: (\n                            - generic [ref=e4387]: const\n                            - generic [ref=e4388]: parsedPrediction\n                            - generic [ref=e4389]: of\n                            - generic [ref=e4390]: parsedPredictions\n                            - generic [ref=e4391]: )\n                            - generic [ref=e4392]: \"{\"\n                      - row \"302 323 const actionType = parsedPrediction.action_type;\" [ref=e2133]:\n                        - cell \"302\" [ref=e2134] [cursor=pointer]\n                        - cell \"323\" [ref=e2135] [cursor=pointer]\n                        - cell \"const actionType = parsedPrediction.action_type;\" [ref=e2136]:\n                          - generic [ref=e2137]:\n                            - generic [ref=e4393]: const\n                            - generic [ref=e4394]: actionType\n                            - generic [ref=e4395]: =\n                            - generic [ref=e4396]: parsedPrediction\n                            - generic [ref=e4397]: .\n                            - generic [ref=e4398]: action_type\n                            - generic [ref=e4399]: ;\n                      - row \"303 324\" [ref=e2138]:\n                        - cell \"303\" [ref=e2139] [cursor=pointer]\n                        - cell \"324\" [ref=e2140] [cursor=pointer]\n                        - cell [ref=e2141]\n                      - row \"304 - logger.info('GUIAgent Action:', actionType);\" [ref=e2144]:\n                        - cell \"304\" [ref=e2145] [cursor=pointer]\n                        - cell [ref=e2146] [cursor=pointer]\n                        - cell \"- logger.info('GUIAgent Action:', actionType);\" [ref=e2147]:\n                          - generic [ref=e2148]:\n                            - text: \"-\"\n                            - generic [ref=e4401]: logger\n                            - generic [ref=e4402]: .\n                            - generic [ref=e4403]: info\n                            - generic [ref=e4404]: (\n                            - generic [ref=e4405]: \"'GUIAgent Action:'\"\n                            - generic [ref=e4406]: \",\"\n                            - generic [ref=e4407]: actionType\n                            - generic [ref=e4408]: )\n                            - generic [ref=e4409]: ;\n                      - row \"325 + logger.info('[GUIAgent] Action:', actionType);\" [ref=e2149]:\n                        - cell [ref=e2150] [cursor=pointer]\n                        - cell \"325\" [ref=e2151] [cursor=pointer]\n                        - cell \"+ logger.info('[GUIAgent] Action:', actionType);\" [ref=e2152]:\n                          - generic [ref=e2153]:\n                            - text: +\n                            - generic [ref=e4410]: logger\n                            - generic [ref=e4411]: .\n                            - generic [ref=e4412]: info\n                            - generic [ref=e4413]: (\n                            - generic [ref=e4414]:\n                              - text: \"'\"\n                              - generic [ref=e4415]: \"[\"\n                              - text: GUIAgent\n                              - generic [ref=e4416]: \"]\"\n                              - text: Action:'\n                            - generic [ref=e4417]: \",\"\n                            - generic [ref=e4418]: actionType\n                            - generic [ref=e4419]: )\n                            - generic [ref=e4420]: ;\n                      - row \"305 326\" [ref=e2156]:\n                        - cell \"305\" [ref=e2157] [cursor=pointer]\n                        - cell \"326\" [ref=e2158] [cursor=pointer]\n                        - cell [ref=e2159]\n                      - row \"306 327 // handle internal action spaces\" [ref=e2162]:\n                        - cell \"306\" [ref=e2163] [cursor=pointer]\n                        - cell \"327\" [ref=e2164] [cursor=pointer]\n                        - cell \"// handle internal action spaces\" [ref=e2165]:\n                          - generic [ref=e4422]: // handle internal action spaces\n                      - 'row \"307 328 if (actionType === INTERNAL_ACTION_SPACES_ENUM.ERROR_ENV) {\" [ref=e2167]':\n                        - cell \"307\" [ref=e2168] [cursor=pointer]\n                        - cell \"328\" [ref=e2169] [cursor=pointer]\n                        - 'cell \"if (actionType === INTERNAL_ACTION_SPACES_ENUM.ERROR_ENV) {\" [ref=e2170]':\n                          - generic [ref=e2171]:\n                            - generic [ref=e4423]: if\n                            - generic [ref=e4424]: (\n                            - generic [ref=e4425]: actionType\n                            - generic [ref=e4426]: ===\n                            - generic [ref=e4427]: INTERNAL_ACTION_SPACES_ENUM\n                            - generic [ref=e4428]: .\n                            - generic [ref=e4429]: ERROR_ENV\n                            - generic [ref=e4430]: )\n                            - generic [ref=e4431]: \"{\"\n                      - 'row \"308 329 Object.assign(data, {\" [ref=e2172]':\n                        - cell \"308\" [ref=e2173] [cursor=pointer]\n                        - cell \"329\" [ref=e2174] [cursor=pointer]\n                        - 'cell \"Object.assign(data, {\" [ref=e2175]':\n                          - generic [ref=e2176]:\n                            - generic [ref=e4432]: Object\n                            - generic [ref=e4433]: .\n                            - generic [ref=e4434]: assign\n                            - generic [ref=e4435]: (\n                            - generic [ref=e4436]: data\n                            - generic [ref=e4437]: \",\"\n                            - generic [ref=e4438]: \"{\"\n                      - 'row \"309 330 status: StatusEnum.ERROR,\" [ref=e2177]':\n                        - cell \"309\" [ref=e2178] [cursor=pointer]\n                        - cell \"330\" [ref=e2179] [cursor=pointer]\n                        - 'cell \"status: StatusEnum.ERROR,\" [ref=e2180]':\n                          - generic [ref=e2181]:\n                            - generic [ref=e4439]: status\n                            - text: \":\"\n                            - generic [ref=e4440]: StatusEnum\n                            - generic [ref=e4441]: .\n                            - generic [ref=e4442]: ERROR\n                            - generic [ref=e4443]: \",\"\n                      - 'row \"310 - error: {\" [ref=e2182]':\n                        - cell \"310\" [ref=e2183] [cursor=pointer]\n                        - cell [ref=e2184] [cursor=pointer]\n                        - 'cell \"- error: {\" [ref=e2185]':\n                          - generic [ref=e2186]:\n                            - text: \"-\"\n                            - generic [ref=e4444]: error\n                            - text: \":\"\n                            - generic [ref=e4445]: \"{\"\n                      - 'row \"311 - code: ErrorStatusEnum.ENVIRONMENT_ERROR,\" [ref=e2187]':\n                        - cell \"311\" [ref=e2188] [cursor=pointer]\n                        - cell [ref=e2189] [cursor=pointer]\n                        - 'cell \"- code: ErrorStatusEnum.ENVIRONMENT_ERROR,\" [ref=e2190]':\n                          - generic [ref=e2191]:\n                            - text: \"-\"\n                            - generic [ref=e4446]: code\n                            - text: \":\"\n                            - generic [ref=e4447]: ErrorStatusEnum\n                            - generic [ref=e4448]: .\n                            - generic [ref=e4449]: ENVIRONMENT_ERROR\n                            - generic [ref=e4450]: \",\"\n                      - 'row \"312 - error: ''The environment error occurred when parsing the action'',\" [ref=e2192]':\n                        - cell \"312\" [ref=e2193] [cursor=pointer]\n                        - cell [ref=e2194] [cursor=pointer]\n                        - 'cell \"- error: ''The environment error occurred when parsing the action'',\" [ref=e2195]':\n                          - generic [ref=e2196]:\n                            - text: \"-\"\n                            - generic [ref=e4451]: error\n                            - text: \":\"\n                            - generic [ref=e4452]: \"'The environment error occurred when parsing the action'\"\n                            - generic [ref=e4453]: \",\"\n                      - 'row \"313 - stack: ''null'',\" [ref=e2197]':\n                        - cell \"313\" [ref=e2198] [cursor=pointer]\n                        - cell [ref=e2199] [cursor=pointer]\n                        - 'cell \"- stack: ''null'',\" [ref=e2200]':\n                          - generic [ref=e2201]:\n                            - text: \"-\"\n                            - generic [ref=e4454]: stack\n                            - text: \":\"\n                            - generic [ref=e4455]: \"'null'\"\n                            - generic [ref=e4456]: \",\"\n                      - 'row \"314 - },\" [ref=e2202]':\n                        - cell \"314\" [ref=e2203] [cursor=pointer]\n                        - cell [ref=e2204] [cursor=pointer]\n                        - 'cell \"- },\" [ref=e2205]':\n                          - generic [ref=e2206]:\n                            - text: \"-\"\n                            - generic [ref=e4457]: \"}\"\n                            - generic [ref=e4458]: \",\"\n                      - 'row \"331 + error: this.guiAgentErrorParser(\" [ref=e2207]':\n                        - cell [ref=e2208] [cursor=pointer]\n                        - cell \"331\" [ref=e2209] [cursor=pointer]\n                        - 'cell \"+ error: this.guiAgentErrorParser(\" [ref=e2210]':\n                          - generic [ref=e2211]:\n                            - text: +\n                            - generic [ref=e4459]: error\n                            - text: \":\"\n                            - generic [ref=e4460]: this\n                            - generic [ref=e4461]: .\n                            - generic [ref=e4462]: guiAgentErrorParser\n                            - generic [ref=e4463]: (\n                      - row \"332 + null,\" [ref=e2212]:\n                        - cell [ref=e2213] [cursor=pointer]\n                        - cell \"332\" [ref=e2214] [cursor=pointer]\n                        - cell \"+ null,\" [ref=e2215]:\n                          - generic [ref=e2216]:\n                            - text: +\n                            - generic [ref=e4464]: \"null\"\n                            - generic [ref=e4465]: \",\"\n                      - row \"333 + ErrorStatusEnum.ENVIRONMENT_ERROR,\" [ref=e2217]:\n                        - cell [ref=e2218] [cursor=pointer]\n                        - cell \"333\" [ref=e2219] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.ENVIRONMENT_ERROR,\" [ref=e2220]:\n                          - generic [ref=e2221]:\n                            - text: +\n                            - generic [ref=e4466]: ErrorStatusEnum\n                            - generic [ref=e4467]: .\n                            - generic [ref=e4468]: ENVIRONMENT_ERROR\n                            - generic [ref=e4469]: \",\"\n                      - row \"334 + ),\" [ref=e2222]:\n                        - cell [ref=e2223] [cursor=pointer]\n                        - cell \"334\" [ref=e2224] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e2225]:\n                          - generic [ref=e2226]:\n                            - text: +\n                            - generic [ref=e4470]: )\n                            - generic [ref=e4471]: \",\"\n                      - 'row \"315 335 });\" [ref=e2227]':\n                        - cell \"315\" [ref=e2228] [cursor=pointer]\n                        - cell \"335\" [ref=e2229] [cursor=pointer]\n                        - 'cell \"});\" [ref=e2230]':\n                          - generic [ref=e2231]:\n                            - generic [ref=e4472]: \"}\"\n                            - generic [ref=e4473]: )\n                            - generic [ref=e4474]: ;\n                      - row \"316 336 break;\" [ref=e2232]:\n                        - cell \"316\" [ref=e2233] [cursor=pointer]\n                        - cell \"336\" [ref=e2234] [cursor=pointer]\n                        - cell \"break;\" [ref=e2235]:\n                          - generic [ref=e2236]:\n                            - generic [ref=e4475]: break\n                            - generic [ref=e4476]: ;\n                      - 'row \"317 337 } else if (actionType === INTERNAL_ACTION_SPACES_ENUM.MAX_LOOP) {\" [ref=e2237]':\n                        - cell \"317\" [ref=e2238] [cursor=pointer]\n                        - cell \"337\" [ref=e2239] [cursor=pointer]\n                        - 'cell \"} else if (actionType === INTERNAL_ACTION_SPACES_ENUM.MAX_LOOP) {\" [ref=e2240]':\n                          - generic [ref=e2241]:\n                            - generic [ref=e4477]: \"}\"\n                            - generic [ref=e4478]: else\n                            - generic [ref=e4479]: if\n                            - generic [ref=e4480]: (\n                            - generic [ref=e4481]: actionType\n                            - generic [ref=e4482]: ===\n                            - generic [ref=e4483]: INTERNAL_ACTION_SPACES_ENUM\n                            - generic [ref=e4484]: .\n                            - generic [ref=e4485]: MAX_LOOP\n                            - generic [ref=e4486]: )\n                            - generic [ref=e4487]: \"{\"\n                      - row \"318 - data.status = StatusEnum.MAX_LOOP;\" [ref=e2242]:\n                        - cell \"318\" [ref=e2243] [cursor=pointer]\n                        - cell [ref=e2244] [cursor=pointer]\n                        - cell \"- data.status = StatusEnum.MAX_LOOP;\" [ref=e2245]:\n                          - generic [ref=e2246]:\n                            - text: \"-\"\n                            - generic [ref=e4488]: data\n                            - generic [ref=e4489]: .\n                            - generic [ref=e4490]: status\n                            - generic [ref=e4491]: =\n                            - generic [ref=e4492]: StatusEnum\n                            - generic [ref=e4493]: .\n                            - generic [ref=e4494]: MAX_LOOP\n                            - generic [ref=e4495]: ;\n                      - 'row \"338 + Object.assign(data, {\" [ref=e2247]':\n                        - cell [ref=e2248] [cursor=pointer]\n                        - cell \"338\" [ref=e2249] [cursor=pointer]\n                        - 'cell \"+ Object.assign(data, {\" [ref=e2250]':\n                          - generic [ref=e2251]:\n                            - text: +\n                            - generic [ref=e4496]: Object\n                            - generic [ref=e4497]: .\n                            - generic [ref=e4498]: assign\n                            - generic [ref=e4499]: (\n                            - generic [ref=e4500]: data\n                            - generic [ref=e4501]: \",\"\n                            - generic [ref=e4502]: \"{\"\n                      - 'row \"339 + status: StatusEnum.ERROR,\" [ref=e2252]':\n                        - cell [ref=e2253] [cursor=pointer]\n                        - cell \"339\" [ref=e2254] [cursor=pointer]\n                        - 'cell \"+ status: StatusEnum.ERROR,\" [ref=e2255]':\n                          - generic [ref=e2256]:\n                            - text: +\n                            - generic [ref=e4503]: status\n                            - text: \":\"\n                            - generic [ref=e4504]: StatusEnum\n                            - generic [ref=e4505]: .\n                            - generic [ref=e4506]: ERROR\n                            - generic [ref=e4507]: \",\"\n                      - 'row \"340 + error: this.guiAgentErrorParser(\" [ref=e2257]':\n                        - cell [ref=e2258] [cursor=pointer]\n                        - cell \"340\" [ref=e2259] [cursor=pointer]\n                        - 'cell \"+ error: this.guiAgentErrorParser(\" [ref=e2260]':\n                          - generic [ref=e2261]:\n                            - text: +\n                            - generic [ref=e4508]: error\n                            - text: \":\"\n                            - generic [ref=e4509]: this\n                            - generic [ref=e4510]: .\n                            - generic [ref=e4511]: guiAgentErrorParser\n                            - generic [ref=e4512]: (\n                      - row \"341 + null,\" [ref=e2262]:\n                        - cell [ref=e2263] [cursor=pointer]\n                        - cell \"341\" [ref=e2264] [cursor=pointer]\n                        - cell \"+ null,\" [ref=e2265]:\n                          - generic [ref=e2266]:\n                            - text: +\n                            - generic [ref=e4513]: \"null\"\n                            - generic [ref=e4514]: \",\"\n                      - row \"342 + ErrorStatusEnum.REACH_MAXLOOP_ERROR,\" [ref=e2267]:\n                        - cell [ref=e2268] [cursor=pointer]\n                        - cell \"342\" [ref=e2269] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.REACH_MAXLOOP_ERROR,\" [ref=e2270]:\n                          - generic [ref=e2271]:\n                            - text: +\n                            - generic [ref=e4515]: ErrorStatusEnum\n                            - generic [ref=e4516]: .\n                            - generic [ref=e4517]: REACH_MAXLOOP_ERROR\n                            - generic [ref=e4518]: \",\"\n                      - row \"343 + ),\" [ref=e2272]:\n                        - cell [ref=e2273] [cursor=pointer]\n                        - cell \"343\" [ref=e2274] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e2275]:\n                          - generic [ref=e2276]:\n                            - text: +\n                            - generic [ref=e4519]: )\n                            - generic [ref=e4520]: \",\"\n                      - 'row \"344 + });\" [ref=e2277]':\n                        - cell [ref=e2278] [cursor=pointer]\n                        - cell \"344\" [ref=e2279] [cursor=pointer]\n                        - 'cell \"+ });\" [ref=e2280]':\n                          - generic [ref=e2281]:\n                            - text: +\n                            - generic [ref=e4521]: \"}\"\n                            - generic [ref=e4522]: )\n                            - generic [ref=e4523]: ;\n                      - row \"319 345 break;\" [ref=e2282]:\n                        - cell \"319\" [ref=e2283] [cursor=pointer]\n                        - cell \"345\" [ref=e2284] [cursor=pointer]\n                        - cell \"break;\" [ref=e2285]:\n                          - generic [ref=e2286]:\n                            - generic [ref=e4524]: break\n                            - generic [ref=e4525]: ;\n                      - 'row \"320 346 }\" [ref=e2287]':\n                        - cell \"320\" [ref=e2288] [cursor=pointer]\n                        - cell \"346\" [ref=e2289] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2290]':\n                          - generic [ref=e4526]: \"}\"\n                      - row \"321 347\" [ref=e2292]:\n                        - cell \"321\" [ref=e2293] [cursor=pointer]\n                        - cell \"347\" [ref=e2294] [cursor=pointer]\n                        - cell [ref=e2295]\n                      - 'row \"322 348 if (!signal?.aborted && !this.isStopped) {\" [ref=e2298]':\n                        - cell \"322\" [ref=e2299] [cursor=pointer]\n                        - cell \"348\" [ref=e2300] [cursor=pointer]\n                        - 'cell \"if (!signal?.aborted && !this.isStopped) {\" [ref=e2301]':\n                          - generic [ref=e2302]:\n                            - generic [ref=e4528]: if\n                            - generic [ref=e4529]: (\n                            - generic [ref=e4530]: \"!\"\n                            - generic [ref=e4531]: signal\n                            - generic [ref=e4532]: \"?.\"\n                            - generic [ref=e4533]: aborted\n                            - generic [ref=e4534]: \"&&\"\n                            - generic [ref=e4535]: \"!\"\n                            - generic [ref=e4536]: this\n                            - generic [ref=e4537]: .\n                            - generic [ref=e4538]: isStopped\n                            - generic [ref=e4539]: )\n                            - generic [ref=e4540]: \"{\"\n                      - row \"323 349 logger.info(\" [ref=e2303]:\n                        - cell \"323\" [ref=e2304] [cursor=pointer]\n                        - cell \"349\" [ref=e2305] [cursor=pointer]\n                        - cell \"logger.info(\" [ref=e2306]:\n                          - generic [ref=e2307]:\n                            - generic [ref=e4541]: logger\n                            - generic [ref=e4542]: .\n                            - generic [ref=e4543]: info\n                            - generic [ref=e4544]: (\n                      - row \"324 - 'GUIAgent Action Inputs:',\" [ref=e2308]:\n                        - cell \"324\" [ref=e2309] [cursor=pointer]\n                        - cell [ref=e2310] [cursor=pointer]\n                        - cell \"- 'GUIAgent Action Inputs:',\" [ref=e2311]:\n                          - generic [ref=e2312]:\n                            - text: \"-\"\n                            - generic [ref=e4545]: \"'GUIAgent Action Inputs:'\"\n                            - generic [ref=e4546]: \",\"\n                      - row \"350 + '[GUIAgent] Action Inputs:',\" [ref=e2313]:\n                        - cell [ref=e2314] [cursor=pointer]\n                        - cell \"350\" [ref=e2315] [cursor=pointer]\n                        - cell \"+ '[GUIAgent] Action Inputs:',\" [ref=e2316]:\n                          - generic [ref=e2317]:\n                            - text: +\n                            - generic [ref=e4547]:\n                              - text: \"'\"\n                              - generic [ref=e4548]: \"[\"\n                              - text: GUIAgent\n                              - generic [ref=e4549]: \"]\"\n                              - text: Action Inputs:'\n                            - generic [ref=e4550]: \",\"\n                      - row \"325 351 parsedPrediction.action_inputs,\" [ref=e2320]:\n                        - cell \"325\" [ref=e2321] [cursor=pointer]\n                        - cell \"351\" [ref=e2322] [cursor=pointer]\n                        - cell \"parsedPrediction.action_inputs,\" [ref=e2323]:\n                          - generic [ref=e2324]:\n                            - generic [ref=e4551]: parsedPrediction\n                            - generic [ref=e4552]: .\n                            - generic [ref=e4553]: action_inputs\n                            - generic [ref=e4554]: \",\"\n                      - row \"326 352 parsedPrediction.action_type,\" [ref=e2325]:\n                        - cell \"326\" [ref=e2326] [cursor=pointer]\n                        - cell \"352\" [ref=e2327] [cursor=pointer]\n                        - cell \"parsedPrediction.action_type,\" [ref=e2328]:\n                          - generic [ref=e2329]:\n                            - generic [ref=e4555]: parsedPrediction\n                            - generic [ref=e4556]: .\n                            - generic [ref=e4557]: action_type\n                            - generic [ref=e4558]: \",\"\n                      - row \"327 353 );\" [ref=e2330]:\n                        - cell \"327\" [ref=e2331] [cursor=pointer]\n                        - cell \"353\" [ref=e2332] [cursor=pointer]\n                        - cell \");\" [ref=e2333]:\n                          - generic [ref=e2334]:\n                            - generic [ref=e4559]: )\n                            - generic [ref=e4560]: ;\n                      - row \"Expand All @@ -341,7 +367,14 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2335]:\n                        - cell \"Expand All\" [ref=e2336] [cursor=pointer]:\n                          - link \"Expand All\" [ref=e2337] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2338] [cursor=pointer]\n                        - cell \"@@ -341,7 +367,14 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2340]\n                      - 'row \"341 367 onRetry: retry?.execute?.onRetry,\" [ref=e2341]':\n                        - cell \"341\" [ref=e2342] [cursor=pointer]\n                        - cell \"367\" [ref=e2343] [cursor=pointer]\n                        - 'cell \"onRetry: retry?.execute?.onRetry,\" [ref=e2344]':\n                          - generic [ref=e2345]:\n                            - generic [ref=e4561]: onRetry\n                            - text: \":\"\n                            - generic [ref=e4562]: retry\n                            - generic [ref=e4563]: \"?.\"\n                            - generic [ref=e4564]: execute\n                            - generic [ref=e4565]: \"?.\"\n                            - generic [ref=e4566]: onRetry\n                            - generic [ref=e4567]: \",\"\n                      - 'row \"342 368 },\" [ref=e2346]':\n                        - cell \"342\" [ref=e2347] [cursor=pointer]\n                        - cell \"368\" [ref=e2348] [cursor=pointer]\n                        - 'cell \"},\" [ref=e2349]':\n                          - generic [ref=e2350]:\n                            - generic [ref=e4568]: \"}\"\n                            - generic [ref=e4569]: \",\"\n                      - 'row \"343 369 ).catch((e) => {\" [ref=e2351]':\n                        - cell \"343\" [ref=e2352] [cursor=pointer]\n                        - cell \"369\" [ref=e2353] [cursor=pointer]\n                        - 'cell \").catch((e) => {\" [ref=e2354]':\n                          - generic [ref=e2355]:\n                            - generic [ref=e4570]: )\n                            - generic [ref=e4571]: .\n                            - generic [ref=e4572]: catch\n                            - generic [ref=e4573]: (\n                            - generic [ref=e4574]: (\n                            - generic [ref=e4575]: e\n                            - generic [ref=e4576]: )\n                            - generic [ref=e4577]: =>\n                            - generic [ref=e4578]: \"{\"\n                      - row \"344 - logger.error('GUIAgent execute error', e);\" [ref=e2356]:\n                        - cell \"344\" [ref=e2357] [cursor=pointer]\n                        - cell [ref=e2358] [cursor=pointer]\n                        - cell \"- logger.error('GUIAgent execute error', e);\" [ref=e2359]:\n                          - generic [ref=e2360]:\n                            - text: \"-\"\n                            - generic [ref=e4579]: logger\n                            - generic [ref=e4580]: .\n                            - generic [ref=e4581]: error\n                            - generic [ref=e4582]: (\n                            - generic [ref=e4583]: \"'GUIAgent execute error'\"\n                            - generic [ref=e4584]: \",\"\n                            - generic [ref=e4585]: e\n                            - generic [ref=e4586]: )\n                            - generic [ref=e4587]: ;\n                      - row \"370 + logger.error('[GUIAgent] execute error', e);\" [ref=e2361]:\n                        - cell [ref=e2362] [cursor=pointer]\n                        - cell \"370\" [ref=e2363] [cursor=pointer]\n                        - cell \"+ logger.error('[GUIAgent] execute error', e);\" [ref=e2364]:\n                          - generic [ref=e2365]:\n                            - text: +\n                            - generic [ref=e4588]: logger\n                            - generic [ref=e4589]: .\n                            - generic [ref=e4590]: error\n                            - generic [ref=e4591]: (\n                            - generic [ref=e4592]: \"'[GUIAgent] execute error'\"\n                            - generic [ref=e4593]: \",\"\n                            - generic [ref=e4594]: e\n                            - generic [ref=e4595]: )\n                            - generic [ref=e4596]: ;\n                      - 'row \"371 + Object.assign(data, {\" [ref=e2366]':\n                        - cell [ref=e2367] [cursor=pointer]\n                        - cell \"371\" [ref=e2368] [cursor=pointer]\n                        - 'cell \"+ Object.assign(data, {\" [ref=e2369]':\n                          - generic [ref=e2370]:\n                            - text: +\n                            - generic [ref=e4597]: Object\n                            - generic [ref=e4598]: .\n                            - generic [ref=e4599]: assign\n                            - generic [ref=e4600]: (\n                            - generic [ref=e4601]: data\n                            - generic [ref=e4602]: \",\"\n                            - generic [ref=e4603]: \"{\"\n                      - 'row \"372 + status: StatusEnum.ERROR,\" [ref=e2371]':\n                        - cell [ref=e2372] [cursor=pointer]\n                        - cell \"372\" [ref=e2373] [cursor=pointer]\n                        - 'cell \"+ status: StatusEnum.ERROR,\" [ref=e2374]':\n                          - generic [ref=e2375]:\n                            - text: +\n                            - generic [ref=e4604]: status\n                            - text: \":\"\n                            - generic [ref=e4605]: StatusEnum\n                            - generic [ref=e4606]: .\n                            - generic [ref=e4607]: ERROR\n                            - generic [ref=e4608]: \",\"\n                      - 'row \"373 + error: this.guiAgentErrorParser(\" [ref=e2376]':\n                        - cell [ref=e2377] [cursor=pointer]\n                        - cell \"373\" [ref=e2378] [cursor=pointer]\n                        - 'cell \"+ error: this.guiAgentErrorParser(\" [ref=e2379]':\n                          - generic [ref=e2380]:\n                            - text: +\n                            - generic [ref=e4609]: error\n                            - text: \":\"\n                            - generic [ref=e4610]: this\n                            - generic [ref=e4611]: .\n                            - generic [ref=e4612]: guiAgentErrorParser\n                            - generic [ref=e4613]: (\n                      - row \"374 + e,\" [ref=e2381]:\n                        - cell [ref=e2382] [cursor=pointer]\n                        - cell \"374\" [ref=e2383] [cursor=pointer]\n                        - cell \"+ e,\" [ref=e2384]:\n                          - generic [ref=e2385]:\n                            - text: +\n                            - generic [ref=e4614]: e\n                            - generic [ref=e4615]: \",\"\n                      - row \"375 + ErrorStatusEnum.EXECUTE_RETRY_ERROR,\" [ref=e2386]:\n                        - cell [ref=e2387] [cursor=pointer]\n                        - cell \"375\" [ref=e2388] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.EXECUTE_RETRY_ERROR,\" [ref=e2389]:\n                          - generic [ref=e2390]:\n                            - text: +\n                            - generic [ref=e4616]: ErrorStatusEnum\n                            - generic [ref=e4617]: .\n                            - generic [ref=e4618]: EXECUTE_RETRY_ERROR\n                            - generic [ref=e4619]: \",\"\n                      - row \"376 + ),\" [ref=e2391]:\n                        - cell [ref=e2392] [cursor=pointer]\n                        - cell \"376\" [ref=e2393] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e2394]:\n                          - generic [ref=e2395]:\n                            - text: +\n                            - generic [ref=e4620]: )\n                            - generic [ref=e4621]: \",\"\n                      - 'row \"377 + });\" [ref=e2396]':\n                        - cell [ref=e2397] [cursor=pointer]\n                        - cell \"377\" [ref=e2398] [cursor=pointer]\n                        - 'cell \"+ });\" [ref=e2399]':\n                          - generic [ref=e2400]:\n                            - text: +\n                            - generic [ref=e4622]: \"}\"\n                            - generic [ref=e4623]: )\n                            - generic [ref=e4624]: ;\n                      - 'row \"345 378 });\" [ref=e2401]':\n                        - cell \"345\" [ref=e2402] [cursor=pointer]\n                        - cell \"378\" [ref=e2403] [cursor=pointer]\n                        - 'cell \"});\" [ref=e2404]':\n                          - generic [ref=e2405]:\n                            - generic [ref=e4625]: \"}\"\n                            - generic [ref=e4626]: )\n                            - generic [ref=e4627]: ;\n                      - row \"346 379\" [ref=e2406]:\n                        - cell \"346\" [ref=e2407] [cursor=pointer]\n                        - cell \"379\" [ref=e2408] [cursor=pointer]\n                        - cell [ref=e2409]\n                      - 'row \"347 380 if (executeOutput && executeOutput?.status) {\" [ref=e2412]':\n                        - cell \"347\" [ref=e2413] [cursor=pointer]\n                        - cell \"380\" [ref=e2414] [cursor=pointer]\n                        - 'cell \"if (executeOutput && executeOutput?.status) {\" [ref=e2415]':\n                          - generic [ref=e2416]:\n                            - generic [ref=e4629]: if\n                            - generic [ref=e4630]: (\n                            - generic [ref=e4631]: executeOutput\n                            - generic [ref=e4632]: \"&&\"\n                            - generic [ref=e4633]: executeOutput\n                            - generic [ref=e4634]: \"?.\"\n                            - generic [ref=e4635]: status\n                            - generic [ref=e4636]: )\n                            - generic [ref=e4637]: \"{\"\n                      - row \"Expand Down Expand Up @@ -370,24 +403,25 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2417]:\n                        - cell \"Expand Down Expand Up\" [ref=e2418] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e2419] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2420] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e2422] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2423] [cursor=pointer]\n                        - cell \"@@ -370,24 +403,25 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2425]\n                      - 'row \"370 403 }\" [ref=e2426]':\n                        - cell \"370\" [ref=e2427] [cursor=pointer]\n                        - cell \"403\" [ref=e2428] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2429]':\n                          - generic [ref=e4638]: \"}\"\n                      - 'row \"371 404 }\" [ref=e2431]':\n                        - cell \"371\" [ref=e2432] [cursor=pointer]\n                        - cell \"404\" [ref=e2433] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2434]':\n                          - generic [ref=e4639]: \"}\"\n                      - 'row \"372 405 } catch (error) {\" [ref=e2436]':\n                        - cell \"372\" [ref=e2437] [cursor=pointer]\n                        - cell \"405\" [ref=e2438] [cursor=pointer]\n                        - 'cell \"} catch (error) {\" [ref=e2439]':\n                          - generic [ref=e2440]:\n                            - generic [ref=e4640]: \"}\"\n                            - generic [ref=e4641]: catch\n                            - generic [ref=e4642]: (\n                            - generic [ref=e4643]: error\n                            - generic [ref=e4644]: )\n                            - generic [ref=e4645]: \"{\"\n                      - row \"406 + logger.error('[GUIAgent] Catch error', error);\" [ref=e2441]:\n                        - cell [ref=e2442] [cursor=pointer]\n                        - cell \"406\" [ref=e2443] [cursor=pointer]\n                        - cell \"+ logger.error('[GUIAgent] Catch error', error);\" [ref=e2444]:\n                          - generic [ref=e2445]:\n                            - text: +\n                            - generic [ref=e4646]: logger\n                            - generic [ref=e4647]: .\n                            - generic [ref=e4648]: error\n                            - generic [ref=e4649]: (\n                            - generic [ref=e4650]: \"'[GUIAgent] Catch error'\"\n                            - generic [ref=e4651]: \",\"\n                            - generic [ref=e4652]: error\n                            - generic [ref=e4653]: )\n                            - generic [ref=e4654]: ;\n                      - row \"373 407 if (\" [ref=e2446]:\n                        - cell \"373\" [ref=e2447] [cursor=pointer]\n                        - cell \"407\" [ref=e2448] [cursor=pointer]\n                        - cell \"if (\" [ref=e2449]:\n                          - generic [ref=e2450]:\n                            - generic [ref=e4655]: if\n                            - generic [ref=e4656]: (\n                      - row \"374 408 error instanceof Error &&\" [ref=e2451]:\n                        - cell \"374\" [ref=e2452] [cursor=pointer]\n                        - cell \"408\" [ref=e2453] [cursor=pointer]\n                        - cell \"error instanceof Error &&\" [ref=e2454]:\n                          - generic [ref=e2455]:\n                            - generic [ref=e4657]: error\n                            - generic [ref=e4658]: instanceof\n                            - generic [ref=e4659]: Error\n                            - generic [ref=e4660]: \"&&\"\n                      - row \"375 409 (error.name === 'AbortError' || error.message?.includes('aborted'))\" [ref=e2456]:\n                        - cell \"375\" [ref=e2457] [cursor=pointer]\n                        - cell \"409\" [ref=e2458] [cursor=pointer]\n                        - cell \"(error.name === 'AbortError' || error.message?.includes('aborted'))\" [ref=e2459]:\n                          - generic [ref=e2460]:\n                            - generic [ref=e4661]: (\n                            - generic [ref=e4662]: error\n                            - generic [ref=e4663]: .\n                            - generic [ref=e4664]: name\n                            - generic [ref=e4665]: ===\n                            - generic [ref=e4666]: \"'AbortError'\"\n                            - generic [ref=e4667]: \"||\"\n                            - generic [ref=e4668]: error\n                            - generic [ref=e4669]: .\n                            - generic [ref=e4670]: message\n                            - generic [ref=e4671]: \"?.\"\n                            - generic [ref=e4672]: includes\n                            - generic [ref=e4673]: (\n                            - generic [ref=e4674]: \"'aborted'\"\n                            - generic [ref=e4675]: )\n                            - generic [ref=e4676]: )\n                      - 'row \"376 410 ) {\" [ref=e2461]':\n                        - cell \"376\" [ref=e2462] [cursor=pointer]\n                        - cell \"410\" [ref=e2463] [cursor=pointer]\n                        - 'cell \") {\" [ref=e2464]':\n                          - generic [ref=e2465]:\n                            - generic [ref=e4677]: )\n                            - generic [ref=e4678]: \"{\"\n                      - row \"377 - logger.info('Request was aborted');\" [ref=e2466]:\n                        - cell \"377\" [ref=e2467] [cursor=pointer]\n                        - cell [ref=e2468] [cursor=pointer]\n                        - cell \"- logger.info('Request was aborted');\" [ref=e2469]:\n                          - generic [ref=e2470]:\n                            - text: \"-\"\n                            - generic [ref=e4679]: logger\n                            - generic [ref=e4680]: .\n                            - generic [ref=e4681]: info\n                            - generic [ref=e4682]: (\n                            - generic [ref=e4683]:\n                              - text: \"'\"\n                              - generic [ref=e4684]: Request\n                              - text: was aborted'\n                            - generic [ref=e4685]: )\n                            - generic [ref=e4686]: ;\n                      - 'row \"411 + logger.info(''[GUIAgent] Catch: request was aborted'');\" [ref=e2472]':\n                        - cell [ref=e2473] [cursor=pointer]\n                        - cell \"411\" [ref=e2474] [cursor=pointer]\n                        - 'cell \"+ logger.info(''[GUIAgent] Catch: request was aborted'');\" [ref=e2475]':\n                          - generic [ref=e2476]:\n                            - text: +\n                            - generic [ref=e4687]: logger\n                            - generic [ref=e4688]: .\n                            - generic [ref=e4689]: info\n                            - generic [ref=e4690]: (\n                            - generic [ref=e4691]:\n                              - text: \"'\"\n                              - generic [ref=e4692]: \"[GUIAgent] Catch: request\"\n                              - text: was aborted'\n                            - generic [ref=e4693]: )\n                            - generic [ref=e4694]: ;\n                      - row \"378 412 data.status = StatusEnum.USER_STOPPED;\" [ref=e2478]:\n                        - cell \"378\" [ref=e2479] [cursor=pointer]\n                        - cell \"412\" [ref=e2480] [cursor=pointer]\n                        - cell \"data.status = StatusEnum.USER_STOPPED;\" [ref=e2481]:\n                          - generic [ref=e2482]:\n                            - generic [ref=e4695]: data\n                            - generic [ref=e4696]: .\n                            - generic [ref=e4697]: status\n                            - generic [ref=e4698]: =\n                            - generic [ref=e4699]: StatusEnum\n                            - generic [ref=e4700]: .\n                            - generic [ref=e4701]: USER_STOPPED\n                            - generic [ref=e4702]: ;\n                      - row \"379 413 return;\" [ref=e2483]:\n                        - cell \"379\" [ref=e2484] [cursor=pointer]\n                        - cell \"413\" [ref=e2485] [cursor=pointer]\n                        - cell \"return;\" [ref=e2486]:\n                          - generic [ref=e2487]:\n                            - generic [ref=e4703]: return\n                            - generic [ref=e4704]: ;\n                      - 'row \"380 414 }\" [ref=e2488]':\n                        - cell \"380\" [ref=e2489] [cursor=pointer]\n                        - cell \"414\" [ref=e2490] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2491]':\n                          - generic [ref=e4705]: \"}\"\n                      - row \"381 415\" [ref=e2493]:\n                        - cell \"381\" [ref=e2494] [cursor=pointer]\n                        - cell \"415\" [ref=e2495] [cursor=pointer]\n                        - cell [ref=e2496]\n                      - row \"382 - logger.error('[GUIAgent] run error', error);\" [ref=e2499]:\n                        - cell \"382\" [ref=e2500] [cursor=pointer]\n                        - cell [ref=e2501] [cursor=pointer]\n                        - cell \"- logger.error('[GUIAgent] run error', error);\" [ref=e2502]:\n                          - generic [ref=e2503]:\n                            - text: \"-\"\n                            - generic [ref=e4707]: logger\n                            - generic [ref=e4708]: .\n                            - generic [ref=e4709]: error\n                            - generic [ref=e4710]: (\n                            - generic [ref=e4711]: \"'[GUIAgent] run error'\"\n                            - generic [ref=e4712]: \",\"\n                            - generic [ref=e4713]: error\n                            - generic [ref=e4714]: )\n                            - generic [ref=e4715]: ;\n                      - row \"383 416 data.status = StatusEnum.ERROR;\" [ref=e2504]:\n                        - cell \"383\" [ref=e2505] [cursor=pointer]\n                        - cell \"416\" [ref=e2506] [cursor=pointer]\n                        - cell \"data.status = StatusEnum.ERROR;\" [ref=e2507]:\n                          - generic [ref=e2508]:\n                            - generic [ref=e4716]: data\n                            - generic [ref=e4717]: .\n                            - generic [ref=e4718]: status\n                            - generic [ref=e4719]: =\n                            - generic [ref=e4720]: StatusEnum\n                            - generic [ref=e4721]: .\n                            - generic [ref=e4722]: ERROR\n                            - generic [ref=e4723]: ;\n                      - 'row \"384 - data.error = {\" [ref=e2509]':\n                        - cell \"384\" [ref=e2510] [cursor=pointer]\n                        - cell [ref=e2511] [cursor=pointer]\n                        - 'cell \"- data.error = {\" [ref=e2512]':\n                          - generic [ref=e2513]:\n                            - text: \"-\"\n                            - generic [ref=e4724]: data\n                            - generic [ref=e4725]: .\n                            - generic [ref=e4726]: error\n                            - generic [ref=e4727]: =\n                            - generic [ref=e4728]: \"{\"\n                      - 'row \"385 - code: ErrorStatusEnum.EXECUTE_ERROR,\" [ref=e2514]':\n                        - cell \"385\" [ref=e2515] [cursor=pointer]\n                        - cell [ref=e2516] [cursor=pointer]\n                        - 'cell \"- code: ErrorStatusEnum.EXECUTE_ERROR,\" [ref=e2517]':\n                          - generic [ref=e2518]:\n                            - text: \"-\"\n                            - generic [ref=e4729]: code\n                            - text: \":\"\n                            - generic [ref=e4730]: ErrorStatusEnum\n                            - generic [ref=e4731]: .\n                            - generic [ref=e4732]: EXECUTE_ERROR\n                            - generic [ref=e4733]: \",\"\n                      - 'row \"386 - error: ''GUIAgent Service Error'',\" [ref=e2519]':\n                        - cell \"386\" [ref=e2520] [cursor=pointer]\n                        - cell [ref=e2521] [cursor=pointer]\n                        - 'cell \"- error: ''GUIAgent Service Error'',\" [ref=e2522]':\n                          - generic [ref=e2523]:\n                            - text: \"-\"\n                            - generic [ref=e4734]: error\n                            - text: \":\"\n                            - generic [ref=e4735]: \"'GUIAgent Service Error'\"\n                            - generic [ref=e4736]: \",\"\n                      - 'row \"387 - stack: `${error}`,\" [ref=e2524]':\n                        - cell \"387\" [ref=e2525] [cursor=pointer]\n                        - cell [ref=e2526] [cursor=pointer]\n                        - 'cell \"- stack: `${error}`,\" [ref=e2527]':\n                          - generic [ref=e2528]:\n                            - text: \"-\"\n                            - generic [ref=e4737]: stack\n                            - text: \":\"\n                            - generic [ref=e4738]:\n                              - text: \"`\"\n                              - generic [ref=e4739]:\n                                - generic [ref=e4740]: \"${\"\n                                - generic [ref=e4741]: error\n                                - generic [ref=e4742]: \"}\"\n                              - text: \"`\"\n                            - generic [ref=e4743]: \",\"\n                      - 'row \"388 - };\" [ref=e2529]':\n                        - cell \"388\" [ref=e2530] [cursor=pointer]\n                        - cell [ref=e2531] [cursor=pointer]\n                        - 'cell \"- };\" [ref=e2532]':\n                          - generic [ref=e2533]:\n                            - text: \"-\"\n                            - generic [ref=e4744]: \"}\"\n                            - generic [ref=e4745]: ;\n                      - row \"389 - throw error;\" [ref=e2534]:\n                        - cell \"389\" [ref=e2535] [cursor=pointer]\n                        - cell [ref=e2536] [cursor=pointer]\n                        - cell \"- throw error;\" [ref=e2537]:\n                          - generic [ref=e2538]:\n                            - text: \"-\"\n                            - generic [ref=e4746]: throw\n                            - generic [ref=e4747]: error\n                            - generic [ref=e4748]: ;\n                      - row \"417 + data.error = this.guiAgentErrorParser(error);\" [ref=e2539]:\n                        - cell [ref=e2540] [cursor=pointer]\n                        - cell \"417\" [ref=e2541] [cursor=pointer]\n                        - cell \"+ data.error = this.guiAgentErrorParser(error);\" [ref=e2542]:\n                          - generic [ref=e2543]:\n                            - text: +\n                            - generic [ref=e4749]: data\n                            - generic [ref=e4750]: .\n                            - generic [ref=e4751]: error\n                            - generic [ref=e4752]: =\n                            - generic [ref=e4753]: this\n                            - generic [ref=e4754]: .\n                            - generic [ref=e4755]: guiAgentErrorParser\n                            - generic [ref=e4756]: (\n                            - generic [ref=e4757]: error\n                            - generic [ref=e4758]: )\n                            - generic [ref=e4759]: ;\n                      - row \"418 +\" [ref=e2544]:\n                        - cell [ref=e2545] [cursor=pointer]\n                        - cell \"418\" [ref=e2546] [cursor=pointer]\n                        - cell \"+\" [ref=e2547]:\n                          - generic: +\n                      - row \"419 + // We only use OnError callback to dispatch error information to caller,\" [ref=e2550]:\n                        - cell [ref=e2551] [cursor=pointer]\n                        - cell \"419\" [ref=e2552] [cursor=pointer]\n                        - cell \"+ // We only use OnError callback to dispatch error information to caller,\" [ref=e2553]:\n                          - generic [ref=e2554]:\n                            - text: +\n                            - generic [ref=e4761]: // We only use OnError callback to dispatch error information to caller,\n                      - row \"420 + // and we will not throw error to the caller.\" [ref=e2555]:\n                        - cell [ref=e2556] [cursor=pointer]\n                        - cell \"420\" [ref=e2557] [cursor=pointer]\n                        - cell \"+ // and we will not throw error to the caller.\" [ref=e2558]:\n                          - generic [ref=e2559]:\n                            - text: +\n                            - generic [ref=e4762]: // and we will not throw error to the caller.\n                      - row \"421 + // throw error;\" [ref=e2560]:\n                        - cell [ref=e2561] [cursor=pointer]\n                        - cell \"421\" [ref=e2562] [cursor=pointer]\n                        - cell \"+ // throw error;\" [ref=e2563]:\n                          - generic [ref=e2564]:\n                            - text: +\n                            - generic [ref=e4763]: // throw error;\n                      - 'row \"390 422 } finally {\" [ref=e2565]':\n                        - cell \"390\" [ref=e2566] [cursor=pointer]\n                        - cell \"422\" [ref=e2567] [cursor=pointer]\n                        - 'cell \"} finally {\" [ref=e2568]':\n                          - generic [ref=e2569]:\n                            - generic [ref=e4764]: \"}\"\n                            - generic [ref=e4765]: finally\n                            - generic [ref=e4766]: \"{\"\n                      - 'row \"423 + logger.info(''[GUIAgent] Finally: status'', data.status);\" [ref=e2570]':\n                        - cell [ref=e2571] [cursor=pointer]\n                        - cell \"423\" [ref=e2572] [cursor=pointer]\n                        - 'cell \"+ logger.info(''[GUIAgent] Finally: status'', data.status);\" [ref=e2573]':\n                          - generic [ref=e2574]:\n                            - text: +\n                            - generic [ref=e4767]: logger\n                            - generic [ref=e4768]: .\n                            - generic [ref=e4769]: info\n                            - generic [ref=e4770]: (\n                            - generic [ref=e4771]: \"'[GUIAgent] Finally: status'\"\n                            - generic [ref=e4772]: \",\"\n                            - generic [ref=e4773]: data\n                            - generic [ref=e4774]: .\n                            - generic [ref=e4775]: status\n                            - generic [ref=e4776]: )\n                            - generic [ref=e4777]: ;\n                      - row \"424 +\" [ref=e2575]:\n                        - cell [ref=e2576] [cursor=pointer]\n                        - cell \"424\" [ref=e2577] [cursor=pointer]\n                        - cell \"+\" [ref=e2578]:\n                          - generic: +\n                      - 'row \"391 425 if (data.status === StatusEnum.USER_STOPPED) {\" [ref=e2581]':\n                        - cell \"391\" [ref=e2582] [cursor=pointer]\n                        - cell \"425\" [ref=e2583] [cursor=pointer]\n                        - 'cell \"if (data.status === StatusEnum.USER_STOPPED) {\" [ref=e2584]':\n                          - generic [ref=e2585]:\n                            - generic [ref=e4779]: if\n                            - generic [ref=e4780]: (\n                            - generic [ref=e4781]: data\n                            - generic [ref=e4782]: .\n                            - generic [ref=e4783]: status\n                            - generic [ref=e4784]: ===\n                            - generic [ref=e4785]: StatusEnum\n                            - generic [ref=e4786]: .\n                            - generic [ref=e4787]: USER_STOPPED\n                            - generic [ref=e4788]: )\n                            - generic [ref=e4789]: \"{\"\n                      - 'row \"392 426 await operator.execute({\" [ref=e2586]':\n                        - cell \"392\" [ref=e2587] [cursor=pointer]\n                        - cell \"426\" [ref=e2588] [cursor=pointer]\n                        - 'cell \"await operator.execute({\" [ref=e2589]':\n                          - generic [ref=e2590]:\n                            - generic [ref=e4790]: await\n                            - generic [ref=e4791]: operator\n                            - generic [ref=e4792]: .\n                            - generic [ref=e4793]: execute\n                            - generic [ref=e4794]: (\n                            - generic [ref=e4795]: \"{\"\n                      - 'row \"393 427 prediction: '''',\" [ref=e2591]':\n                        - cell \"393\" [ref=e2592] [cursor=pointer]\n                        - cell \"427\" [ref=e2593] [cursor=pointer]\n                        - 'cell \"prediction: '''',\" [ref=e2594]':\n                          - generic [ref=e2595]:\n                            - generic [ref=e4796]: prediction\n                            - text: \":\"\n                            - generic [ref=e4797]: \"''\"\n                            - generic [ref=e4798]: \",\"\n                      - row \"Expand All @@ -403,18 +437,20 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2596]:\n                        - cell \"Expand All\" [ref=e2597] [cursor=pointer]:\n                          - link \"Expand All\" [ref=e2598] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2599] [cursor=pointer]\n                        - cell \"@@ -403,18 +437,20 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2601]\n                      - 'row \"403 437 factors: [0, 0],\" [ref=e2602]':\n                        - cell \"403\" [ref=e2603] [cursor=pointer]\n                        - cell \"437\" [ref=e2604] [cursor=pointer]\n                        - 'cell \"factors: [0, 0],\" [ref=e2605]':\n                          - generic [ref=e2606]:\n                            - generic [ref=e4799]: factors\n                            - text: \":\"\n                            - generic [ref=e4800]: \"[\"\n                            - generic [ref=e4801]: \"0\"\n                            - generic [ref=e4802]: \",\"\n                            - generic [ref=e4803]: \"0\"\n                            - generic [ref=e4804]: \"]\"\n                            - generic [ref=e4805]: \",\"\n                      - 'row \"404 438 });\" [ref=e2607]':\n                        - cell \"404\" [ref=e2608] [cursor=pointer]\n                        - cell \"438\" [ref=e2609] [cursor=pointer]\n                        - 'cell \"});\" [ref=e2610]':\n                          - generic [ref=e2611]:\n                            - generic [ref=e4806]: \"}\"\n                            - generic [ref=e4807]: )\n                            - generic [ref=e4808]: ;\n                      - 'row \"405 439 }\" [ref=e2612]':\n                        - cell \"405\" [ref=e2613] [cursor=pointer]\n                        - cell \"439\" [ref=e2614] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2615]':\n                          - generic [ref=e4809]: \"}\"\n                      - row \"440 +\" [ref=e2617]:\n                        - cell [ref=e2618] [cursor=pointer]\n                        - cell \"440\" [ref=e2619] [cursor=pointer]\n                        - cell \"+\" [ref=e2620]:\n                          - generic: +\n                      - 'row \"406 441 await onData?.({ data: { ...data, conversations: [] } });\" [ref=e2623]':\n                        - cell \"406\" [ref=e2624] [cursor=pointer]\n                        - cell \"441\" [ref=e2625] [cursor=pointer]\n                        - 'cell \"await onData?.({ data: { ...data, conversations: [] } });\" [ref=e2626]':\n                          - generic [ref=e2627]:\n                            - generic [ref=e4811]: await\n                            - generic [ref=e4812]: onData\n                            - text: \"?.\"\n                            - generic [ref=e4813]: (\n                            - generic [ref=e4814]: \"{\"\n                            - generic [ref=e4815]: data\n                            - text: \":\"\n                            - generic [ref=e4816]: \"{\"\n                            - text: ...\n                            - generic [ref=e4817]: data\n                            - generic [ref=e4818]: \",\"\n                            - generic [ref=e4819]: conversations\n                            - text: \":\"\n                            - generic [ref=e4820]: \"[\"\n                            - generic [ref=e4821]: \"]\"\n                            - generic [ref=e4822]: \"}\"\n                            - generic [ref=e4823]: \"}\"\n                            - generic [ref=e4824]: )\n                            - generic [ref=e4825]: ;\n                      - row \"442 +\" [ref=e2628]:\n                        - cell [ref=e2629] [cursor=pointer]\n                        - cell \"442\" [ref=e2630] [cursor=pointer]\n                        - cell \"+\" [ref=e2631]:\n                          - generic: +\n                      - 'row \"407 443 if (data.status === StatusEnum.ERROR) {\" [ref=e2634]':\n                        - cell \"407\" [ref=e2635] [cursor=pointer]\n                        - cell \"443\" [ref=e2636] [cursor=pointer]\n                        - 'cell \"if (data.status === StatusEnum.ERROR) {\" [ref=e2637]':\n                          - generic [ref=e2638]:\n                            - generic [ref=e4827]: if\n                            - generic [ref=e4828]: (\n                            - generic [ref=e4829]: data\n                            - generic [ref=e4830]: .\n                            - generic [ref=e4831]: status\n                            - generic [ref=e4832]: ===\n                            - generic [ref=e4833]: StatusEnum\n                            - generic [ref=e4834]: .\n                            - generic [ref=e4835]: ERROR\n                            - generic [ref=e4836]: )\n                            - generic [ref=e4837]: \"{\"\n                      - 'row \"408 444 onError?.({\" [ref=e2639]':\n                        - cell \"408\" [ref=e2640] [cursor=pointer]\n                        - cell \"444\" [ref=e2641] [cursor=pointer]\n                        - 'cell \"onError?.({\" [ref=e2642]':\n                          - generic [ref=e2643]:\n                            - generic [ref=e4838]: onError\n                            - text: \"?.\"\n                            - generic [ref=e4839]: (\n                            - generic [ref=e4840]: \"{\"\n                      - row \"409 445 data,\" [ref=e2644]:\n                        - cell \"409\" [ref=e2645] [cursor=pointer]\n                        - cell \"445\" [ref=e2646] [cursor=pointer]\n                        - cell \"data,\" [ref=e2647]:\n                          - generic [ref=e2648]:\n                            - text: data\n                            - generic [ref=e4841]: \",\"\n                      - 'row \"410 - error: data.error || {\" [ref=e2649]':\n                        - cell \"410\" [ref=e2650] [cursor=pointer]\n                        - cell [ref=e2651] [cursor=pointer]\n                        - 'cell \"- error: data.error || {\" [ref=e2652]':\n                          - generic [ref=e2653]:\n                            - text: \"-\"\n                            - generic [ref=e4842]: error\n                            - text: \":\"\n                            - generic [ref=e4843]: data\n                            - generic [ref=e4844]: .\n                            - generic [ref=e4845]: error\n                            - generic [ref=e4846]: \"||\"\n                            - generic [ref=e4847]: \"{\"\n                      - 'row \"411 - code: ErrorStatusEnum.UNKNOWN_ERROR,\" [ref=e2654]':\n                        - cell \"411\" [ref=e2655] [cursor=pointer]\n                        - cell [ref=e2656] [cursor=pointer]\n                        - 'cell \"- code: ErrorStatusEnum.UNKNOWN_ERROR,\" [ref=e2657]':\n                          - generic [ref=e2658]:\n                            - text: \"-\"\n                            - generic [ref=e4848]: code\n                            - text: \":\"\n                            - generic [ref=e4849]: ErrorStatusEnum\n                            - generic [ref=e4850]: .\n                            - generic [ref=e4851]: UNKNOWN_ERROR\n                            - generic [ref=e4852]: \",\"\n                      - 'row \"412 - error: ''Unkown error occurred'',\" [ref=e2659]':\n                        - cell \"412\" [ref=e2660] [cursor=pointer]\n                        - cell [ref=e2661] [cursor=pointer]\n                        - 'cell \"- error: ''Unkown error occurred'',\" [ref=e2662]':\n                          - generic [ref=e2663]:\n                            - text: \"-\"\n                            - generic [ref=e4853]: error\n                            - text: \":\"\n                            - generic [ref=e4854]: \"'Unkown error occurred'\"\n                            - generic [ref=e4855]: \",\"\n                      - 'row \"413 - stack: ''null'',\" [ref=e2664]':\n                        - cell \"413\" [ref=e2665] [cursor=pointer]\n                        - cell [ref=e2666] [cursor=pointer]\n                        - 'cell \"- stack: ''null'',\" [ref=e2667]':\n                          - generic [ref=e2668]:\n                            - text: \"-\"\n                            - generic [ref=e4856]: stack\n                            - text: \":\"\n                            - generic [ref=e4857]: \"'null'\"\n                            - generic [ref=e4858]: \",\"\n                      - 'row \"414 - },\" [ref=e2669]':\n                        - cell \"414\" [ref=e2670] [cursor=pointer]\n                        - cell [ref=e2671] [cursor=pointer]\n                        - 'cell \"- },\" [ref=e2672]':\n                          - generic [ref=e2673]:\n                            - text: \"-\"\n                            - generic [ref=e4859]: \"}\"\n                            - generic [ref=e4860]: \",\"\n                      - row \"446 + error:\" [ref=e2674]:\n                        - cell [ref=e2675] [cursor=pointer]\n                        - cell \"446\" [ref=e2676] [cursor=pointer]\n                        - cell \"+ error:\" [ref=e2677]:\n                          - generic [ref=e2678]:\n                            - text: +\n                            - generic [ref=e4861]: error\n                            - text: \":\"\n                      - row \"447 + data.error ||\" [ref=e2679]:\n                        - cell [ref=e2680] [cursor=pointer]\n                        - cell \"447\" [ref=e2681] [cursor=pointer]\n                        - cell \"+ data.error ||\" [ref=e2682]:\n                          - generic [ref=e2683]:\n                            - text: +\n                            - generic [ref=e4862]: data\n                            - generic [ref=e4863]: .\n                            - generic [ref=e4864]: error\n                            - generic [ref=e4865]: \"||\"\n                      - row \"448 + new GUIAgentError(\" [ref=e2684]:\n                        - cell [ref=e2685] [cursor=pointer]\n                        - cell \"448\" [ref=e2686] [cursor=pointer]\n                        - cell \"+ new GUIAgentError(\" [ref=e2687]:\n                          - generic [ref=e2688]:\n                            - text: +\n                            - generic [ref=e4866]: new\n                            - generic [ref=e4867]: GUIAgentError\n                            - generic [ref=e4868]: (\n                      - row \"449 + ErrorStatusEnum.UNKNOWN_ERROR,\" [ref=e2689]:\n                        - cell [ref=e2690] [cursor=pointer]\n                        - cell \"449\" [ref=e2691] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.UNKNOWN_ERROR,\" [ref=e2692]:\n                          - generic [ref=e2693]:\n                            - text: +\n                            - generic [ref=e4869]: ErrorStatusEnum\n                            - generic [ref=e4870]: .\n                            - generic [ref=e4871]: UNKNOWN_ERROR\n                            - generic [ref=e4872]: \",\"\n                      - row \"450 + 'Unknown error occurred',\" [ref=e2694]:\n                        - cell [ref=e2695] [cursor=pointer]\n                        - cell \"450\" [ref=e2696] [cursor=pointer]\n                        - cell \"+ 'Unknown error occurred',\" [ref=e2697]:\n                          - generic [ref=e2698]:\n                            - text: +\n                            - generic [ref=e4873]: \"'Unknown error occurred'\"\n                            - generic [ref=e4874]: \",\"\n                      - row \"451 + ),\" [ref=e2699]:\n                        - cell [ref=e2700] [cursor=pointer]\n                        - cell \"451\" [ref=e2701] [cursor=pointer]\n                        - cell \"+ ),\" [ref=e2702]:\n                          - generic [ref=e2703]:\n                            - text: +\n                            - generic [ref=e4875]: )\n                            - generic [ref=e4876]: \",\"\n                      - 'row \"415 452 });\" [ref=e2704]':\n                        - cell \"415\" [ref=e2705] [cursor=pointer]\n                        - cell \"452\" [ref=e2706] [cursor=pointer]\n                        - 'cell \"});\" [ref=e2707]':\n                          - generic [ref=e2708]:\n                            - generic [ref=e4877]: \"}\"\n                            - generic [ref=e4878]: )\n                            - generic [ref=e4879]: ;\n                      - 'row \"416 453 }\" [ref=e2709]':\n                        - cell \"416\" [ref=e2710] [cursor=pointer]\n                        - cell \"453\" [ref=e2711] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2712]':\n                          - generic [ref=e4880]: \"}\"\n                      - 'row \"417 - logger.info(''[GUIAgent] finally: status'', data.status);\" [ref=e2714]':\n                        - cell \"417\" [ref=e2715] [cursor=pointer]\n                        - cell [ref=e2716] [cursor=pointer]\n                        - 'cell \"- logger.info(''[GUIAgent] finally: status'', data.status);\" [ref=e2717]':\n                          - generic [ref=e2718]:\n                            - text: \"-\"\n                            - generic [ref=e4881]: logger\n                            - generic [ref=e4882]: .\n                            - generic [ref=e4883]: info\n                            - generic [ref=e4884]: (\n                            - generic [ref=e4885]: \"'[GUIAgent] finally: status'\"\n                            - generic [ref=e4886]: \",\"\n                            - generic [ref=e4887]: data\n                            - generic [ref=e4888]: .\n                            - generic [ref=e4889]: status\n                            - generic [ref=e4890]: )\n                            - generic [ref=e4891]: ;\n                      - 'row \"418 454 }\" [ref=e2719]':\n                        - cell \"418\" [ref=e2720] [cursor=pointer]\n                        - cell \"454\" [ref=e2721] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2722]':\n                          - generic [ref=e4892]: \"}\"\n                      - 'row \"419 455 }\" [ref=e2724]':\n                        - cell \"419\" [ref=e2725] [cursor=pointer]\n                        - cell \"455\" [ref=e2726] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2727]':\n                          - generic [ref=e4893]: \"}\"\n                      - row \"420 456\" [ref=e2729]:\n                        - cell \"420\" [ref=e2730] [cursor=pointer]\n                        - cell \"456\" [ref=e2731] [cursor=pointer]\n                        - cell [ref=e2732]\n                      - row \"Expand Down Expand Up @@ -449,4 +485,76 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2735]:\n                        - cell \"Expand Down Expand Up\" [ref=e2736] [cursor=pointer]:\n                          - link \"Expand Down\" [ref=e2737] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2738] [cursor=pointer]\n                          - link \"Expand Up\" [ref=e2740] [cursor=pointer]:\n                            - /url: \"#diff-ddecef2f96f56830a1a14c43f4522ca55c37e0110acd9760e1fb5224d233c951\"\n                            - img [ref=e2741] [cursor=pointer]\n                        - cell \"@@ -449,4 +485,76 @@ export class GUIAgent<T extends Operator> extends BaseGUIAgent<\" [ref=e2743]\n                      - row \"449 485 actionSpaces.join('\\\\n'),\" [ref=e2744]:\n                        - cell \"449\" [ref=e2745] [cursor=pointer]\n                        - cell \"485\" [ref=e2746] [cursor=pointer]\n                        - cell \"actionSpaces.join('\\\\n'),\" [ref=e2747]:\n                          - generic [ref=e2748]:\n                            - generic [ref=e4895]: actionSpaces\n                            - generic [ref=e4896]: .\n                            - generic [ref=e4897]: join\n                            - generic [ref=e4898]: (\n                            - generic [ref=e4899]: \"'\\\\n'\"\n                            - generic [ref=e4900]: )\n                            - generic [ref=e4901]: \",\"\n                      - row \"450 486 );\" [ref=e2749]:\n                        - cell \"450\" [ref=e2750] [cursor=pointer]\n                        - cell \"486\" [ref=e2751] [cursor=pointer]\n                        - cell \");\" [ref=e2752]:\n                          - generic [ref=e2753]:\n                            - generic [ref=e4902]: )\n                            - generic [ref=e4903]: ;\n                      - 'row \"451 487 }\" [ref=e2754]':\n                        - cell \"451\" [ref=e2755] [cursor=pointer]\n                        - cell \"487\" [ref=e2756] [cursor=pointer]\n                        - 'cell \"}\" [ref=e2757]':\n                          - generic [ref=e4904]: \"}\"\n                      - row \"488 +\" [ref=e2759]:\n                        - cell [ref=e2760] [cursor=pointer]\n                        - cell \"488\" [ref=e2761] [cursor=pointer]\n                        - cell \"+\" [ref=e2762]:\n                          - generic: +\n                      - row \"489 + private guiAgentErrorParser(\" [ref=e2765]:\n                        - cell [ref=e2766] [cursor=pointer]\n                        - cell \"489\" [ref=e2767] [cursor=pointer]\n                        - cell \"+ private guiAgentErrorParser(\" [ref=e2768]:\n                          - generic [ref=e2769]:\n                            - text: +\n                            - generic [ref=e4906]: private\n                            - generic [ref=e4907]: guiAgentErrorParser\n                            - generic [ref=e4908]: (\n                      - 'row \"490 + error: unknown,\" [ref=e2770]':\n                        - cell [ref=e2771] [cursor=pointer]\n                        - cell \"490\" [ref=e2772] [cursor=pointer]\n                        - 'cell \"+ error: unknown,\" [ref=e2773]':\n                          - generic [ref=e2774]:\n                            - text: +\n                            - generic [ref=e4909]: error\n                            - text: \":\"\n                            - generic [ref=e4910]: unknown\n                            - generic [ref=e4911]: \",\"\n                      - 'row \"491 + type: ErrorStatusEnum | null = null,\" [ref=e2775]':\n                        - cell [ref=e2776] [cursor=pointer]\n                        - cell \"491\" [ref=e2777] [cursor=pointer]\n                        - 'cell \"+ type: ErrorStatusEnum | null = null,\" [ref=e2778]':\n                          - generic [ref=e2779]:\n                            - text: +\n                            - generic [ref=e4912]: type\n                            - text: \":\"\n                            - generic [ref=e4913]: ErrorStatusEnum\n                            - generic [ref=e4914]: \"|\"\n                            - generic [ref=e4915]: \"null\"\n                            - generic [ref=e4916]: =\n                            - generic [ref=e4917]: \"null\"\n                            - generic [ref=e4918]: \",\"\n                      - 'row \"492 + ): GUIAgentError {\" [ref=e2780]':\n                        - cell [ref=e2781] [cursor=pointer]\n                        - cell \"492\" [ref=e2782] [cursor=pointer]\n                        - 'cell \"+ ): GUIAgentError {\" [ref=e2783]':\n                          - generic [ref=e2784]:\n                            - text: +\n                            - generic [ref=e4919]: )\n                            - text: \":\"\n                            - generic [ref=e4920]: GUIAgentError\n                            - generic [ref=e4921]: \"{\"\n                      - row \"493 + this.logger.error('[GUIAgent] guiAgentErrorParser:', error);\" [ref=e2785]:\n                        - cell [ref=e2786] [cursor=pointer]\n                        - cell \"493\" [ref=e2787] [cursor=pointer]\n                        - cell \"+ this.logger.error('[GUIAgent] guiAgentErrorParser:', error);\" [ref=e2788]:\n                          - generic [ref=e2789]:\n                            - text: +\n                            - generic [ref=e4922]: this\n                            - generic [ref=e4923]: .\n                            - generic [ref=e4924]: logger\n                            - generic [ref=e4925]: .\n                            - generic [ref=e4926]: error\n                            - generic [ref=e4927]: (\n                            - generic [ref=e4928]: \"'[GUIAgent] guiAgentErrorParser:'\"\n                            - generic [ref=e4929]: \",\"\n                            - generic [ref=e4930]: error\n                            - generic [ref=e4931]: )\n                            - generic [ref=e4932]: ;\n                      - row \"494 +\" [ref=e2790]:\n                        - cell [ref=e2791] [cursor=pointer]\n                        - cell \"494\" [ref=e2792] [cursor=pointer]\n                        - cell \"+\" [ref=e2793]:\n                          - generic: +\n                      - row \"495 + let parseError = null;\" [ref=e2796]:\n                        - cell [ref=e2797] [cursor=pointer]\n                        - cell \"495\" [ref=e2798] [cursor=pointer]\n                        - cell \"+ let parseError = null;\" [ref=e2799]:\n                          - generic [ref=e2800]:\n                            - text: +\n                            - generic [ref=e4934]: let\n                            - generic [ref=e4935]: parseError\n                            - generic [ref=e4936]: =\n                            - generic [ref=e4937]: \"null\"\n                            - generic [ref=e4938]: ;\n                      - row \"496 +\" [ref=e2801]:\n                        - cell [ref=e2802] [cursor=pointer]\n                        - cell \"496\" [ref=e2803] [cursor=pointer]\n                        - cell \"+\" [ref=e2804]:\n                          - generic: +\n                      - 'row \"497 + if (error instanceof InternalServerError) {\" [ref=e2807]':\n                        - cell [ref=e2808] [cursor=pointer]\n                        - cell \"497\" [ref=e2809] [cursor=pointer]\n                        - 'cell \"+ if (error instanceof InternalServerError) {\" [ref=e2810]':\n                          - generic [ref=e2811]:\n                            - text: +\n                            - generic [ref=e4940]: if\n                            - generic [ref=e4941]: (\n                            - generic [ref=e4942]: error\n                            - generic [ref=e4943]: instanceof\n                            - generic [ref=e4944]: InternalServerError\n                            - generic [ref=e4945]: )\n                            - generic [ref=e4946]: \"{\"\n                      - row \"498 + this.logger.error(\" [ref=e2812]:\n                        - cell [ref=e2813] [cursor=pointer]\n                        - cell \"498\" [ref=e2814] [cursor=pointer]\n                        - cell \"+ this.logger.error(\" [ref=e2815]:\n                          - generic [ref=e2816]:\n                            - text: +\n                            - generic [ref=e4947]: this\n                            - generic [ref=e4948]: .\n                            - generic [ref=e4949]: logger\n                            - generic [ref=e4950]: .\n                            - generic [ref=e4951]: error\n                            - generic [ref=e4952]: (\n                      - row \"499 + '[GUIAgent] guiAgentErrorParser instanceof InternalServerError.',\" [ref=e2817]:\n                        - cell [ref=e2818] [cursor=pointer]\n                        - cell \"499\" [ref=e2819] [cursor=pointer]\n                        - cell \"+ '[GUIAgent] guiAgentErrorParser instanceof InternalServerError.',\" [ref=e2820]:\n                          - generic [ref=e2821]:\n                            - text: +\n                            - generic [ref=e4953]: \"'[GUIAgent] guiAgentErrorParser instanceof InternalServerError.'\"\n                            - generic [ref=e4954]: \",\"\n                      - row \"500 + );\" [ref=e2822]:\n                        - cell [ref=e2823] [cursor=pointer]\n                        - cell \"500\" [ref=e2824] [cursor=pointer]\n                        - cell \"+ );\" [ref=e2825]:\n                          - generic [ref=e2826]:\n                            - text: +\n                            - generic [ref=e4955]: )\n                            - generic [ref=e4956]: ;\n                      - row \"501 + parseError = new GUIAgentError(\" [ref=e2827]:\n                        - cell [ref=e2828] [cursor=pointer]\n                        - cell \"501\" [ref=e2829] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e2830]:\n                          - generic [ref=e2831]:\n                            - text: +\n                            - generic [ref=e4957]: parseError\n                            - generic [ref=e4958]: =\n                            - generic [ref=e4959]: new\n                            - generic [ref=e4960]: GUIAgentError\n                            - generic [ref=e4961]: (\n                      - row \"502 + ErrorStatusEnum.MODEL_SERVICE_ERROR,\" [ref=e2832]:\n                        - cell [ref=e2833] [cursor=pointer]\n                        - cell \"502\" [ref=e2834] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.MODEL_SERVICE_ERROR,\" [ref=e2835]:\n                          - generic [ref=e2836]:\n                            - text: +\n                            - generic [ref=e4962]: ErrorStatusEnum\n                            - generic [ref=e4963]: .\n                            - generic [ref=e4964]: MODEL_SERVICE_ERROR\n                            - generic [ref=e4965]: \",\"\n                      - row \"503 + error.message,\" [ref=e2837]:\n                        - cell [ref=e2838] [cursor=pointer]\n                        - cell \"503\" [ref=e2839] [cursor=pointer]\n                        - cell \"+ error.message,\" [ref=e2840]:\n                          - generic [ref=e2841]:\n                            - text: +\n                            - generic [ref=e4966]: error\n                            - generic [ref=e4967]: .\n                            - generic [ref=e4968]: message\n                            - generic [ref=e4969]: \",\"\n                      - row \"504 + error.stack,\" [ref=e2842]:\n                        - cell [ref=e2843] [cursor=pointer]\n                        - cell \"504\" [ref=e2844] [cursor=pointer]\n                        - cell \"+ error.stack,\" [ref=e2845]:\n                          - generic [ref=e2846]:\n                            - text: +\n                            - generic [ref=e4970]: error\n                            - generic [ref=e4971]: .\n                            - generic [ref=e4972]: stack\n                            - generic [ref=e4973]: \",\"\n                      - row \"505 + );\" [ref=e2847]:\n                        - cell [ref=e2848] [cursor=pointer]\n                        - cell \"505\" [ref=e2849] [cursor=pointer]\n                        - cell \"+ );\" [ref=e2850]:\n                          - generic [ref=e2851]:\n                            - text: +\n                            - generic [ref=e4974]: )\n                            - generic [ref=e4975]: ;\n                      - 'row \"506 + }\" [ref=e2852]':\n                        - cell [ref=e2853] [cursor=pointer]\n                        - cell \"506\" [ref=e2854] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e2855]':\n                          - generic [ref=e2856]:\n                            - text: +\n                            - generic [ref=e4976]: \"}\"\n                      - row \"507 +\" [ref=e2857]:\n                        - cell [ref=e2858] [cursor=pointer]\n                        - cell \"507\" [ref=e2859] [cursor=pointer]\n                        - cell \"+\" [ref=e2860]:\n                          - generic: +\n                      - 'row \"508 + if (!parseError && type === ErrorStatusEnum.REACH_MAXLOOP_ERROR) {\" [ref=e2863]':\n                        - cell [ref=e2864] [cursor=pointer]\n                        - cell \"508\" [ref=e2865] [cursor=pointer]\n                        - 'cell \"+ if (!parseError && type === ErrorStatusEnum.REACH_MAXLOOP_ERROR) {\" [ref=e2866]':\n                          - generic [ref=e2867]:\n                            - text: +\n                            - generic [ref=e4978]: if\n                            - generic [ref=e4979]: (\n                            - generic [ref=e4980]: \"!\"\n                            - generic [ref=e4981]: parseError\n                            - generic [ref=e4982]: \"&&\"\n                            - generic [ref=e4983]: type\n                            - generic [ref=e4984]: ===\n                            - generic [ref=e4985]: ErrorStatusEnum\n                            - generic [ref=e4986]: .\n                            - generic [ref=e4987]: REACH_MAXLOOP_ERROR\n                            - generic [ref=e4988]: )\n                            - generic [ref=e4989]: \"{\"\n                      - row \"509 + parseError = new GUIAgentError(\" [ref=e2868]:\n                        - cell [ref=e2869] [cursor=pointer]\n                        - cell \"509\" [ref=e2870] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e2871]:\n                          - generic [ref=e2872]:\n                            - text: +\n                            - generic [ref=e4990]: parseError\n                            - generic [ref=e4991]: =\n                            - generic [ref=e4992]: new\n                            - generic [ref=e4993]: GUIAgentError\n                            - generic [ref=e4994]: (\n                      - row \"510 + ErrorStatusEnum.REACH_MAXLOOP_ERROR,\" [ref=e2873]:\n                        - cell [ref=e2874] [cursor=pointer]\n                        - cell \"510\" [ref=e2875] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.REACH_MAXLOOP_ERROR,\" [ref=e2876]:\n                          - generic [ref=e2877]:\n                            - text: +\n                            - generic [ref=e4995]: ErrorStatusEnum\n                            - generic [ref=e4996]: .\n                            - generic [ref=e4997]: REACH_MAXLOOP_ERROR\n                            - generic [ref=e4998]: \",\"\n                      - row \"511 + 'Has reached max loop count',\" [ref=e2878]:\n                        - cell [ref=e2879] [cursor=pointer]\n                        - cell \"511\" [ref=e2880] [cursor=pointer]\n                        - cell \"+ 'Has reached max loop count',\" [ref=e2881]:\n                          - generic [ref=e2882]:\n                            - text: +\n                            - generic [ref=e4999]: \"'Has reached max loop count'\"\n                            - generic [ref=e5000]: \",\"\n                      - row \"512 + );\" [ref=e2883]:\n                        - cell [ref=e2884] [cursor=pointer]\n                        - cell \"512\" [ref=e2885] [cursor=pointer]\n                        - cell \"+ );\" [ref=e2886]:\n                          - generic [ref=e2887]:\n                            - text: +\n                            - generic [ref=e5001]: )\n                            - generic [ref=e5002]: ;\n                      - 'row \"513 + }\" [ref=e2888]':\n                        - cell [ref=e2889] [cursor=pointer]\n                        - cell \"513\" [ref=e2890] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e2891]':\n                          - generic [ref=e2892]:\n                            - text: +\n                            - generic [ref=e5003]: \"}\"\n                      - row \"514 +\" [ref=e2893]:\n                        - cell [ref=e2894] [cursor=pointer]\n                        - cell \"514\" [ref=e2895] [cursor=pointer]\n                        - cell \"+\" [ref=e2896]:\n                          - generic: +\n                      - 'row \"515 + if (!parseError && type === ErrorStatusEnum.SCREENSHOT_RETRY_ERROR) {\" [ref=e2899]':\n                        - cell [ref=e2900] [cursor=pointer]\n                        - cell \"515\" [ref=e2901] [cursor=pointer]\n                        - 'cell \"+ if (!parseError && type === ErrorStatusEnum.SCREENSHOT_RETRY_ERROR) {\" [ref=e2902]':\n                          - generic [ref=e2903]:\n                            - text: +\n                            - generic [ref=e5005]: if\n                            - generic [ref=e5006]: (\n                            - generic [ref=e5007]: \"!\"\n                            - generic [ref=e5008]: parseError\n                            - generic [ref=e5009]: \"&&\"\n                            - generic [ref=e5010]: type\n                            - generic [ref=e5011]: ===\n                            - generic [ref=e5012]: ErrorStatusEnum\n                            - generic [ref=e5013]: .\n                            - generic [ref=e5014]: SCREENSHOT_RETRY_ERROR\n                            - generic [ref=e5015]: )\n                            - generic [ref=e5016]: \"{\"\n                      - row \"516 + parseError = new GUIAgentError(\" [ref=e2904]:\n                        - cell [ref=e2905] [cursor=pointer]\n                        - cell \"516\" [ref=e2906] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e2907]:\n                          - generic [ref=e2908]:\n                            - text: +\n                            - generic [ref=e5017]: parseError\n                            - generic [ref=e5018]: =\n                            - generic [ref=e5019]: new\n                            - generic [ref=e5020]: GUIAgentError\n                            - generic [ref=e5021]: (\n                      - row \"517 + ErrorStatusEnum.SCREENSHOT_RETRY_ERROR,\" [ref=e2909]:\n                        - cell [ref=e2910] [cursor=pointer]\n                        - cell \"517\" [ref=e2911] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.SCREENSHOT_RETRY_ERROR,\" [ref=e2912]:\n                          - generic [ref=e2913]:\n                            - text: +\n                            - generic [ref=e5022]: ErrorStatusEnum\n                            - generic [ref=e5023]: .\n                            - generic [ref=e5024]: SCREENSHOT_RETRY_ERROR\n                            - generic [ref=e5025]: \",\"\n                      - row \"518 + 'Too many screenshot failures',\" [ref=e2914]:\n                        - cell [ref=e2915] [cursor=pointer]\n                        - cell \"518\" [ref=e2916] [cursor=pointer]\n                        - cell \"+ 'Too many screenshot failures',\" [ref=e2917]:\n                          - generic [ref=e2918]:\n                            - text: +\n                            - generic [ref=e5026]: \"'Too many screenshot failures'\"\n                            - generic [ref=e5027]: \",\"\n                      - row \"519 + );\" [ref=e2919]:\n                        - cell [ref=e2920] [cursor=pointer]\n                        - cell \"519\" [ref=e2921] [cursor=pointer]\n                        - cell \"+ );\" [ref=e2922]:\n                          - generic [ref=e2923]:\n                            - text: +\n                            - generic [ref=e5028]: )\n                            - generic [ref=e5029]: ;\n                      - 'row \"520 + }\" [ref=e2924]':\n                        - cell [ref=e2925] [cursor=pointer]\n                        - cell \"520\" [ref=e2926] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e2927]':\n                          - generic [ref=e2928]:\n                            - text: +\n                            - generic [ref=e5030]: \"}\"\n                      - row \"521 +\" [ref=e2929]:\n                        - cell [ref=e2930] [cursor=pointer]\n                        - cell \"521\" [ref=e2931] [cursor=pointer]\n                        - cell \"+\" [ref=e2932]:\n                          - generic: +\n                      - 'row \"522 + if (!parseError && type === ErrorStatusEnum.INVOKE_RETRY_ERROR) {\" [ref=e2935]':\n                        - cell [ref=e2936] [cursor=pointer]\n                        - cell \"522\" [ref=e2937] [cursor=pointer]\n                        - 'cell \"+ if (!parseError && type === ErrorStatusEnum.INVOKE_RETRY_ERROR) {\" [ref=e2938]':\n                          - generic [ref=e2939]:\n                            - text: +\n                            - generic [ref=e5032]: if\n                            - generic [ref=e5033]: (\n                            - generic [ref=e5034]: \"!\"\n                            - generic [ref=e5035]: parseError\n                            - generic [ref=e5036]: \"&&\"\n                            - generic [ref=e5037]: type\n                            - generic [ref=e5038]: ===\n                            - generic [ref=e5039]: ErrorStatusEnum\n                            - generic [ref=e5040]: .\n                            - generic [ref=e5041]: INVOKE_RETRY_ERROR\n                            - generic [ref=e5042]: )\n                            - generic [ref=e5043]: \"{\"\n                      - row \"523 + parseError = new GUIAgentError(\" [ref=e2940]:\n                        - cell [ref=e2941] [cursor=pointer]\n                        - cell \"523\" [ref=e2942] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e2943]:\n                          - generic [ref=e2944]:\n                            - text: +\n                            - generic [ref=e5044]: parseError\n                            - generic [ref=e5045]: =\n                            - generic [ref=e5046]: new\n                            - generic [ref=e5047]: GUIAgentError\n                            - generic [ref=e5048]: (\n                      - row \"524 + ErrorStatusEnum.INVOKE_RETRY_ERROR,\" [ref=e2945]:\n                        - cell [ref=e2946] [cursor=pointer]\n                        - cell \"524\" [ref=e2947] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.INVOKE_RETRY_ERROR,\" [ref=e2948]:\n                          - generic [ref=e2949]:\n                            - text: +\n                            - generic [ref=e5049]: ErrorStatusEnum\n                            - generic [ref=e5050]: .\n                            - generic [ref=e5051]: INVOKE_RETRY_ERROR\n                            - generic [ref=e5052]: \",\"\n                      - row \"525 + 'Too many model invoke failures',\" [ref=e2950]:\n                        - cell [ref=e2951] [cursor=pointer]\n                        - cell \"525\" [ref=e2952] [cursor=pointer]\n                        - cell \"+ 'Too many model invoke failures',\" [ref=e2953]:\n                          - generic [ref=e2954]:\n                            - text: +\n                            - generic [ref=e5053]: \"'Too many model invoke failures'\"\n                            - generic [ref=e5054]: \",\"\n                      - row \"526 + 'null',\" [ref=e2955]:\n                        - cell [ref=e2956] [cursor=pointer]\n                        - cell \"526\" [ref=e2957] [cursor=pointer]\n                        - cell \"+ 'null',\" [ref=e2958]:\n                          - generic [ref=e2959]:\n                            - text: +\n                            - generic [ref=e5055]: \"'null'\"\n                            - generic [ref=e5056]: \",\"\n                      - row \"527 + );\" [ref=e2960]:\n                        - cell [ref=e2961] [cursor=pointer]\n                        - cell \"527\" [ref=e2962] [cursor=pointer]\n                        - cell \"+ );\" [ref=e2963]:\n                          - generic [ref=e2964]:\n                            - text: +\n                            - generic [ref=e5057]: )\n                            - generic [ref=e5058]: ;\n                      - 'row \"528 + }\" [ref=e2965]':\n                        - cell [ref=e2966] [cursor=pointer]\n                        - cell \"528\" [ref=e2967] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e2968]':\n                          - generic [ref=e2969]:\n                            - text: +\n                            - generic [ref=e5059]: \"}\"\n                      - row \"529 +\" [ref=e2970]:\n                        - cell [ref=e2971] [cursor=pointer]\n                        - cell \"529\" [ref=e2972] [cursor=pointer]\n                        - cell \"+\" [ref=e2973]:\n                          - generic: +\n                      - 'row \"530 + if (!parseError && type === ErrorStatusEnum.EXECUTE_RETRY_ERROR) {\" [ref=e2976]':\n                        - cell [ref=e2977] [cursor=pointer]\n                        - cell \"530\" [ref=e2978] [cursor=pointer]\n                        - 'cell \"+ if (!parseError && type === ErrorStatusEnum.EXECUTE_RETRY_ERROR) {\" [ref=e2979]':\n                          - generic [ref=e2980]:\n                            - text: +\n                            - generic [ref=e5061]: if\n                            - generic [ref=e5062]: (\n                            - generic [ref=e5063]: \"!\"\n                            - generic [ref=e5064]: parseError\n                            - generic [ref=e5065]: \"&&\"\n                            - generic [ref=e5066]: type\n                            - generic [ref=e5067]: ===\n                            - generic [ref=e5068]: ErrorStatusEnum\n                            - generic [ref=e5069]: .\n                            - generic [ref=e5070]: EXECUTE_RETRY_ERROR\n                            - generic [ref=e5071]: )\n                            - generic [ref=e5072]: \"{\"\n                      - row \"531 + parseError = new GUIAgentError(\" [ref=e2981]:\n                        - cell [ref=e2982] [cursor=pointer]\n                        - cell \"531\" [ref=e2983] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e2984]:\n                          - generic [ref=e2985]:\n                            - text: +\n                            - generic [ref=e5073]: parseError\n                            - generic [ref=e5074]: =\n                            - generic [ref=e5075]: new\n                            - generic [ref=e5076]: GUIAgentError\n                            - generic [ref=e5077]: (\n                      - row \"532 + ErrorStatusEnum.EXECUTE_RETRY_ERROR,\" [ref=e2986]:\n                        - cell [ref=e2987] [cursor=pointer]\n                        - cell \"532\" [ref=e2988] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.EXECUTE_RETRY_ERROR,\" [ref=e2989]:\n                          - generic [ref=e2990]:\n                            - text: +\n                            - generic [ref=e5078]: ErrorStatusEnum\n                            - generic [ref=e5079]: .\n                            - generic [ref=e5080]: EXECUTE_RETRY_ERROR\n                            - generic [ref=e5081]: \",\"\n                      - row \"533 + 'Too many action execute failures',\" [ref=e2991]:\n                        - cell [ref=e2992] [cursor=pointer]\n                        - cell \"533\" [ref=e2993] [cursor=pointer]\n                        - cell \"+ 'Too many action execute failures',\" [ref=e2994]:\n                          - generic [ref=e2995]:\n                            - text: +\n                            - generic [ref=e5082]: \"'Too many action execute failures'\"\n                            - generic [ref=e5083]: \",\"\n                      - row \"534 + 'null',\" [ref=e2996]:\n                        - cell [ref=e2997] [cursor=pointer]\n                        - cell \"534\" [ref=e2998] [cursor=pointer]\n                        - cell \"+ 'null',\" [ref=e2999]:\n                          - generic [ref=e3000]:\n                            - text: +\n                            - generic [ref=e5084]: \"'null'\"\n                            - generic [ref=e5085]: \",\"\n                      - row \"535 + );\" [ref=e3001]:\n                        - cell [ref=e3002] [cursor=pointer]\n                        - cell \"535\" [ref=e3003] [cursor=pointer]\n                        - cell \"+ );\" [ref=e3004]:\n                          - generic [ref=e3005]:\n                            - text: +\n                            - generic [ref=e5086]: )\n                            - generic [ref=e5087]: ;\n                      - 'row \"536 + }\" [ref=e3006]':\n                        - cell [ref=e3007] [cursor=pointer]\n                        - cell \"536\" [ref=e3008] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e3009]':\n                          - generic [ref=e3010]:\n                            - text: +\n                            - generic [ref=e5088]: \"}\"\n                      - row \"537 +\" [ref=e3011]:\n                        - cell [ref=e3012] [cursor=pointer]\n                        - cell \"537\" [ref=e3013] [cursor=pointer]\n                        - cell \"+\" [ref=e3014]:\n                          - generic: +\n                      - 'row \"538 + if (!parseError && type === ErrorStatusEnum.ENVIRONMENT_ERROR) {\" [ref=e3017]':\n                        - cell [ref=e3018] [cursor=pointer]\n                        - cell \"538\" [ref=e3019] [cursor=pointer]\n                        - 'cell \"+ if (!parseError && type === ErrorStatusEnum.ENVIRONMENT_ERROR) {\" [ref=e3020]':\n                          - generic [ref=e3021]:\n                            - text: +\n                            - generic [ref=e5090]: if\n                            - generic [ref=e5091]: (\n                            - generic [ref=e5092]: \"!\"\n                            - generic [ref=e5093]: parseError\n                            - generic [ref=e5094]: \"&&\"\n                            - generic [ref=e5095]: type\n                            - generic [ref=e5096]: ===\n                            - generic [ref=e5097]: ErrorStatusEnum\n                            - generic [ref=e5098]: .\n                            - generic [ref=e5099]: ENVIRONMENT_ERROR\n                            - generic [ref=e5100]: )\n                            - generic [ref=e5101]: \"{\"\n                      - row \"539 + parseError = new GUIAgentError(\" [ref=e3022]:\n                        - cell [ref=e3023] [cursor=pointer]\n                        - cell \"539\" [ref=e3024] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e3025]:\n                          - generic [ref=e3026]:\n                            - text: +\n                            - generic [ref=e5102]: parseError\n                            - generic [ref=e5103]: =\n                            - generic [ref=e5104]: new\n                            - generic [ref=e5105]: GUIAgentError\n                            - generic [ref=e5106]: (\n                      - row \"540 + ErrorStatusEnum.ENVIRONMENT_ERROR,\" [ref=e3027]:\n                        - cell [ref=e3028] [cursor=pointer]\n                        - cell \"540\" [ref=e3029] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.ENVIRONMENT_ERROR,\" [ref=e3030]:\n                          - generic [ref=e3031]:\n                            - text: +\n                            - generic [ref=e5107]: ErrorStatusEnum\n                            - generic [ref=e5108]: .\n                            - generic [ref=e5109]: ENVIRONMENT_ERROR\n                            - generic [ref=e5110]: \",\"\n                      - row \"541 + 'The environment error occurred when parsing the action',\" [ref=e3032]:\n                        - cell [ref=e3033] [cursor=pointer]\n                        - cell \"541\" [ref=e3034] [cursor=pointer]\n                        - cell \"+ 'The environment error occurred when parsing the action',\" [ref=e3035]:\n                          - generic [ref=e3036]:\n                            - text: +\n                            - generic [ref=e5111]: \"'The environment error occurred when parsing the action'\"\n                            - generic [ref=e5112]: \",\"\n                      - row \"542 + );\" [ref=e3037]:\n                        - cell [ref=e3038] [cursor=pointer]\n                        - cell \"542\" [ref=e3039] [cursor=pointer]\n                        - cell \"+ );\" [ref=e3040]:\n                          - generic [ref=e3041]:\n                            - text: +\n                            - generic [ref=e5113]: )\n                            - generic [ref=e5114]: ;\n                      - 'row \"543 + }\" [ref=e3042]':\n                        - cell [ref=e3043] [cursor=pointer]\n                        - cell \"543\" [ref=e3044] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e3045]':\n                          - generic [ref=e3046]:\n                            - text: +\n                            - generic [ref=e5115]: \"}\"\n                      - row \"544 +\" [ref=e3047]:\n                        - cell [ref=e3048] [cursor=pointer]\n                        - cell \"544\" [ref=e3049] [cursor=pointer]\n                        - cell \"+\" [ref=e3050]:\n                          - generic: +\n                      - 'row \"545 + if (!parseError) {\" [ref=e3053]':\n                        - cell [ref=e3054] [cursor=pointer]\n                        - cell \"545\" [ref=e3055] [cursor=pointer]\n                        - 'cell \"+ if (!parseError) {\" [ref=e3056]':\n                          - generic [ref=e3057]:\n                            - text: +\n                            - generic [ref=e5117]: if\n                            - generic [ref=e5118]: (\n                            - generic [ref=e5119]: \"!\"\n                            - generic [ref=e5120]: parseError\n                            - generic [ref=e5121]: )\n                            - generic [ref=e5122]: \"{\"\n                      - row \"546 + parseError = new GUIAgentError(\" [ref=e3058]:\n                        - cell [ref=e3059] [cursor=pointer]\n                        - cell \"546\" [ref=e3060] [cursor=pointer]\n                        - cell \"+ parseError = new GUIAgentError(\" [ref=e3061]:\n                          - generic [ref=e3062]:\n                            - text: +\n                            - generic [ref=e5123]: parseError\n                            - generic [ref=e5124]: =\n                            - generic [ref=e5125]: new\n                            - generic [ref=e5126]: GUIAgentError\n                            - generic [ref=e5127]: (\n                      - row \"547 + ErrorStatusEnum.UNKNOWN_ERROR,\" [ref=e3063]:\n                        - cell [ref=e3064] [cursor=pointer]\n                        - cell \"547\" [ref=e3065] [cursor=pointer]\n                        - cell \"+ ErrorStatusEnum.UNKNOWN_ERROR,\" [ref=e3066]:\n                          - generic [ref=e3067]:\n                            - text: +\n                            - generic [ref=e5128]: ErrorStatusEnum\n                            - generic [ref=e5129]: .\n                            - generic [ref=e5130]: UNKNOWN_ERROR\n                            - generic [ref=e5131]: \",\"\n                      - 'row \"548 + error instanceof Error ? error.message : ''Unknown error occurred'',\" [ref=e3068]':\n                        - cell [ref=e3069] [cursor=pointer]\n                        - cell \"548\" [ref=e3070] [cursor=pointer]\n                        - 'cell \"+ error instanceof Error ? error.message : ''Unknown error occurred'',\" [ref=e3071]':\n                          - generic [ref=e3072]:\n                            - text: +\n                            - generic [ref=e5132]: error\n                            - generic [ref=e5133]: instanceof\n                            - generic [ref=e5134]: Error\n                            - text: \"?\"\n                            - generic [ref=e5135]: error\n                            - generic [ref=e5136]: .\n                            - generic [ref=e5137]: message\n                            - text: \":\"\n                            - generic [ref=e5138]: \"'Unknown error occurred'\"\n                            - generic [ref=e5139]: \",\"\n                      - 'row \"549 + error instanceof Error ? error.stack || ''null'' : ''null'',\" [ref=e3073]':\n                        - cell [ref=e3074] [cursor=pointer]\n                        - cell \"549\" [ref=e3075] [cursor=pointer]\n                        - 'cell \"+ error instanceof Error ? error.stack || ''null'' : ''null'',\" [ref=e3076]':\n                          - generic [ref=e3077]:\n                            - text: +\n                            - generic [ref=e5140]: error\n                            - generic [ref=e5141]: instanceof\n                            - generic [ref=e5142]: Error\n                            - text: \"?\"\n                            - generic [ref=e5143]: error\n                            - generic [ref=e5144]: .\n                            - generic [ref=e5145]: stack\n                            - generic [ref=e5146]: \"||\"\n                            - generic [ref=e5147]: \"'null'\"\n                            - text: \":\"\n                            - generic [ref=e5148]: \"'null'\"\n                            - generic [ref=e5149]: \",\"\n                      - row \"550 + );\" [ref=e3078]:\n                        - cell [ref=e3079] [cursor=pointer]\n                        - cell \"550\" [ref=e3080] [cursor=pointer]\n                        - cell \"+ );\" [ref=e3081]:\n                          - generic [ref=e3082]:\n                            - text: +\n                            - generic [ref=e5150]: )\n                            - generic [ref=e5151]: ;\n                      - 'row \"551 + }\" [ref=e3083]':\n                        - cell [ref=e3084] [cursor=pointer]\n                        - cell \"551\" [ref=e3085] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e3086]':\n                          - generic [ref=e3087]:\n                            - text: +\n                            - generic [ref=e5152]: \"}\"\n                      - row \"552 +\" [ref=e3088]:\n                        - cell [ref=e3089] [cursor=pointer]\n                        - cell \"552\" [ref=e3090] [cursor=pointer]\n                        - cell \"+\" [ref=e3091]:\n                          - generic: +\n                      - 'row \"553 + if (!parseError.stack) {\" [ref=e3094]':\n                        - cell [ref=e3095] [cursor=pointer]\n                        - cell \"553\" [ref=e3096] [cursor=pointer]\n                        - 'cell \"+ if (!parseError.stack) {\" [ref=e3097]':\n                          - generic [ref=e3098]:\n                            - text: +\n                            - generic [ref=e5154]: if\n                            - generic [ref=e5155]: (\n                            - generic [ref=e5156]: \"!\"\n                            - generic [ref=e5157]: parseError\n                            - generic [ref=e5158]: .\n                            - generic [ref=e5159]: stack\n                            - generic [ref=e5160]: )\n                            - generic [ref=e5161]: \"{\"\n                      - row \"554 + // Avoid guiAgentErrorParser it self in stack trace\" [ref=e3099]:\n                        - cell [ref=e3100] [cursor=pointer]\n                        - cell \"554\" [ref=e3101] [cursor=pointer]\n                        - cell \"+ // Avoid guiAgentErrorParser it self in stack trace\" [ref=e3102]:\n                          - generic [ref=e3103]:\n                            - text: +\n                            - generic [ref=e5162]: // Avoid guiAgentErrorParser it self in stack trace\n                      - row \"555 + Error.captureStackTrace(parseError, this.guiAgentErrorParser);\" [ref=e3104]:\n                        - cell [ref=e3105] [cursor=pointer]\n                        - cell \"555\" [ref=e3106] [cursor=pointer]\n                        - cell \"+ Error.captureStackTrace(parseError, this.guiAgentErrorParser);\" [ref=e3107]:\n                          - generic [ref=e3108]:\n                            - text: +\n                            - generic [ref=e5163]: Error\n                            - generic [ref=e5164]: .\n                            - generic [ref=e5165]: captureStackTrace\n                            - generic [ref=e5166]: (\n                            - generic [ref=e5167]: parseError\n                            - generic [ref=e5168]: \",\"\n                            - generic [ref=e5169]: this\n                            - generic [ref=e5170]: .\n                            - generic [ref=e5171]: guiAgentErrorParser\n                            - generic [ref=e5172]: )\n                            - generic [ref=e5173]: ;\n                      - 'row \"556 + }\" [ref=e3109]':\n                        - cell [ref=e3110] [cursor=pointer]\n                        - cell \"556\" [ref=e3111] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e3112]':\n                          - generic [ref=e3113]:\n                            - text: +\n                            - generic [ref=e5174]: \"}\"\n                      - row \"557 +\" [ref=e3114]:\n                        - cell [ref=e3115] [cursor=pointer]\n                        - cell \"557\" [ref=e3116] [cursor=pointer]\n                        - cell \"+\" [ref=e3117]:\n                          - generic: +\n                      - row \"558 + return parseError;\" [ref=e3120]:\n                        - cell [ref=e3121] [cursor=pointer]\n                        - cell \"558\" [ref=e3122] [cursor=pointer]\n                        - cell \"+ return parseError;\" [ref=e3123]:\n                          - generic [ref=e3124]:\n                            - text: +\n                            - generic [ref=e5176]: return\n                            - generic [ref=e5177]: parseError\n                            - generic [ref=e5178]: ;\n                      - 'row \"559 + }\" [ref=e3125]':\n                        - cell [ref=e3126] [cursor=pointer]\n                        - cell \"559\" [ref=e3127] [cursor=pointer]\n                        - 'cell \"+ }\" [ref=e3128]':\n                          - generic [ref=e3129]:\n                            - text: +\n                            - generic [ref=e5179]: \"}\"\n                      - 'row \"452 560 }\" [ref=e3130]':\n                        - cell \"452\" [ref=e3131] [cursor=pointer]\n                        - cell \"560\" [ref=e3132] [cursor=pointer]\n                        - 'cell \"}\" [ref=e3133]':\n                          - generic [ref=e5180]: \"}\"\n              - generic [ref=e3137]:\n                - generic [ref=e3138]:\n                  - generic [ref=e3139]:\n                    - button \"Toggle diff contents\" [expanded] [ref=e3140] [cursor=pointer]:\n                      - img [ref=e3141] [cursor=pointer]\n                    - button \"Expand all\" [ref=e3144] [cursor=pointer]:\n                      - img \"Expand all\" [ref=e3145] [cursor=pointer]\n                    - generic [ref=e3147]: \"28 changes: 20 additions & 8 deletions\"\n                    - generic [ref=e3148]: \"28\"\n                    - generic [ref=e3154]:\n                      - link \"packages/ui-tars/shared/src/types/agent.ts\" [ref=e3155] [cursor=pointer]:\n                        - /url: \"#diff-43cb91a5834423602beb26b90c4cd2cc97c4dedfaa7674bac56c95dbc4a81157\"\n                      - button \"Copy\" [ref=e3157]:\n                        - img [ref=e3158]\n                  - group [ref=e3164]:\n                    - button \"Show options\" [ref=e3165] [cursor=pointer]:\n                      - img \"Show options\" [ref=e3167] [cursor=pointer]\n                - table [ref=e3171]:\n                  - rowgroup [ref=e3172]:\n                    - row \"Original file line number Diff line number Diff line change\" [ref=e3173]:\n                      - columnheader \"Original file line number\" [ref=e3174]\n                      - columnheader \"Diff line number\" [ref=e3175]\n                      - columnheader \"Diff line change\" [ref=e3176]\n                  - rowgroup [ref=e3177]:\n                    - 'row \"Expand Up @@ -9,23 +9,32 @@ export interface Message {\" [ref=e3178]':\n                      - cell \"Expand Up\" [ref=e3179] [cursor=pointer]:\n                        - link \"Expand Up\" [ref=e3180] [cursor=pointer]:\n                          - /url: \"#diff-43cb91a5834423602beb26b90c4cd2cc97c4dedfaa7674bac56c95dbc4a81157\"\n                          - img [ref=e3181] [cursor=pointer]\n                      - 'cell \"@@ -9,23 +9,32 @@ export interface Message {\" [ref=e3183]'\n                    - row \"9 9\" [ref=e3184]:\n                      - cell \"9\" [ref=e3185] [cursor=pointer]\n                      - cell \"9\" [ref=e3186] [cursor=pointer]\n                      - cell [ref=e3187]\n                    - 'row \"10 10 export enum ErrorStatusEnum {\" [ref=e3190]':\n                      - cell \"10\" [ref=e3191] [cursor=pointer]\n                      - cell \"10\" [ref=e3192] [cursor=pointer]\n                      - 'cell \"export enum ErrorStatusEnum {\" [ref=e3193]':\n                        - generic [ref=e3194]:\n                          - generic [ref=e3195]: export\n                          - generic [ref=e3196]: enum\n                          - generic [ref=e3197]: ErrorStatusEnum\n                          - generic [ref=e3198]: \"{\"\n                    - row \"11 11 /** 100000 */\" [ref=e3199]:\n                      - cell \"11\" [ref=e3200] [cursor=pointer]\n                      - cell \"11\" [ref=e3201] [cursor=pointer]\n                      - cell /** 100000 */ [ref=e3202]:\n                        - generic [ref=e3204]: /** 100000 */\n                    - row \"12 - SCREENSHOT_ERROR = -100000,\" [ref=e3205]:\n                      - cell \"12\" [ref=e3206] [cursor=pointer]\n                      - cell [ref=e3207] [cursor=pointer]\n                      - cell \"- SCREENSHOT_ERROR = -100000,\" [ref=e3208]:\n                        - generic [ref=e3209]:\n                          - text: \"-\"\n                          - generic [ref=e3210]: SCREENSHOT_ERROR\n                          - generic [ref=e3211]: =\n                          - generic [ref=e3212]: \"-\"\n                          - generic [ref=e3213]: \"100000\"\n                          - generic [ref=e3214]: \",\"\n                    - row \"12 + SCREENSHOT_RETRY_ERROR = -100000,\" [ref=e3215]:\n                      - cell [ref=e3216] [cursor=pointer]\n                      - cell \"12\" [ref=e3217] [cursor=pointer]\n                      - cell \"+ SCREENSHOT_RETRY_ERROR = -100000,\" [ref=e3218]:\n                        - generic [ref=e3219]:\n                          - text: +\n                          - generic [ref=e3220]: SCREENSHOT_RETRY_ERROR\n                          - generic [ref=e3221]: =\n                          - generic [ref=e3222]: \"-\"\n                          - generic [ref=e3223]: \"100000\"\n                          - generic [ref=e3224]: \",\"\n                    - row \"13 13 /** 100001 */\" [ref=e3225]:\n                      - cell \"13\" [ref=e3226] [cursor=pointer]\n                      - cell \"13\" [ref=e3227] [cursor=pointer]\n                      - cell /** 100001 */ [ref=e3228]:\n                        - generic [ref=e3230]: /** 100001 */\n                    - row \"14 - EXECUTE_ERROR = -100001,\" [ref=e3231]:\n                      - cell \"14\" [ref=e3232] [cursor=pointer]\n                      - cell [ref=e3233] [cursor=pointer]\n                      - cell \"- EXECUTE_ERROR = -100001,\" [ref=e3234]:\n                        - generic [ref=e3235]:\n                          - text: \"-\"\n                          - generic [ref=e3236]: EXECUTE_ERROR\n                          - generic [ref=e3237]: =\n                          - generic [ref=e3238]: \"-\"\n                          - generic [ref=e3239]: \"100001\"\n                          - generic [ref=e3240]: \",\"\n                    - row \"14 + INVOKE_RETRY_ERROR = -100001,\" [ref=e3241]:\n                      - cell [ref=e3242] [cursor=pointer]\n                      - cell \"14\" [ref=e3243] [cursor=pointer]\n                      - cell \"+ INVOKE_RETRY_ERROR = -100001,\" [ref=e3244]:\n                        - generic [ref=e3245]:\n                          - text: +\n                          - generic [ref=e3246]: INVOKE_RETRY_ERROR\n                          - generic [ref=e3247]: =\n                          - generic [ref=e3248]: \"-\"\n                          - generic [ref=e3249]: \"100001\"\n                          - generic [ref=e3250]: \",\"\n                    - row \"15 15 /** 100002 */\" [ref=e3251]:\n                      - cell \"15\" [ref=e3252] [cursor=pointer]\n                      - cell \"15\" [ref=e3253] [cursor=pointer]\n                      - cell /** 100002 */ [ref=e3254]:\n                        - generic [ref=e3256]: /** 100002 */\n                    - row \"16 - ENVIRONMENT_ERROR = -100002,\" [ref=e3257]:\n                      - cell \"16\" [ref=e3258] [cursor=pointer]\n                      - cell [ref=e3259] [cursor=pointer]\n                      - cell \"- ENVIRONMENT_ERROR = -100002,\" [ref=e3260]:\n                        - generic [ref=e3261]:\n                          - text: \"-\"\n                          - generic [ref=e3262]: ENVIRONMENT_ERROR\n                          - generic [ref=e3263]: =\n                          - generic [ref=e3264]: \"-\"\n                          - generic [ref=e3265]: \"100002\"\n                          - generic [ref=e3266]: \",\"\n                    - row \"16 + EXECUTE_RETRY_ERROR = -100002,\" [ref=e3267]:\n                      - cell [ref=e3268] [cursor=pointer]\n                      - cell \"16\" [ref=e3269] [cursor=pointer]\n                      - cell \"+ EXECUTE_RETRY_ERROR = -100002,\" [ref=e3270]:\n                        - generic [ref=e3271]:\n                          - text: +\n                          - generic [ref=e3272]: EXECUTE_RETRY_ERROR\n                          - generic [ref=e3273]: =\n                          - generic [ref=e3274]: \"-\"\n                          - generic [ref=e3275]: \"100002\"\n                          - generic [ref=e3276]: \",\"\n                    - row \"17 17 /** 100003 */\" [ref=e3277]:\n                      - cell \"17\" [ref=e3278] [cursor=pointer]\n                      - cell \"17\" [ref=e3279] [cursor=pointer]\n                      - cell /** 100003 */ [ref=e3280]:\n                        - generic [ref=e3282]: /** 100003 */\n                    - row \"18 - INVOKE_TIMEOUT_ERROR = -100003,\" [ref=e3283]:\n                      - cell \"18\" [ref=e3284] [cursor=pointer]\n                      - cell [ref=e3285] [cursor=pointer]\n                      - cell \"- INVOKE_TIMEOUT_ERROR = -100003,\" [ref=e3286]:\n                        - generic [ref=e3287]:\n                          - text: \"-\"\n                          - generic [ref=e3288]: INVOKE_TIMEOUT_ERROR\n                          - generic [ref=e3289]: =\n                          - generic [ref=e3290]: \"-\"\n                          - generic [ref=e3291]: \"100003\"\n                          - generic [ref=e3292]: \",\"\n                    - row \"18 + MODEL_SERVICE_ERROR = -100003,\" [ref=e3293]:\n                      - cell [ref=e3294] [cursor=pointer]\n                      - cell \"18\" [ref=e3295] [cursor=pointer]\n                      - cell \"+ MODEL_SERVICE_ERROR = -100003,\" [ref=e3296]:\n                        - generic [ref=e3297]:\n                          - text: +\n                          - generic [ref=e3298]: MODEL_SERVICE_ERROR\n                          - generic [ref=e3299]: =\n                          - generic [ref=e3300]: \"-\"\n                          - generic [ref=e3301]: \"100003\"\n                          - generic [ref=e3302]: \",\"\n                    - row \"19 19 /** 100004 */\" [ref=e3303]:\n                      - cell \"19\" [ref=e3304] [cursor=pointer]\n                      - cell \"19\" [ref=e3305] [cursor=pointer]\n                      - cell /** 100004 */ [ref=e3306]:\n                        - generic [ref=e3308]: /** 100004 */\n                    - row \"20 - INVOKE_RETRY_ERROR = -100004,\" [ref=e3309]:\n                      - cell \"20\" [ref=e3310] [cursor=pointer]\n                      - cell [ref=e3311] [cursor=pointer]\n                      - cell \"- INVOKE_RETRY_ERROR = -100004,\" [ref=e3312]:\n                        - generic [ref=e3313]:\n                          - text: \"-\"\n                          - generic [ref=e3314]: INVOKE_RETRY_ERROR\n                          - generic [ref=e3315]: =\n                          - generic [ref=e3316]: \"-\"\n                          - generic [ref=e3317]: \"100004\"\n                          - generic [ref=e3318]: \",\"\n                    - row \"20 + REACH_MAXLOOP_ERROR = -100004,\" [ref=e3319]:\n                      - cell [ref=e3320] [cursor=pointer]\n                      - cell \"20\" [ref=e3321] [cursor=pointer]\n                      - cell \"+ REACH_MAXLOOP_ERROR = -100004,\" [ref=e3322]:\n                        - generic [ref=e3323]:\n                          - text: +\n                          - generic [ref=e3324]: REACH_MAXLOOP_ERROR\n                          - generic [ref=e3325]: =\n                          - generic [ref=e3326]: \"-\"\n                          - generic [ref=e3327]: \"100004\"\n                          - generic [ref=e3328]: \",\"\n                    - row \"21 + /** 100005 */\" [ref=e3329]:\n                      - cell [ref=e3330] [cursor=pointer]\n                      - cell \"21\" [ref=e3331] [cursor=pointer]\n                      - cell \"+ /** 100005 */\" [ref=e3332]:\n                        - generic [ref=e3333]:\n                          - text: +\n                          - generic [ref=e3334]: /** 100005 */\n                    - row \"22 + ENVIRONMENT_ERROR = -100005,\" [ref=e3335]:\n                      - cell [ref=e3336] [cursor=pointer]\n                      - cell \"22\" [ref=e3337] [cursor=pointer]\n                      - cell \"+ ENVIRONMENT_ERROR = -100005,\" [ref=e3338]:\n                        - generic [ref=e3339]:\n                          - text: +\n                          - generic [ref=e3340]: ENVIRONMENT_ERROR\n                          - generic [ref=e3341]: =\n                          - generic [ref=e3342]: \"-\"\n                          - generic [ref=e3343]: \"100005\"\n                          - generic [ref=e3344]: \",\"\n                    - row \"21 23 /** 100099 */\" [ref=e3345]:\n                      - cell \"21\" [ref=e3346] [cursor=pointer]\n                      - cell \"23\" [ref=e3347] [cursor=pointer]\n                      - cell /** 100099 */ [ref=e3348]:\n                        - generic [ref=e3350]: /** 100099 */\n                    - row \"22 24 UNKNOWN_ERROR = -100099,\" [ref=e3351]:\n                      - cell \"22\" [ref=e3352] [cursor=pointer]\n                      - cell \"24\" [ref=e3353] [cursor=pointer]\n                      - cell \"UNKNOWN_ERROR = -100099,\" [ref=e3354]:\n                        - generic [ref=e3355]:\n                          - generic [ref=e3356]: UNKNOWN_ERROR\n                          - generic [ref=e3357]: =\n                          - generic [ref=e3358]: \"-\"\n                          - generic [ref=e3359]: \"100099\"\n                          - generic [ref=e3360]: \",\"\n                    - 'row \"23 25 }\" [ref=e3361]':\n                      - cell \"23\" [ref=e3362] [cursor=pointer]\n                      - cell \"25\" [ref=e3363] [cursor=pointer]\n                      - 'cell \"}\" [ref=e3364]':\n                        - generic [ref=e3366]: \"}\"\n                    - row \"24 26\" [ref=e3367]:\n                      - cell \"24\" [ref=e3368] [cursor=pointer]\n                      - cell \"26\" [ref=e3369] [cursor=pointer]\n                      - cell [ref=e3370]\n                    - 'row \"25 - export interface GUIAgentError {\" [ref=e3373]':\n                      - cell \"25\" [ref=e3374] [cursor=pointer]\n                      - cell [ref=e3375] [cursor=pointer]\n                      - 'cell \"- export interface GUIAgentError {\" [ref=e3376]':\n                        - generic [ref=e3377]:\n                          - text: \"-\"\n                          - generic [ref=e3378]: export\n                          - generic [ref=e3379]: interface\n                          - generic [ref=e3380]: GUIAgentError\n                          - generic [ref=e3381]: \"{\"\n                    - 'row \"26 - code: ErrorStatusEnum;\" [ref=e3382]':\n                      - cell \"26\" [ref=e3383] [cursor=pointer]\n                      - cell [ref=e3384] [cursor=pointer]\n                      - 'cell \"- code: ErrorStatusEnum;\" [ref=e3385]':\n                        - generic [ref=e3386]:\n                          - text: \"-\"\n                          - generic [ref=e3387]: code\n                          - text: \":\"\n                          - generic [ref=e3388]: ErrorStatusEnum\n                          - generic [ref=e3389]: ;\n                    - 'row \"27 - error: string;\" [ref=e3390]':\n                      - cell \"27\" [ref=e3391] [cursor=pointer]\n                      - cell [ref=e3392] [cursor=pointer]\n                      - 'cell \"- error: string;\" [ref=e3393]':\n                        - generic [ref=e3394]:\n                          - text: \"-\"\n                          - generic [ref=e3395]: error\n                          - text: \":\"\n                          - generic [ref=e3396]: string\n                          - generic [ref=e3397]: ;\n                    - 'row \"27 + export class GUIAgentError extends Error {\" [ref=e3398]':\n                      - cell [ref=e3399] [cursor=pointer]\n                      - cell \"27\" [ref=e3400] [cursor=pointer]\n                      - 'cell \"+ export class GUIAgentError extends Error {\" [ref=e3401]':\n                        - generic [ref=e3402]:\n                          - text: +\n                          - generic [ref=e3403]: export\n                          - generic [ref=e3404]: class\n                          - generic [ref=e3405]: GUIAgentError\n                          - generic [ref=e3407]: extends\n                          - generic [ref=e3409]: Error\n                          - generic [ref=e3410]: \"{\"\n                    - 'row \"28 + status: ErrorStatusEnum;\" [ref=e3411]':\n                      - cell [ref=e3412] [cursor=pointer]\n                      - cell \"28\" [ref=e3413] [cursor=pointer]\n                      - 'cell \"+ status: ErrorStatusEnum;\" [ref=e3414]':\n                        - generic [ref=e3415]:\n                          - text: +\n                          - generic [ref=e3416]: status\n                          - text: \":\"\n                          - generic [ref=e3417]: ErrorStatusEnum\n                          - generic [ref=e3418]: ;\n                    - 'row \"29 + message: string;\" [ref=e3419]':\n                      - cell [ref=e3420] [cursor=pointer]\n                      - cell \"29\" [ref=e3421] [cursor=pointer]\n                      - 'cell \"+ message: string;\" [ref=e3422]':\n                        - generic [ref=e3423]:\n                          - text: +\n                          - generic [ref=e3424]: message\n                          - text: \":\"\n                          - generic [ref=e3425]: string\n                          - generic [ref=e3426]: ;\n                    - 'row \"28 30 stack?: string;\" [ref=e3427]':\n                      - cell \"28\" [ref=e3428] [cursor=pointer]\n                      - cell \"30\" [ref=e3429] [cursor=pointer]\n                      - 'cell \"stack?: string;\" [ref=e3430]':\n                        - generic [ref=e3431]:\n                          - generic [ref=e3432]: stack\n                          - text: \"?:\"\n                          - generic [ref=e3433]: string\n                          - generic [ref=e3434]: ;\n                    - row \"31 +\" [ref=e3435]:\n                      - cell [ref=e3436] [cursor=pointer]\n                      - cell \"31\" [ref=e3437] [cursor=pointer]\n                      - cell \"+\" [ref=e3438]:\n                        - generic: +\n                    - 'row \"32 + constructor(status: ErrorStatusEnum, message: string, stack?: string) {\" [ref=e3441]':\n                      - cell [ref=e3442] [cursor=pointer]\n                      - cell \"32\" [ref=e3443] [cursor=pointer]\n                      - 'cell \"+ constructor(status: ErrorStatusEnum, message: string, stack?: string) {\" [ref=e3444]':\n                        - generic [ref=e3445]:\n                          - text: +\n                          - generic [ref=e3446]: constructor\n                          - generic [ref=e3447]: (\n                          - generic [ref=e3448]: status\n                          - text: \":\"\n                          - generic [ref=e3449]: ErrorStatusEnum\n                          - generic [ref=e3450]: \",\"\n                          - generic [ref=e3451]: message\n                          - text: \":\"\n                          - generic [ref=e3452]: string\n                          - generic [ref=e3453]: \",\"\n                          - generic [ref=e3454]: stack\n                          - text: \"?:\"\n                          - generic [ref=e3455]: string\n                          - generic [ref=e3456]: )\n                          - generic [ref=e3457]: \"{\"\n                    - row \"33 + super(message);\" [ref=e3458]:\n                      - cell [ref=e3459] [cursor=pointer]\n                      - cell \"33\" [ref=e3460] [cursor=pointer]\n                      - cell \"+ super(message);\" [ref=e3461]:\n                        - generic [ref=e3462]:\n                          - text: +\n                          - generic [ref=e3463]: super\n                          - generic [ref=e3464]: (\n                          - generic [ref=e3465]: message\n                          - generic [ref=e3466]: )\n                          - generic [ref=e3467]: ;\n                    - row \"34 + this.status = status;\" [ref=e3468]:\n                      - cell [ref=e3469] [cursor=pointer]\n                      - cell \"34\" [ref=e3470] [cursor=pointer]\n                      - cell \"+ this.status = status;\" [ref=e3471]:\n                        - generic [ref=e3472]:\n                          - text: +\n                          - generic [ref=e3473]: this\n                          - generic [ref=e3474]: .\n                          - generic [ref=e3475]: status\n                          - generic [ref=e3476]: =\n                          - generic [ref=e3477]: status\n                          - generic [ref=e3478]: ;\n                    - row \"35 + this.message = message;\" [ref=e3479]:\n                      - cell [ref=e3480] [cursor=pointer]\n                      - cell \"35\" [ref=e3481] [cursor=pointer]\n                      - cell \"+ this.message = message;\" [ref=e3482]:\n                        - generic [ref=e3483]:\n                          - text: +\n                          - generic [ref=e3484]: this\n                          - generic [ref=e3485]: .\n                          - generic [ref=e3486]: message\n                          - generic [ref=e3487]: =\n                          - generic [ref=e3488]: message\n                          - generic [ref=e3489]: ;\n                    - row \"36 + this.stack = stack;\" [ref=e3490]:\n                      - cell [ref=e3491] [cursor=pointer]\n                      - cell \"36\" [ref=e3492] [cursor=pointer]\n                      - cell \"+ this.stack = stack;\" [ref=e3493]:\n                        - generic [ref=e3494]:\n                          - text: +\n                          - generic [ref=e3495]: this\n                          - generic [ref=e3496]: .\n                          - generic [ref=e3497]: stack\n                          - generic [ref=e3498]: =\n                          - generic [ref=e3499]: stack\n                          - generic [ref=e3500]: ;\n                    - 'row \"37 + }\" [ref=e3501]':\n                      - cell [ref=e3502] [cursor=pointer]\n                      - cell \"37\" [ref=e3503] [cursor=pointer]\n                      - 'cell \"+ }\" [ref=e3504]':\n                        - generic [ref=e3505]:\n                          - text: +\n                          - generic [ref=e3506]: \"}\"\n                    - 'row \"29 38 }\" [ref=e3507]':\n                      - cell \"29\" [ref=e3508] [cursor=pointer]\n                      - cell \"38\" [ref=e3509] [cursor=pointer]\n                      - 'cell \"}\" [ref=e3510]':\n                        - generic [ref=e3512]: \"}\"\n                    - row \"30 39\" [ref=e3513]:\n                      - cell \"30\" [ref=e3514] [cursor=pointer]\n                      - cell \"39\" [ref=e3515] [cursor=pointer]\n                      - cell [ref=e3516]\n                    - 'row \"31 40 export type Status = `${StatusEnum}`;\" [ref=e3519]':\n                      - cell \"31\" [ref=e3520] [cursor=pointer]\n                      - cell \"40\" [ref=e3521] [cursor=pointer]\n                      - 'cell \"export type Status = `${StatusEnum}`;\" [ref=e3522]':\n                        - generic [ref=e3523]:\n                          - generic [ref=e3524]: export\n                          - generic [ref=e3525]: type\n                          - generic [ref=e3526]: Status\n                          - generic [ref=e3527]: =\n                          - text: \"`${\"\n                          - generic [ref=e3528]: StatusEnum\n                          - generic [ref=e3529]: \"}\"\n                          - text: \"`\"\n                          - generic [ref=e3530]: ;\n                    - 'row \"Expand All @@ -35,6 +44,9 @@ export enum StatusEnum {\" [ref=e3531]':\n                      - cell \"Expand All\" [ref=e3532] [cursor=pointer]:\n                        - link \"Expand All\" [ref=e3533] [cursor=pointer]:\n                          - /url: \"#diff-43cb91a5834423602beb26b90c4cd2cc97c4dedfaa7674bac56c95dbc4a81157\"\n                          - img [ref=e3534] [cursor=pointer]\n                      - 'cell \"@@ -35,6 +44,9 @@ export enum StatusEnum {\" [ref=e3536]'\n                    - row \"35 44 PAUSE = 'pause',\" [ref=e3537]:\n                      - cell \"35\" [ref=e3538] [cursor=pointer]\n                      - cell \"44\" [ref=e3539] [cursor=pointer]\n                      - cell \"PAUSE = 'pause',\" [ref=e3540]:\n                        - generic [ref=e3541]:\n                          - generic [ref=e3542]: PAUSE\n                          - generic [ref=e3543]: =\n                          - generic [ref=e3544]: \"'pause'\"\n                          - generic [ref=e3545]: \",\"\n                    - row \"36 45 END = 'end',\" [ref=e3546]:\n                      - cell \"36\" [ref=e3547] [cursor=pointer]\n                      - cell \"45\" [ref=e3548] [cursor=pointer]\n                      - cell \"END = 'end',\" [ref=e3549]:\n                        - generic [ref=e3550]:\n                          - generic [ref=e3551]: END\n                          - generic [ref=e3552]: =\n                          - generic [ref=e3553]: \"'end'\"\n                          - generic [ref=e3554]: \",\"\n                    - row \"37 46 CALL_USER = 'call_user',\" [ref=e3555]:\n                      - cell \"37\" [ref=e3556] [cursor=pointer]\n                      - cell \"46\" [ref=e3557] [cursor=pointer]\n                      - cell \"CALL_USER = 'call_user',\" [ref=e3558]:\n                        - generic [ref=e3559]:\n                          - generic [ref=e3560]: CALL_USER\n                          - generic [ref=e3561]: =\n                          - generic [ref=e3562]: \"'call_user'\"\n                          - generic [ref=e3563]: \",\"\n                    - row \"47 + /**\" [ref=e3564]:\n                      - cell [ref=e3565] [cursor=pointer]\n                      - cell \"47\" [ref=e3566] [cursor=pointer]\n                      - cell \"+ /**\" [ref=e3567]:\n                        - generic [ref=e3568]:\n                          - text: +\n                          - generic [ref=e3569]: /**\n                    - row \"48 + * @deprecated kept for backward compatibility\" [ref=e3570]:\n                      - cell [ref=e3571] [cursor=pointer]\n                      - cell \"48\" [ref=e3572] [cursor=pointer]\n                      - cell \"+ * @deprecated kept for backward compatibility\" [ref=e3573]:\n                        - generic [ref=e3574]:\n                          - text: +\n                          - generic [ref=e3575]:\n                            - text: \"*\"\n                            - generic [ref=e3576]: \"@deprecated\"\n                            - text: kept for backward compatibility\n                    - row \"49 + */\" [ref=e3577]:\n                      - cell [ref=e3578] [cursor=pointer]\n                      - cell \"49\" [ref=e3579] [cursor=pointer]\n                      - cell \"+ */\" [ref=e3580]:\n                        - generic [ref=e3581]:\n                          - text: +\n                          - generic [ref=e3582]: \"*/\"\n                    - row \"38 50 MAX_LOOP = 'max_loop',\" [ref=e3583]:\n                      - cell \"38\" [ref=e3584] [cursor=pointer]\n                      - cell \"50\" [ref=e3585] [cursor=pointer]\n                      - cell \"MAX_LOOP = 'max_loop',\" [ref=e3586]:\n                        - generic [ref=e3587]:\n                          - generic [ref=e3588]: MAX_LOOP\n                          - generic [ref=e3589]: =\n                          - generic [ref=e3590]: \"'max_loop'\"\n                          - generic [ref=e3591]: \",\"\n                    - row \"39 51 USER_STOPPED = 'user_stopped',\" [ref=e3592]:\n                      - cell \"39\" [ref=e3593] [cursor=pointer]\n                      - cell \"51\" [ref=e3594] [cursor=pointer]\n                      - cell \"USER_STOPPED = 'user_stopped',\" [ref=e3595]:\n                        - generic [ref=e3596]:\n                          - generic [ref=e3597]: USER_STOPPED\n                          - generic [ref=e3598]: =\n                          - generic [ref=e3599]: \"'user_stopped'\"\n                          - generic [ref=e3600]: \",\"\n                    - row \"40 52 ERROR = 'error',\" [ref=e3601]:\n                      - cell \"40\" [ref=e3602] [cursor=pointer]\n                      - cell \"52\" [ref=e3603] [cursor=pointer]\n                      - cell \"ERROR = 'error',\" [ref=e3604]:\n                        - generic [ref=e3605]:\n                          - generic [ref=e3606]: ERROR\n                          - generic [ref=e3607]: =\n                          - generic [ref=e3608]: \"'error'\"\n                          - generic [ref=e3609]: \",\"\n                    - row \"Expand Down\" [ref=e3610]:\n                      - cell \"Expand Down\" [ref=e3611] [cursor=pointer]:\n                        - link \"Expand Down\" [ref=e3612] [cursor=pointer]:\n                          - /url: \"#diff-43cb91a5834423602beb26b90c4cd2cc97c4dedfaa7674bac56c95dbc4a81157\"\n                          - img [ref=e3613] [cursor=pointer]\n                      - cell [ref=e3615]\n            - img [ref=e3617]\n  - contentinfo [ref=e790]:\n    - heading \"Footer\" [level=2] [ref=e791]\n    - generic [ref=e792]:\n      - generic [ref=e793]:\n        - link \"GitHub Homepage\" [ref=e794] [cursor=pointer]:\n          - /url: https://github.com\n          - img [ref=e795] [cursor=pointer]\n        - generic [ref=e797]: © 2025 GitHub, Inc.\n      - navigation \"Footer\" [ref=e798]:\n        - heading \"Footer navigation\" [level=3] [ref=e799]\n        - list \"Footer navigation\" [ref=e800]:\n          - listitem [ref=e801]:\n            - link \"Terms\" [ref=e802] [cursor=pointer]:\n              - /url: https://docs.github.com/site-policy/github-terms/github-terms-of-service\n          - listitem [ref=e803]:\n            - link \"Privacy\" [ref=e804] [cursor=pointer]:\n              - /url: https://docs.github.com/site-policy/privacy-policies/github-privacy-statement\n          - listitem [ref=e805]:\n            - link \"Security\" [ref=e806] [cursor=pointer]:\n              - /url: https://github.com/security\n          - listitem [ref=e807]:\n            - link \"Status\" [ref=e808] [cursor=pointer]:\n              - /url: https://www.githubstatus.com/\n          - listitem [ref=e809]:\n            - link \"Docs\" [ref=e810] [cursor=pointer]:\n              - /url: https://docs.github.com/\n          - listitem [ref=e811]:\n            - link \"Contact\" [ref=e812] [cursor=pointer]:\n              - /url: https://support.github.com?tags=dotcom-footer\n          - listitem [ref=e813]:\n            - button \"Manage cookies\" [ref=e815] [cursor=pointer]\n          - listitem [ref=e816]:\n            - button \"Do not share my personal information\" [ref=e818] [cursor=pointer]\n```"
      }
    ],
    "executionTime": 452
  }
]